{"version":3,"sources":["reportWebVitals.js","components/basic/helper.js","app/theme-manager.js","app/theme-context.js","app/settings.js","components/messages.js","api/config.js","components/basic/event/basic-event.js","api/api.js","api/account-api.js","components/basic/event/basic-subject.js","app/account-manager.js","components/basic/notify.js","assets/icons/AccountCircle.tsx","assets/icons/Add.tsx","assets/icons/Adjust.tsx","assets/icons/ArrowBackIos.tsx","assets/icons/ArrowDownward.tsx","assets/icons/ArrowDropDown.tsx","assets/icons/ArrowDropUp.tsx","assets/icons/ArrowForward.tsx","assets/icons/ArrowUpward.tsx","assets/icons/ChevronLeft.tsx","assets/icons/ChevronRight.tsx","assets/icons/Close.tsx","assets/icons/DarkMode.tsx","assets/icons/Delete.tsx","assets/icons/Edit.tsx","assets/icons/FirstPage.tsx","assets/icons/Folder.tsx","assets/icons/Functions.tsx","assets/icons/Home.tsx","assets/icons/InsertDriveFile.tsx","assets/icons/LastPage.tsx","assets/icons/Login.tsx","assets/icons/MoreVert.tsx","assets/icons/NotificationsActive.tsx","assets/icons/Search.tsx","assets/icons/Sync.tsx","assets/icons/ZoomIn.tsx","components/basic/final-form.js","views/account/captcha.js","views/account/login-form.js","app/az-route.js","api/menu-api.js","components/mainmenu/mainmenu.js","data/table.js","data/applications.js","data/menu-folders.js","data/menus.js","data/columns.js","components/basic/basic-modal.js","components/basic/table/generate-edit-controls.js","views/admin/menu/menu-designer.js","components/basic/table/checkbox.js","components/basic/table/global-filter.js","components/basic/table/table-messages.js","components/basic/table/basic-table-1.js","components/basic/table/data-table.js","components/my-table-messages.js","views/admin/menu/menu-app.js","views/shared/not-found.js","assets/bg/procurement.png","views/home/dashboard/index.js","views/home/inbox/index.js","components/tilemenu/tilemenu.js","views/home/sysmenu/sysmenu-app.js","views/home/landing.js","views/shared/main-layout.js","views/admin/tables/tables-app.js","api/table-designer-api.js","views/admin/form-designer/form-designer-app.js","views/admin/table-designer/edit-group.js","components/table/messages.ts","components/table/table.tsx","views/admin/table-designer/edit-table.js","views/admin/table-designer/header.js","views/admin/table-designer/table-designer-app.js","views/test/basic-table.js","views/test/makeData.js","views/test/basic-table-filters.js","views/test/basic-table-aggregators.js","views/test/basic-table-editors.js","views/test/test-table.js","app.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","helper","elem","list","split","i","length","document","body","classList","add","remove","themeManager","get","localStorage","getItem","set","value","setItem","css","isDark","theme","indexOf","isDarkSidebar","lst","cl","startsWith","push","css_list","getCss","endsWith","t","ThemeContext","createContext","ThemeProvider","props","useState","setTheme","Provider","children","setAttribute","settings","rtl","projectId","title","supportTel","messages","Unknown","NetworkError","InvalidUrl","Error401","Error403","Error404","Error405","Error500","InvalidUserName","InvalidPassword","InvalidCaptcha","PleaseWait","Home","Dashboard","Inbox","SysMenu","Search","NothingFound","New","Edit","Cancel","ConfirmDeleting","Delete","SelectAnApp","Save","ChangesAreSaved","RowIsDeleted","YouAreGoingToDeleteRows","Login","LoginTitle","ConnectionError","Retry","Logout","YouAreNotLoggedIn","IForgotMyPassword","IDontHaveAccount","SupportTel","PageNotFoundTitle","PageNotFoundDescription","Welcome","WelcomeText","Return","LoginHere","WeCannotAuthenticateYou","RedirectToLoginPage","RedirectToHomePage","Profile","Settings","DefaultTheme","LightTheme","DarkTheme","apiConfig","baseUrl","accountUrl","menuUrl","tableDesignerUrl","BasicEvent","self","this","handlers","handler","name","__name","unsubscribe","h","dispatch","args","run","setTimeout","onUnauthorizedEvent","onForbiddenEvent","genericeResponseHandler","response","data","Error","isSuccess","errorMessage","newError","result","message","stack","ex","translateError","status","toString","callAxios","method","url","axios","withCredentials","headers","authorization","api","token","catch","expiry","onUnauthorized","fn","ownerName","onForbidden","call","Promise","resolve","reject","handle_reject","handled","handle_resolve","directCall","accountApi","userName","password","captcha","BasicSubject","initialValue","onChange","asObservable","subscribe","hname","binding","v","next","newValue","authStatusTypes","Connecting","ConnectionFailed","Connected","LoggedIn","LoggedOut","accountSubject","pristine","application","menuFolders","menus","statusSubject","window","addEventListener","event","key","accountManager","logout","all","propName","setAsLoggedOut","isConnecting","isConnectionFailed","isConnected","isLoggedIn","isLoggedOut","onConnected","x","isLoggedin","current","bind","init","displayName","login","sync","Date","now","res","notify","error","toast","closeToast","success","info","warning","dark","close","id","dismiss","SvgAccountCircle","xmlns","width","height","viewBox","d","SvgAdd","SvgAdjust","SvgArrowBackIos","SvgArrowDownward","SvgArrowDropDown","SvgArrowDropUp","SvgArrowForward","SvgArrowUpward","SvgChevronLeft","SvgChevronRight","SvgClose","SvgDarkMode","SvgDelete","SvgEdit","SvgFirstPage","SvgFolder","SvgFunctions","SvgHome","SvgInsertDriveFile","SvgLastPage","SvgLogin","SvgMoreVert","SvgNotificationsActive","SvgSearch","SvgSync","SvgZoomIn","cssFormGroup","size","cssColFormLabel","cssFormLabel","toFormControlClassNames","readonly","controlClassName","input","meta","classNames","cssFormControl","final_from_classes","filled","touched","invalid","valid","modified","dirty","visited","submitFailed","FinalField","label","labelSize","renderLabel","renderInput","type","defaultValue","labelClassName","c1","c2","has_columns","cnLabelColumn","cnControlColumn","doRenderLabel","className","cn","doRenderInput","readOnly","inp","data-meta","JSON","stringify","doRenderValidationError","attr","parse","isNaN","parseFloat","component","row","FinalSelect","values","placeholder","my_control","options","disabled","option","code","cssFormSelect","toSelectControlClassNames","_Final_Check","inline","c","item","doRenderControls","FinalCheck","FinalRadio","Captcha","counter","React","createRef","uid","setUID","ref","maxLength","autoComplete","spellCheck","alt","src","onClick","focus","LoginForm","captchaCounter","setCaptchaCounter","loading","setLoading","history","useHistory","initialValues","onSubmit","trim","render","handleSubmit","submitting","form","errors","style","autoFocus","color","href","AzRoute","Component","rest","setState","loginHere","setLoginHere","reconnect","useEffect","gotoLoginHere","returnFromLoginHere","is_connected","display","fill","maxHeight","menuApi","map","MainMenu","folders","parent","onSelect","selectedFolder","selectedMenu","activeItem","light","parentId","filter","f","MenuFolder","folder","mi","MenuItem","menu","is_open","menuHelper","isOpen","e","FolderIcon","CaretIcon","closed","MenuIcon","badgeText","badgeCss","iconSize","subFolders","Column","isPK","toggleOnClick","editor","validValues","cellStyle","cellClassName","fnFormat","hiddenInTable","hiddenInEditor","category","dir","Table","singularTitle","columns","sortable","filterable","getReactTableColumns","categories","z","Header","accessor","_isSortable","_toggleOnClick","_isKey","_editor","_dir","_cellProps","cell","Cell","is","toLowerCase","debugName","applications","cursor","BasicModal","show","setShow","renderBody","hide","Modal","onHide","Title","Body","GenerateEditControls","insertMode","controls","is_readonly","ltr","_validValues","MenuDesigner","currApp","setApp","onAdd","onUpdate","onDelete","useContext","busy","setBusy","showEditForm","setShowEditForm","showDeleteForm","setShowDeleteForm","setInsertMode","entityTable","setEntityTable","entity","setEntity","setActiveItem","activeItemTable","setActiveItemTable","setSelectedFolder","setSelectedMenu","currFolderId","openEditForm","insert_mode","table","deleteEntity","p","find","onSaveEditForm","tables","variant","replace","Checkbox","forwardRef","indeterminate","defaultRef","useRef","resolvedRef","GlobalFilter","setFilter","target","tableMessages","Refresh","RowsDeleted","RowsSelected","format","BasicTable1","filtrable","selectable","onEdit","onRefresh","useTable","useGlobalFilter","useSortBy","useRowSelect","hooks","allColumns","getToggleAllRowsSelectedProps","getToggleRowSelectedProps","getTableProps","getTableBodyProps","headerGroups","rows","setGlobalFilter","globalFilter","state","prepareRow","selectedFlatRows","toggleAllRowsSelected","count","plural","selection","original","menuMore","gap","edge","maxWidth","headerGroup","getHeaderGroupProps","column","getHeaderProps","getSortByToggleProps","isSorted","isSortedDesc","getRowProps","isSelected","cells","tdprops","getCellProps","is_selected","toggleRowSelected","onTdClick","DataTable","onInsert","useMemo","selectedRows","setSelectedRows","handleClose","onOpenEditor","singular","myValidator","BasicValidator","builder","object","closeButton","validate","Button","Footer","myTableMessages","MenuApp","projects","setProjects","app","setMenuFolders","setMenus","menuProjects","position","zIndex","shadow","ArrowBackIos","Folder","InsertDriveFile","Tabs","defaultActiveKey","Tab","eventKey","newApp","tb","NotFound","borderRadius","fontWeight","textShadow","fontSize","setUser","procurement","TileMenu","SysMenuApp","user","is_dark","location","Landing","backgroundImage","backgroundSize","backgroundColor","minHeight","MainLayout","Comp","menuUser","Appbar","overlapCircle","TablesApp","tableDesignerApi","getGroups","saveGroup","group","g","items","actionName","deleteGroup","groupId","getTable","tableName","saveTable","deleteTable","saveColumn","deleteColumn","columnId","FormDesignerApp","setGroup","setForm","goBack","TableDesignerEditGroup","onChanged","deleting","setDeleting","showDeletingGroup","setShowDeletingGroup","onDeleteClick","showing","showingFiltered","page","gotoPage","firstPage","prevPage","nextPage","lastPage","tableClassName","defaultColumn","enablePaging","enableGrouping","enableSorting","maxDisplayRow","skipReset","showColumnFilter","showColumns","showTableInfo","showPageSize","showSummary","showFooter","border","editable","hideCheckbox","clickAction","selectionMode","tableRef","defaultPageSize","updateData","defaultMessages","filterTypes","text","filterValue","rowValue","undefined","String","tableApi","initialState","pageSize","updateMyData","autoResetPage","autoResetFilters","autoResetSortBy","autoResetSelectedRows","disableMultiSort","useFilters","useGroupBy","useExpanded","usePagination","visibleColumns","groupByBoundary","Filter","_headerProps","_footerProps","radio","footerGroups","canPreviousPage","canNextPage","pageOptions","pageCount","previousPage","setPageSize","pageIndex","groupBy","sortBy","expanded","filters","selectedRowIds","slice","enable_responsive","some","_breakPoint","css_popin_row","getSummary","col","sum","_summary","idx","textAlign","userProps","remUserProps","getFooterProps","_ignoreToggleOnClick","renderCheckboxPlaceholder","checkboxPlaceholder","renderCheckboxHeader","canGroupBy","getGroupByToggleProps","isGrouped","canFilter","rowIndex","Fragment","cellIndex","renderCheckboxCell","getToggleRowExpandedProps","isExpanded","subRows","isAggregated","isPlaceholder","selected","colSpan","_popinCss","getFooterGroupProps","footerGroup","a","b","getTableInfo","TableDesignerEditTable","table_columns","fixed","buttons","expandableTitlebar","showRowsCount","titlebarSize","titlebarColor","onStateChanged","console","log","TableDesignerHeader","onGoBack","onAddGroupClicked","editMode","TableDesignerApp","groups","setGroups","setGroup0","setTable","setColumn","sort","onEditGroupClick","onAddFormClick","onEditTableClick","splice","fuzzyTextFilterFn","matchSorter","keys","BasicTable","fuzzyText","IndeterminateCheckbox","n","s","Number","autoRemove","val","range","len","arr","newPerson","statusChance","Math","random","firstName","namor","generate","words","numbers","lastName","age","floor","visits","progress","DefaultColumnFilter","preFilteredRows","SelectColumnFilter","Set","forEach","SliderColumnFilter","min","max","parseInt","NumberRangeColumnFilter","old","marginRight","marginLeft","filterGreaterThan","roundedMedian","leafValues","round","BTTextEditor","index","setValue","onBlur","BTSelectEditor","TestTableApp","setEnablePaging","setShowTableInfo","setShowSummary","setShowFooter","aggregate","Aggregated","lens","makeDataLevel","depth","makeData","setData","originalData","skipResetRef","model","setModel","App","loginStatus","setLoginStatus","exact","path","ReactDOM","StrictMode","limit","autoClose","hideProgressBar","newestOnTop","closeOnClick","pauseOnFocusLoss","draggable","pauseOnHover","getElementById"],"mappings":"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","file":"static/js/main.0a06dd53.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","//import { createBrowserHistory } from 'history';\r\n//export const history = createBrowserHistory();\r\n\r\nexport const delayedPromise = (delay, fn) =>\r\n    new Promise((resolve, reject) => {\r\n        setTimeout(() => fn(resolve, reject), delay);\r\n    });\r\n\r\nexport const helper = {\r\n    isNullOrUndefined: (x) => x == null || typeof x === \"undefined\",\r\n    isUndefined: (x) => typeof x === \"undefined\",\r\n    isString: (x) => typeof x === \"string\",\r\n    isArray: (x) => Array.isArray(x),\r\n    isFunction: (x) => typeof x === \"function\",\r\n\r\n    isFunctionalComponent: (c) =>\r\n        typeof c === \"function\" &&\r\n        !(c.prototype && c.prototype.isReactComponent),\r\n    isClassComponent: (c) =>\r\n        typeof c === \"function\" &&\r\n        !!(c.prototype && c.prototype.isReactComponent),\r\n\r\n    addClassNames: (elem, list) => {\r\n        if (typeof list === \"string\") list = list.split(\" \");\r\n        for (var i = 0; i < list.length; i++) {\r\n            document.body.classList.add(list[i]);\r\n        }\r\n    },\r\n\r\n    removeClassNames: (elem, list) => {\r\n        if (typeof list === \"string\") list = list.split(\" \");\r\n        for (var i = 0; i < list.length; i++) {\r\n            document.body.classList.remove(list[i]);\r\n        }\r\n    },\r\n\r\n    hexColorToStyle: function (color, text, bg) {\r\n        if (!color || !color.startsWith(\"#\")) return {};\r\n        var style = text ? { color: color } : {};\r\n        return !bg ? style : { ...style, backgroundColor: color };\r\n    },\r\n};\r\n","import { helper } from \"../components/basic/helper\";\r\n\r\nexport const themeManager = {\r\n    get: () => localStorage.getItem(\"theme\"),\r\n\r\n    set: (value) => {\r\n        if (!value) value = \"default\";\r\n        localStorage.setItem(\"theme\", value);\r\n        themeManager.css(value);\r\n    },\r\n\r\n    isDark: (theme) => theme && theme.indexOf(\"dark\") >= 0,\r\n    isDarkSidebar: (theme) =>\r\n        themeManager.isDark(theme) || (theme && theme.indexOf(\"default\") >= 0),\r\n\r\n    css: (value) => {\r\n        var lst = [];\r\n        var cl = document.body.classList;\r\n        for (var i = 0; i < cl.length; i++) {\r\n            if (cl[i].startsWith(\"theme-\")) lst.push(cl[i]);\r\n        }\r\n        helper.removeClassNames(document.body, lst);\r\n        var css_list = themeManager.getCss(value);\r\n        helper.addClassNames(document.body, css_list);\r\n    },\r\n\r\n    getCss: (value) => {\r\n        var list = [];\r\n        if (!value) return list;\r\n        list.push(\"theme-\" + value);\r\n        if (value.startsWith(\"bs-\")) list.push(\"theme-bs\");\r\n        if (value.startsWith(\"mui-\")) list.push(\"theme-mui\");\r\n        if (value.endsWith(\"-default\")) list.push(\"theme-light\");\r\n        if (value.endsWith(\"-light\")) list.push(\"theme-light\");\r\n        if (value.endsWith(\"-dark\")) list.push(\"theme-dark\");\r\n        return list;\r\n    },\r\n};\r\nvar t = themeManager.get();\r\nif (!t) t = \"mui-light\";\r\nthemeManager.css(t);\r\n","import React, { useState, createContext } from \"react\";\r\nimport { themeManager } from \"./theme-manager\";\r\n\r\nexport const ThemeContext = createContext();\r\n\r\nexport const ThemeProvider = (props) => {\r\n    const [theme, setTheme] = useState(themeManager.get());\r\n\r\n    const changeTheme = (value) => {\r\n        if (!value) value = \"default\";\r\n        themeManager.set(value);\r\n        setTheme(value);\r\n    };\r\n\r\n    return <ThemeContext.Provider value={[theme, changeTheme]}>{props.children}</ThemeContext.Provider>;\r\n};\r\n","const rtl = false;\r\n\r\ndocument.body.setAttribute(\"dir\", rtl ? \"rtl\" : \"ltr\");\r\n//document.body.classList.remove('rtl', 'ltr');\r\n//document.body.classList.add(rtl ? 'rtl' : 'ltr');\r\n\r\nexport const settings = {\r\n    rtl: rtl,\r\n    projectId: \"project1\",\r\n    title: \"Project 1\",\r\n    supportTel: \"+(98)9124147738\",\r\n};\r\n\r\nexport default settings;\r\n","export const messages = {\r\n    Unknown: \"خطای نامشخص\",\r\n    NetworkError: \"سرویس در دسترس نمی باشد\",\r\n    InvalidUrl: \"آدرس وب سرویس اشتباه است\",\r\n    Error401: \"دسترسی غیر مجاز - 401\",\r\n    Error403: \"دسترسی غیر مجاز - 403\",\r\n    Error404: \"صفحه مورد نظر یافت نشد\",\r\n    Error405: \"خطای برنامه - 405\",\r\n    Error500: \"خطایی در سمت سرور رخ داده است\",\r\n\r\n    InvalidUserName: \"نام کاربری نامعتبر است\",\r\n    InvalidPassword: \"رمز ورود نامعتبر است\",\r\n    InvalidCaptcha: \"متن تصویر نامعتبر است\",\r\n    PleaseWait: \"لطفا چند لحظه صبر کنید\",\r\n\r\n    Home: \"داشبورد\",\r\n    Dashboard: \"داشبورد\",\r\n    Inbox: \"کارتابل\",\r\n    SysMenu: \"منوی اصلی\",\r\n\r\n    Search: \"جستجو\",\r\n    NothingFound: \"موردی یافت نشد\",\r\n    New: \"ایجاد\",\r\n    Edit: \"ویرایش\",\r\n    Cancel: \"انصراف\",\r\n    ConfirmDeleting: \"تایید حذف رکورد\",\r\n    Delete: \"حذف\",\r\n    SelectAnApp: \"سیستم مورد نظر را انتخاب کنید:\",\r\n    Save: \"ثبت تغییرات\",\r\n    ChangesAreSaved: \"تغییرات با موفقیت ذخیره شد\",\r\n    RowIsDeleted: \"رکورد مورد نظر حذف شد\",\r\n    YouAreGoingToDeleteRows: \"شما در حال حذف {count} ردیف هستید!\",\r\n    Login: \"وارد شوید!\",\r\n    LoginTitle: \"ورود به سیستم\",\r\n    ConnectionError: \"خطا در برقراری ارتباط\",\r\n    Retry: \"تلاش مجدد\",\r\n\r\n    Logout: \"خروج از سیستم\",\r\n    YouAreNotLoggedIn: \"ابتدا وارد سیستم شوید\",\r\n    IForgotMyPassword: \"رمز ورود را فراموش کردم\",\r\n    IDontHaveAccount: \"من حساب کاربری ندارم\",\r\n    SupportTel: \"تلفن پشتیبانی\",\r\n    PageNotFoundTitle: \"404\",\r\n    PageNotFoundDescription: \"The page you are looking for does not exits\",\r\n    Welcome: \"خوش آمدید!\",\r\n    WelcomeText: \"متن دلخواه برای راهنمایی کاربر\",\r\n\r\n    Return: \"بازگشت\",\r\n    LoginHere: \"همینجا وارد سایت شوید\",\r\n    WeCannotAuthenticateYou: \"ما نمی توانیم شما را احراز هویت کنیم\",\r\n    RedirectToLoginPage: \"انتقال به صفحه لاگین سایت\",\r\n    RedirectToHomePage: \"انتقال به صفحه اصلی سایت\",\r\n\r\n    Profile: \"پروفایل\",\r\n    Settings: \"تنظیمات\",\r\n    DefaultTheme: \"قالب پیش فرض\",\r\n    LightTheme: \"قالب روشن\",\r\n    DarkTheme: \"قالب تاریک\",\r\n};\r\n","const port = \"5001\"; //44356\r\n\r\nexport const apiConfig = {\r\n    baseUrl: \"https://localhost:\" + port,\r\n    accountUrl: \"https://localhost:\" + port + \"/account\",\r\n    menuUrl: \"https://localhost:\" + port + \"/menu\",\r\n    tableDesignerUrl: \"https://localhost:\" + port + \"/TableDesigner\",\r\n};\r\n","\r\nexport function BasicEvent() {\r\n    var self = this;\r\n    var handlers = [];\r\n\r\n    self.add = (handler, name) => {\r\n        handler.__name = name;\r\n        handlers.push(handler);\r\n        //console.log('>> >> add ' + handler.__name, handlers.length);\r\n        return {\r\n            remove: () => self.remove(handler),\r\n            unsubscribe: () => self.remove(handler),\r\n        };\r\n    }\r\n\r\n    self.remove = handler => {\r\n        var list = [];\r\n        for (var i = 0; i < handlers.length; i++) {\r\n            var h = handlers[i];\r\n            if (h !== handler) {\r\n                list.push(h);\r\n            }\r\n        }\r\n        handlers = list;\r\n        //console.log('>> >> remove ' + handler.__name, handlers.length);\r\n    }\r\n\r\n    self.dispatch = (...args) => {\r\n        var list = [...handlers];\r\n        for (let i = 0; i < list.length; i++) {\r\n            this.run(list[i], ...args);\r\n        }\r\n    }\r\n\r\n    self.run = (handler, ...args) => {\r\n        //console.log(`>> >> ${handler.__name}`, args[0]);\r\n        //handler(...args);\r\n        setTimeout(() => { handler(...args) }, 0);\r\n    }\r\n}\r\n","import axios from \"axios\";\r\nimport { messages } from \"../components/messages\";\r\nimport settings from \"../app/settings\";\r\nimport { apiConfig } from \"./config\";\r\nimport { BasicEvent } from \"../components/basic/event/basic-event\";\r\n\r\nconst withCredentials = true;\r\n\r\nconst onUnauthorizedEvent = new BasicEvent();\r\nconst onForbiddenEvent = new BasicEvent();\r\n\r\nconst genericeResponseHandler = (response) => {\r\n    var data = response.data;\r\n    if (!data) throw new Error(\"invalid response!\");\r\n    if (!data.isSuccess) {\r\n        if (data.errorMessage === \"401\") throw newError(messages.Error401, \"401\");\r\n        if (data.errorMessage === \"403\") throw newError(messages.Error403, \"403\");\r\n        throw newError(data.errorMessage, \"error\");\r\n    }\r\n    return data.result;\r\n};\r\n\r\nfunction newError(message, name, stack) {\r\n    var ex = new Error(message);\r\n    if (!!name) ex.name = name;\r\n    if (!!stack) ex.stack = stack;\r\n    ex.stack = null;\r\n    return ex;\r\n}\r\n\r\nfunction translateError(ex) {\r\n    if (!ex) throw newError(messages.Unknown, \"Unknown\");\r\n    if (ex.response) {\r\n        if (ex.response.status === 401) throw newError(messages.Error401, \"401\");\r\n        if (ex.response.status === 403) throw newError(messages.Error403, \"403\");\r\n        if (ex.response.status === 404) throw newError(messages.Error404, \"404\");\r\n        if (ex.response.status === 405) throw newError(messages.Error405, \"404\");\r\n        if (ex.response.status === 500) throw newError(messages.Error500, \"500\");\r\n    }\r\n    if (ex instanceof Error) {\r\n        if (ex.name === \"401\" || ex.name === \"403\") throw ex;\r\n    }\r\n\r\n    var message = ex.message ? ex.message : ex.toString ? ex.toString() : ex;\r\n    var stack = ex.stack;\r\n\r\n    if (message === \"Network Error\") throw newError(messages.NetworkError, \"NetworkError\", stack);\r\n    if (message.startsWith(\"Failed to execute 'open' on 'XMLHttpRequest': Invalid URL\")) throw newError(messages.InvalidUrl, \"InvalidUrl\", stack);\r\n    throw newError(message, \"Error\");\r\n}\r\n\r\nfunction callAxios(method, url, data) {\r\n    return axios({\r\n        url,\r\n        data,\r\n        withCredentials,\r\n        method,\r\n        headers: {\r\n            authorization: \"Bearer \" + api.token,\r\n        },\r\n    })\r\n        .then(genericeResponseHandler)\r\n        .catch(translateError);\r\n}\r\n\r\nexport const api = {\r\n    token: null,\r\n    expiry: 0,\r\n\r\n    onUnauthorized: (fn, ownerName) => onUnauthorizedEvent.add(fn, ownerName + \".onUnauthorized\"),\r\n    onForbidden: (fn, ownerName) => onForbiddenEvent.add(fn, ownerName + \".onForbidden\"),\r\n\r\n    call: (method, url, data) =>\r\n        new Promise((resolve, reject) => {\r\n            const handle_reject = (ex) => {\r\n                if (ex.name === \"401\") {\r\n                    onUnauthorizedEvent.dispatch(ex);\r\n                    ex.handled = true;\r\n                }\r\n                if (ex.name === \"403\") {\r\n                    onForbiddenEvent.dispatch(ex);\r\n                    ex.handled = true;\r\n                }\r\n                reject(ex);\r\n            };\r\n\r\n            const handle_resolve = (data) => {\r\n                resolve(data);\r\n            };\r\n\r\n            return callAxios(method, url, data)\r\n                .then(handle_resolve)\r\n                .catch((ex) => {\r\n                    if (ex.name !== \"401\") handle_reject(ex);\r\n                    else {\r\n                        callAxios(\"post\", apiConfig.accountUrl + \"/refresh/\" + settings.projectId)\r\n                            .then((result) => {\r\n                                api.token = result.token;\r\n                                api.expiry = result.expiry;\r\n                                callAxios(method, url, data).then(handle_resolve).catch(handle_reject);\r\n                            })\r\n                            .catch(handle_reject);\r\n                    }\r\n                });\r\n        }),\r\n\r\n    directCall: (method, url, data) =>\r\n        callAxios(method, url, data).catch((ex) => {\r\n            if (ex.name === \"401\") {\r\n                onUnauthorizedEvent.dispatch(ex);\r\n                ex.handled = true;\r\n            }\r\n            if (ex.name === \"403\") {\r\n                onForbiddenEvent.dispatch(ex);\r\n                ex.handled = true;\r\n            }\r\n            throw ex;\r\n        }),\r\n};\r\n","import settings from \"../app/settings\";\r\nimport { api } from \"./api\";\r\nimport { apiConfig } from \"./config\";\r\n\r\nexport const accountApi = {\r\n    login: ({ userName, password, captcha }) =>\r\n        api.directCall(\r\n            \"post\",\r\n            apiConfig.accountUrl + \"/login/\" + settings.projectId,\r\n            { userName, password, captcha }\r\n        ),\r\n    userInfo: () =>\r\n        api.directCall(\r\n            \"post\",\r\n            apiConfig.accountUrl + \"/user-info/\" + settings.projectId\r\n        ),\r\n    logout: () => api.directCall(\"post\", apiConfig.accountUrl + \"/logout\"),\r\n    refresh: () => api.refresh(settings.projectId),\r\n};\r\n","import { BasicEvent } from './basic-event'\r\n\r\n\r\nexport function BasicSubject(initialValue, name) {\r\n    var self = this;\r\n    var onChange = new BasicEvent();\r\n\r\n    self.value = initialValue;\r\n\r\n    self.asObservable = () => self;\r\n\r\n    self.subscribe = (handler, hname) => {\r\n        var binding = onChange.add(handler, name + '.' + hname);\r\n        var v = self.value;\r\n        onChange.run(handler, v);\r\n        return binding;\r\n    }\r\n\r\n    self.next = newValue => {\r\n        self.value = newValue;\r\n        onChange.dispatch(newValue);\r\n    }\r\n}\r\n","import { accountApi } from \"../api/account-api\";\r\nimport { api } from \"../api/api\";\r\nimport { BasicSubject } from \"../components/basic/event/basic-subject\";\r\n\r\nconst authStatusTypes = {\r\n    Connecting: \"connecting\",\r\n    ConnectionFailed: \"connection-failed\",\r\n    Connected: \"connected\",\r\n    LoggedIn: \"logged-in\",\r\n    LoggedOut: \"logged-out\",\r\n};\r\n\r\nconst accountSubject = new BasicSubject({ pristine: true, application: {}, menuFolders: [], menus: [] }, \"acc\");\r\nconst statusSubject = new BasicSubject(authStatusTypes.Connecting, \"connection\");\r\n\r\nwindow.addEventListener(\"storage\", function (event) {\r\n    if (event.key === \"sync-logout\") accountManager.logout();\r\n});\r\n\r\nfunction logout(sync) {\r\n    if (!api.token) return;\r\n    accountSubject.next({ menuFolders: [], menus: [] });\r\n    if (sync) localStorage.setItem(\"sync-logout\", Date.now());\r\n    var res = accountApi.logout();\r\n    accountManager.status.set(authStatusTypes.LoggedOut);\r\n    return res;\r\n}\r\n\r\nexport const accountManager = {\r\n    status: {\r\n        all: () => {\r\n            var list = [];\r\n            for (var propName in authStatusTypes) {\r\n                list.push(authStatusTypes[propName]);\r\n            }\r\n            return list;\r\n        },\r\n\r\n        get: () => statusSubject.value,\r\n        set: (value) => {\r\n            if (statusSubject.value === value) return;\r\n            statusSubject.next(value);\r\n        },\r\n        setAsLoggedOut: () => accountManager.status.set(authStatusTypes.LoggedOut),\r\n\r\n        isConnecting: () => statusSubject.value === authStatusTypes.Connecting,\r\n        isConnectionFailed: () => statusSubject.value === authStatusTypes.ConnectionFailed,\r\n        isConnected: () => statusSubject.value === authStatusTypes.Connected || statusSubject.value === authStatusTypes.LoggedIn,\r\n        isLoggedIn: () => statusSubject.value === authStatusTypes.LoggedIn,\r\n        isLoggedOut: () => statusSubject.value === authStatusTypes.LoggedOut,\r\n        onChange: (fn, ownerName) => statusSubject.asObservable().subscribe(fn, ownerName + \".bind\"),\r\n        onConnected: (fn, ownerName) =>\r\n            statusSubject.asObservable().subscribe((x) => {\r\n                if (accountManager.status.isConnected() || accountManager.status.isLoggedIn()) fn();\r\n                return x;\r\n            }, ownerName + \".onConnected\"),\r\n    },\r\n\r\n    isLoggedin: () => !!api.token,\r\n\r\n    current: () => accountSubject.value,\r\n\r\n    bind: (fn, ownerName) => accountSubject.asObservable().subscribe(fn, ownerName + \".bind\"),\r\n\r\n    init: () => {\r\n        accountManager.status.set(authStatusTypes.Connecting);\r\n        return accountApi\r\n            .userInfo()\r\n            .then((result) => {\r\n                api.token = result.token;\r\n                api.expiry = result.expiry;\r\n                //settings.title = result.projectTitle;\r\n                var x = {\r\n                    displayName: result.displayName,\r\n                    menuFolders: result.menuFolders,\r\n                    menus: result.menus,\r\n                };\r\n                accountSubject.next(x);\r\n                accountManager.status.set(authStatusTypes.Connected);\r\n                return x;\r\n            })\r\n            .catch((ex) => {\r\n                if (ex.name === \"401\") accountManager.status.set(authStatusTypes.LoggedOut);\r\n                else accountManager.status.set(authStatusTypes.ConnectionFailed);\r\n                throw ex;\r\n            });\r\n    },\r\n\r\n    login: ({ userName, password, captcha }) =>\r\n        accountApi.login({ userName, password, captcha }).then((result) => {\r\n            api.token = result.token;\r\n            api.expiry = result.expiry;\r\n            //settings.title = result.projectTitle;\r\n            var x = {\r\n                displayName: result.displayName,\r\n                menuFolders: result.menuFolders,\r\n                menus: result.menus,\r\n            };\r\n            accountSubject.next(x);\r\n            accountManager.status.set(authStatusTypes.LoggedIn);\r\n            return result;\r\n        }),\r\n    logout: () => logout(true),\r\n};\r\n\r\nexport default accountManager;\r\n","import { toast } from \"react-toastify\";\r\n\r\nexport const notify = {\r\n    error: (title, message, props) => {\r\n        if (title instanceof Error) {\r\n            var ex = title;\r\n            title = ex.message;\r\n        }\r\n        else if (title === \"object\" && title.response) {\r\n            const ex = title;\r\n            title = ex.response.data;\r\n            message = ex.toString();\r\n        }\r\n        if (!message) toast.error(title);\r\n        else toast.error(({ closeToast }) => <><h5>{title}</h5><small>{message}</small></>, props);\r\n    },\r\n\r\n    success: (title, message, props) => {\r\n        if (!message) toast.success(title);\r\n        else toast.success(({ closeToast }) => <><h5>{title}</h5><small>{message}</small></>, props);\r\n    },\r\n\r\n    info: (title, message, props) => {\r\n        if (!message) toast.info(title);\r\n        else toast.info(({ closeToast }) => <><h5>{title}</h5><small>{message}</small></>, props);\r\n    },\r\n\r\n    warning: (title, message, props) => {\r\n        if (!message) toast.info(title);\r\n        else toast.warning(({ closeToast }) => <><h5>{title}</h5><small>{message}</small></>, props);\r\n    },\r\n\r\n    dark: (title, message, props) => {\r\n        if (!message) toast.info(title);\r\n        else toast.dark(({ closeToast }) => <><h5>{title}</h5><small>{message}</small></>, props);\r\n    },\r\n\r\n    close: id => toast.dismiss(id),\r\n}","import * as React from \"react\";\r\n\r\nfunction SvgAccountCircle(props: React.SVGProps<SVGSVGElement>) {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width=\"1em\"\r\n      height=\"1em\"\r\n      viewBox=\"0 0 24 24\"\r\n      {...props}\r\n    >\r\n      <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zM7.07 18.28c.43-.9 3.05-1.78 4.93-1.78s4.51.88 4.93 1.78C15.57 19.36 13.86 20 12 20s-3.57-.64-4.93-1.72zm11.29-1.45c-1.43-1.74-4.9-2.33-6.36-2.33s-4.93.59-6.36 2.33A7.95 7.95 0 014 12c0-4.41 3.59-8 8-8s8 3.59 8 8c0 1.82-.62 3.49-1.64 4.83zM12 6c-1.94 0-3.5 1.56-3.5 3.5S10.06 13 12 13s3.5-1.56 3.5-3.5S13.94 6 12 6zm0 5c-.83 0-1.5-.67-1.5-1.5S11.17 8 12 8s1.5.67 1.5 1.5S12.83 11 12 11z\" />\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default SvgAccountCircle;\r\n","import * as React from \"react\";\r\n\r\nfunction SvgAdd(props: React.SVGProps<SVGSVGElement>) {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width=\"1em\"\r\n      height=\"1em\"\r\n      viewBox=\"0 0 24 24\"\r\n      {...props}\r\n    >\r\n      <path d=\"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\" />\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default SvgAdd;\r\n","import * as React from \"react\";\r\n\r\nfunction SvgAdjust(props: React.SVGProps<SVGSVGElement>) {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width=\"1em\"\r\n      height=\"1em\"\r\n      viewBox=\"0 0 24 24\"\r\n      {...props}\r\n    >\r\n      <path d=\"M12 2C6.49 2 2 6.49 2 12s4.49 10 10 10 10-4.49 10-10S17.51 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8zm3-8c0 1.66-1.34 3-3 3s-3-1.34-3-3 1.34-3 3-3 3 1.34 3 3z\" />\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default SvgAdjust;\r\n","import * as React from \"react\";\r\n\r\nfunction SvgArrowBackIos(props: React.SVGProps<SVGSVGElement>) {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width=\"1em\"\r\n      height=\"1em\"\r\n      viewBox=\"0 0 24 24\"\r\n      {...props}\r\n    >\r\n      <path d=\"M17.51 3.87L15.73 2.1 5.84 12l9.9 9.9 1.77-1.77L9.38 12l8.13-8.13z\" />\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default SvgArrowBackIos;\r\n","import * as React from \"react\";\r\n\r\nfunction SvgArrowDownward(props: React.SVGProps<SVGSVGElement>) {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width=\"1em\"\r\n      height=\"1em\"\r\n      viewBox=\"0 0 24 24\"\r\n      {...props}\r\n    >\r\n      <path d=\"M20 12l-1.41-1.41L13 16.17V4h-2v12.17l-5.58-5.59L4 12l8 8 8-8z\" />\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default SvgArrowDownward;\r\n","import * as React from \"react\";\r\n\r\nfunction SvgArrowDropDown(props: React.SVGProps<SVGSVGElement>) {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width=\"1em\"\r\n      height=\"1em\"\r\n      viewBox=\"0 0 24 24\"\r\n      {...props}\r\n    >\r\n      <path d=\"M7 10l5 5 5-5H7z\" />\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default SvgArrowDropDown;\r\n","import * as React from \"react\";\r\n\r\nfunction SvgArrowDropUp(props: React.SVGProps<SVGSVGElement>) {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width=\"1em\"\r\n      height=\"1em\"\r\n      viewBox=\"0 0 24 24\"\r\n      {...props}\r\n    >\r\n      <path d=\"M7 14l5-5 5 5H7z\" />\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default SvgArrowDropUp;\r\n","import * as React from \"react\";\r\n\r\nfunction SvgArrowForward(props: React.SVGProps<SVGSVGElement>) {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width=\"1em\"\r\n      height=\"1em\"\r\n      viewBox=\"0 0 24 24\"\r\n      {...props}\r\n    >\r\n      <path d=\"M12 4l-1.41 1.41L16.17 11H4v2h12.17l-5.58 5.59L12 20l8-8-8-8z\" />\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default SvgArrowForward;\r\n","import * as React from \"react\";\r\n\r\nfunction SvgArrowUpward(props: React.SVGProps<SVGSVGElement>) {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width=\"1em\"\r\n      height=\"1em\"\r\n      viewBox=\"0 0 24 24\"\r\n      {...props}\r\n    >\r\n      <path d=\"M4 12l1.41 1.41L11 7.83V20h2V7.83l5.58 5.59L20 12l-8-8-8 8z\" />\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default SvgArrowUpward;\r\n","import * as React from \"react\";\r\n\r\nfunction SvgChevronLeft(props: React.SVGProps<SVGSVGElement>) {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width=\"1em\"\r\n      height=\"1em\"\r\n      viewBox=\"0 0 24 24\"\r\n      {...props}\r\n    >\r\n      <path d=\"M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12l4.58-4.59z\" />\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default SvgChevronLeft;\r\n","import * as React from \"react\";\r\n\r\nfunction SvgChevronRight(props: React.SVGProps<SVGSVGElement>) {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width=\"1em\"\r\n      height=\"1em\"\r\n      viewBox=\"0 0 24 24\"\r\n      {...props}\r\n    >\r\n      <path d=\"M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6-6-6z\" />\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default SvgChevronRight;\r\n","import * as React from \"react\";\r\n\r\nfunction SvgClose(props: React.SVGProps<SVGSVGElement>) {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width=\"1em\"\r\n      height=\"1em\"\r\n      viewBox=\"0 0 24 24\"\r\n      {...props}\r\n    >\r\n      <path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12 19 6.41z\" />\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default SvgClose;\r\n","import * as React from \"react\";\r\n\r\nfunction SvgDarkMode(props: React.SVGProps<SVGSVGElement>) {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width=\"1em\"\r\n      height=\"1em\"\r\n      viewBox=\"0 0 24 24\"\r\n      {...props}\r\n    >\r\n      <path d=\"M9.37 5.51A7.35 7.35 0 009.1 7.5c0 4.08 3.32 7.4 7.4 7.4.68 0 1.35-.09 1.99-.27A7.014 7.014 0 0112 19c-3.86 0-7-3.14-7-7 0-2.93 1.81-5.45 4.37-6.49zM12 3a9 9 0 109 9c0-.46-.04-.92-.1-1.36a5.389 5.389 0 01-4.4 2.26 5.403 5.403 0 01-3.14-9.8c-.44-.06-.9-.1-1.36-.1z\" />\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default SvgDarkMode;\r\n","import * as React from \"react\";\r\n\r\nfunction SvgDelete(props: React.SVGProps<SVGSVGElement>) {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width=\"1em\"\r\n      height=\"1em\"\r\n      viewBox=\"0 0 24 24\"\r\n      {...props}\r\n    >\r\n      <path d=\"M16 9v10H8V9h8m-1.5-6h-5l-1 1H5v2h14V4h-3.5l-1-1zM18 7H6v12c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7z\" />\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default SvgDelete;\r\n","import * as React from \"react\";\r\n\r\nfunction SvgEdit(props: React.SVGProps<SVGSVGElement>) {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width=\"1em\"\r\n      height=\"1em\"\r\n      viewBox=\"0 0 24 24\"\r\n      {...props}\r\n    >\r\n      <path d=\"M14.06 9.02l.92.92L5.92 19H5v-.92l9.06-9.06M17.66 3c-.25 0-.51.1-.7.29l-1.83 1.83 3.75 3.75 1.83-1.83a.996.996 0 000-1.41l-2.34-2.34c-.2-.2-.45-.29-.71-.29zm-3.6 3.19L3 17.25V21h3.75L17.81 9.94l-3.75-3.75z\" />\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default SvgEdit;\r\n","import * as React from \"react\";\r\n\r\nfunction SvgFirstPage(props: React.SVGProps<SVGSVGElement>) {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width=\"1em\"\r\n      height=\"1em\"\r\n      viewBox=\"0 0 24 24\"\r\n      {...props}\r\n    >\r\n      <path d=\"M18.41 16.59L13.82 12l4.59-4.59L17 6l-6 6 6 6 1.41-1.41zM6 6h2v12H6V6z\" />\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default SvgFirstPage;\r\n","import * as React from \"react\";\r\n\r\nfunction SvgFolder(props: React.SVGProps<SVGSVGElement>) {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width=\"1em\"\r\n      height=\"1em\"\r\n      viewBox=\"0 0 24 24\"\r\n      {...props}\r\n    >\r\n      <path d=\"M9.17 6l2 2H20v10H4V6h5.17M10 4H4c-1.1 0-1.99.9-1.99 2L2 18c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V8c0-1.1-.9-2-2-2h-8l-2-2z\" />\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default SvgFolder;\r\n","import * as React from \"react\";\r\n\r\nfunction SvgFunctions(props: React.SVGProps<SVGSVGElement>) {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width=\"1em\"\r\n      height=\"1em\"\r\n      viewBox=\"0 0 24 24\"\r\n      {...props}\r\n    >\r\n      <path d=\"M18 4H6v2l6.5 6L6 18v2h12v-3h-7l5-5-5-5h7V4z\" />\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default SvgFunctions;\r\n","import * as React from \"react\";\r\n\r\nfunction SvgHome(props: React.SVGProps<SVGSVGElement>) {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width=\"1em\"\r\n      height=\"1em\"\r\n      viewBox=\"0 0 24 24\"\r\n      {...props}\r\n    >\r\n      <path d=\"M12 5.69l5 4.5V18h-2v-6H9v6H7v-7.81l5-4.5M12 3L2 12h3v8h6v-6h2v6h6v-8h3L12 3z\" />\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default SvgHome;\r\n","import * as React from \"react\";\r\n\r\nfunction SvgInsertDriveFile(props: React.SVGProps<SVGSVGElement>) {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width=\"1em\"\r\n      height=\"1em\"\r\n      viewBox=\"0 0 24 24\"\r\n      {...props}\r\n    >\r\n      <path d=\"M14 2H6c-1.1 0-1.99.9-1.99 2L4 20c0 1.1.89 2 1.99 2H18c1.1 0 2-.9 2-2V8l-6-6zM6 20V4h7v5h5v11H6z\" />\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default SvgInsertDriveFile;\r\n","import * as React from \"react\";\r\n\r\nfunction SvgLastPage(props: React.SVGProps<SVGSVGElement>) {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width=\"1em\"\r\n      height=\"1em\"\r\n      viewBox=\"0 0 24 24\"\r\n      {...props}\r\n    >\r\n      <path d=\"M5.59 7.41L10.18 12l-4.59 4.59L7 18l6-6-6-6-1.41 1.41zM16 6h2v12h-2V6z\" />\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default SvgLastPage;\r\n","import * as React from \"react\";\r\n\r\nfunction SvgLogin(props: React.SVGProps<SVGSVGElement>) {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width=\"1em\"\r\n      height=\"1em\"\r\n      viewBox=\"0 0 24 24\"\r\n      {...props}\r\n    >\r\n      <path d=\"M11 7L9.6 8.4l2.6 2.6H2v2h10.2l-2.6 2.6L11 17l5-5-5-5zm9 12h-8v2h8c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2h-8v2h8v14z\" />\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default SvgLogin;\r\n","import * as React from \"react\";\r\n\r\nfunction SvgMoreVert(props: React.SVGProps<SVGSVGElement>) {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width=\"1em\"\r\n      height=\"1em\"\r\n      viewBox=\"0 0 24 24\"\r\n      {...props}\r\n    >\r\n      <path d=\"M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\" />\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default SvgMoreVert;\r\n","import * as React from \"react\";\r\n\r\nfunction SvgNotificationsActive(props: React.SVGProps<SVGSVGElement>) {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width=\"1em\"\r\n      height=\"1em\"\r\n      viewBox=\"0 0 24 24\"\r\n      {...props}\r\n    >\r\n      <path d=\"M12 22c1.1 0 2-.9 2-2h-4c0 1.1.9 2 2 2zm6-6v-5c0-3.07-1.63-5.64-4.5-6.32V4c0-.83-.67-1.5-1.5-1.5s-1.5.67-1.5 1.5v.68C7.64 5.36 6 7.92 6 11v5l-2 2v1h16v-1l-2-2zm-2 1H8v-6c0-2.48 1.51-4.5 4-4.5s4 2.02 4 4.5v6zM7.58 4.08L6.15 2.65C3.75 4.48 2.17 7.3 2.03 10.5h2a8.445 8.445 0 013.55-6.42zm12.39 6.42h2c-.15-3.2-1.73-6.02-4.12-7.85l-1.42 1.43a8.495 8.495 0 013.54 6.42z\" />\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default SvgNotificationsActive;\r\n","import * as React from \"react\";\r\n\r\nfunction SvgSearch(props: React.SVGProps<SVGSVGElement>) {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width=\"1em\"\r\n      height=\"1em\"\r\n      viewBox=\"0 0 24 24\"\r\n      {...props}\r\n    >\r\n      <path d=\"M15.5 14h-.79l-.28-.27A6.471 6.471 0 0016 9.5 6.5 6.5 0 109.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\" />\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default SvgSearch;\r\n","import * as React from \"react\";\r\n\r\nfunction SvgSync(props: React.SVGProps<SVGSVGElement>) {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width=\"1em\"\r\n      height=\"1em\"\r\n      viewBox=\"0 0 24 24\"\r\n      {...props}\r\n    >\r\n      <path d=\"M12 4V1L8 5l4 4V6c3.31 0 6 2.69 6 6 0 1.01-.25 1.97-.7 2.8l1.46 1.46A7.93 7.93 0 0020 12c0-4.42-3.58-8-8-8zm0 14c-3.31 0-6-2.69-6-6 0-1.01.25-1.97.7-2.8L5.24 7.74A7.93 7.93 0 004 12c0 4.42 3.58 8 8 8v3l4-4-4-4v3z\" />\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default SvgSync;\r\n","import * as React from \"react\";\r\n\r\nfunction SvgZoomIn(props: React.SVGProps<SVGSVGElement>) {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width=\"1em\"\r\n      height=\"1em\"\r\n      viewBox=\"0 0 24 24\"\r\n      {...props}\r\n    >\r\n      <path d=\"M15.5 14h-.79l-.28-.27A6.471 6.471 0 0016 9.5 6.5 6.5 0 109.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14zm.5-7H9v2H7v1h2v2h1v-2h2V9h-2z\" />\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default SvgZoomIn;\r\n","import React from \"react\";\r\nimport classNames from \"classnames\";\r\nimport { Field } from \"react-final-form\";\r\n\r\nconst cssFormGroup = (size) => (size === \"sm\" ? \"mb-2\" : \"mb-3\");\r\nconst cssColFormLabel = (size) => (size === \"sm\" ? \"col-form-label col-form-label-sm\" : \"col-form-label\");\r\nconst cssFormLabel = (size) => (size === \"sm\" ? \"form-label form-label-sm\" : \"form-label\");\r\nconst cssFormSelect = (size) => (size === \"sm\" ? \"form-select form-select-sm\" : \"form-select\");\r\nconst cssFormControl = (size, readonly) =>\r\n    readonly\r\n        ? size === \"sm\"\r\n            ? \"form-control-plaintext form-control-plaintext-sm\"\r\n            : \"form-control-plaintext\"\r\n        : size === \"sm\"\r\n        ? \"form-control form-control-sm\"\r\n        : \"form-control\";\r\n\r\nconst settings = {\r\n    displayErrorsInTitle: true,\r\n};\r\n\r\nfunction toFormControlClassNames(size, readonly, controlClassName, { input, meta }) {\r\n    return classNames(cssFormControl(size, readonly), controlClassName, final_from_classes(input, meta));\r\n}\r\n\r\nfunction toSelectControlClassNames(size, readonly, controlClassName, { input, meta }) {\r\n    return classNames(cssFormSelect(size), controlClassName, final_from_classes(input, meta));\r\n}\r\n\r\nfunction final_from_classes(input, meta) {\r\n    return {\r\n        filled: !!input.value,\r\n        touched: !!meta.invalid,\r\n        invalid: !!meta.invalid,\r\n        valid: !!meta.valid,\r\n        modified: !!meta.modified,\r\n        pristine: !!meta.pristine,\r\n        dirty: !!meta.dirty,\r\n        visited: !!meta.visited,\r\n        submitFailed: !!meta.submitFailed,\r\n    };\r\n}\r\n\r\nexport const FinalField = ({\r\n    label,\r\n    labelSize,\r\n    name,\r\n    renderLabel,\r\n    renderInput,\r\n    children,\r\n    type,\r\n    defaultValue,\r\n    labelClassName,\r\n    controlClassName,\r\n    size,\r\n    readonly,\r\n    ...props\r\n}) => {\r\n    var c1 = labelSize * 1;\r\n    var c2 = 12 - c1;\r\n    var has_columns = !!c1 && c1 > 1;\r\n    var cnLabelColumn = `col-md-${c1} ${cssColFormLabel(size)}`;\r\n    var cnControlColumn = `col-md-${c2}`;\r\n\r\n    const convertToNumber = (value) => (isNaN(parseFloat(value)) ? null : parseFloat(value));\r\n\r\n    function doRenderLabel({ input, meta }) {\r\n        if (!!renderLabel) {\r\n            if (!has_columns) return renderLabel({ input, meta });\r\n            return <div className={`col-md-${c1}`}>{renderLabel({ input, meta })}</div>;\r\n        }\r\n        var cn = classNames(labelClassName, has_columns ? cnLabelColumn : cssFormLabel(size));\r\n        return !has_columns && !label ? null : <label className={cn}>{label}</label>;\r\n    }\r\n\r\n    function doRenderInput({ input, meta }) {\r\n        if (!!renderInput) {\r\n            if (!has_columns) return renderInput({ input, meta });\r\n            return <div className={cnControlColumn}>{renderInput({ input, meta })}</div>;\r\n        }\r\n        var cn = toFormControlClassNames(size, readonly, controlClassName, {\r\n            input,\r\n            meta,\r\n        });\r\n        var args = settings.displayErrorsInTitle ? { ...props, title: meta.error } : props;\r\n        if (readonly) args = { ...args, readOnly: true };\r\n        var inp = <input type={type} className={cn} {...input} {...args} data-meta={1 && JSON.stringify(meta, null, 2)} />;\r\n        return has_columns ? <div className={cnControlColumn}>{inp}</div> : inp;\r\n    }\r\n\r\n    function doRenderValidationError({ input, meta }) {\r\n        return (\r\n            meta.touched &&\r\n            meta.error && (\r\n                <span\r\n                    className={classNames(\"validation-error\", {\r\n                        \"col-12\": has_columns,\r\n                    })}\r\n                >\r\n                    {meta.error}\r\n                </span>\r\n            )\r\n        );\r\n    }\r\n\r\n    var attr = !!defaultValue ? { defaultValue } : {};\r\n    if (type === \"number\") attr = { ...attr, parse: convertToNumber };\r\n    return (\r\n        <Field name={name} component=\"input\" type={type} {...attr}>\r\n            {({ input, meta }) => (\r\n                <div\r\n                    className={classNames(cssFormGroup(size), {\r\n                        row: has_columns,\r\n                    })}\r\n                >\r\n                    {!!children ? (\r\n                        children({ input, meta })\r\n                    ) : (\r\n                        <>\r\n                            {doRenderLabel({ input, meta })}\r\n                            {doRenderInput({ input, meta })}\r\n                            {doRenderValidationError({ input, meta })}\r\n                        </>\r\n                    )}\r\n                </div>\r\n            )}\r\n        </Field>\r\n    );\r\n};\r\n\r\nexport const FinalTextArea = ({ name, label, labelSize, labelClassName, controlClassName, size, readonly, ...props }) => {\r\n    var c1 = labelSize * 1;\r\n    var c2 = 12 - c1;\r\n    var has_columns = !!c1 && c1 > 1;\r\n    var cnLabelColumn = `col-md-${c1} ${cssColFormLabel(size)}`;\r\n    var cnControlColumn = `col-md-${c2}`;\r\n\r\n    function doRenderLabel({ input, meta }) {\r\n        var cn = classNames(labelClassName, has_columns ? cnLabelColumn : cssFormLabel(size));\r\n        return !has_columns && !label ? null : <label className={cn}>{label}</label>;\r\n    }\r\n\r\n    function doRenderInput({ input, meta }) {\r\n        var cn = toFormControlClassNames(size, readonly, controlClassName, {\r\n            input,\r\n            meta,\r\n        });\r\n        var args = settings.displayErrorsInTitle ? { ...props, title: meta.error } : props;\r\n        var inp = <textarea className={cn} {...input} {...args}></textarea>;\r\n        return has_columns ? <div className={cnControlColumn}>{inp}</div> : inp;\r\n    }\r\n\r\n    function doRenderValidationError({ input, meta }) {\r\n        return (\r\n            meta.touched &&\r\n            meta.error && (\r\n                <span\r\n                    className={classNames(\"validation-error\", {\r\n                        \"col-12\": has_columns,\r\n                    })}\r\n                >\r\n                    {meta.error}\r\n                </span>\r\n            )\r\n        );\r\n    }\r\n\r\n    return (\r\n        <Field name={name} component=\"textarea\">\r\n            {({ input, meta }) => (\r\n                <div\r\n                    className={classNames(cssFormGroup(size), {\r\n                        row: has_columns,\r\n                    })}\r\n                >\r\n                    {doRenderLabel({ input, meta })}\r\n                    {doRenderInput({ input, meta })}\r\n                    {doRenderValidationError({ input, meta })}\r\n                </div>\r\n            )}\r\n        </Field>\r\n    );\r\n};\r\n\r\nexport const FinalSelect = ({\r\n    label,\r\n    labelSize,\r\n    className,\r\n    name,\r\n    values,\r\n    labelClassName,\r\n    controlClassName,\r\n    placeholder,\r\n    size,\r\n    readonly,\r\n    ...props\r\n}) => {\r\n    var c1 = labelSize * 1;\r\n    var c2 = 12 - c1;\r\n    var has_columns = !!c1 && c1 > 1;\r\n    var cnLabelColumn = `col-md-${c1} ${cssColFormLabel(size)}`;\r\n    var cnControlColumn = `col-md-${c2}`;\r\n\r\n    function my_control({ input, meta }) {\r\n        var options = !placeholder ? null : (\r\n            <option value=\"\" disabled>\r\n                {placeholder}\r\n            </option>\r\n        );\r\n        for (var i = 0; i < values.length; i++) {\r\n            var v = values[i];\r\n            var option = typeof v === \"string\" ? <option>{v}</option> : <option value={v.code}>{v.title}</option>;\r\n            options = options ? (\r\n                <>\r\n                    {options}\r\n                    {option}\r\n                </>\r\n            ) : (\r\n                option\r\n            );\r\n        }\r\n        var cn = toSelectControlClassNames(size, readonly, controlClassName, {\r\n            input,\r\n            meta,\r\n        });\r\n        var args = settings.displayErrorsInTitle ? { ...props, title: meta.error } : props;\r\n        return (\r\n            <select className={cn} {...input} {...args}>\r\n                {options}\r\n            </select>\r\n        );\r\n    }\r\n\r\n    function doRenderLabel({ input, meta }) {\r\n        var cn = classNames(labelClassName, has_columns ? cnLabelColumn : cssFormLabel(size));\r\n        return !has_columns && !label ? null : <label className={cn}>{label}</label>;\r\n    }\r\n\r\n    function doRenderInput({ input, meta }) {\r\n        var inp = my_control({ input, meta });\r\n        return has_columns ? <div className={cnControlColumn}>{inp}</div> : inp;\r\n    }\r\n\r\n    function doRenderValidationError({ input, meta }) {\r\n        return (\r\n            meta.touched &&\r\n            meta.error && (\r\n                <span\r\n                    className={classNames(\"validation-error\", {\r\n                        \"col-12\": has_columns,\r\n                    })}\r\n                >\r\n                    {meta.error}\r\n                </span>\r\n            )\r\n        );\r\n    }\r\n\r\n    return (\r\n        <Field name={name} component=\"select\">\r\n            {({ input, meta }) => (\r\n                <div\r\n                    className={classNames(cssFormGroup(size), {\r\n                        row: has_columns,\r\n                    })}\r\n                >\r\n                    {doRenderLabel({ input, meta })}\r\n                    {doRenderInput({ input, meta })}\r\n                    {doRenderValidationError({ input, meta })}\r\n                </div>\r\n            )}\r\n        </Field>\r\n    );\r\n};\r\n\r\nconst _Final_Check = ({ type, label, labelSize, name, values, inline, labelClassName, controlClassName, size, readonly, ...props }) => {\r\n    var c1 = labelSize * 1;\r\n    var c2 = 12 - c1;\r\n    var has_columns = !!c1 && c1 > 1;\r\n    var cnLabelColumn = `col-md-${c1} ${cssColFormLabel(size)}`;\r\n    var cnControlColumn = `col-md-${c2}`;\r\n\r\n    function doRenderLabel() {\r\n        var title = values ? label : null;\r\n        if (has_columns) return <span className={classNames(labelClassName, cnLabelColumn, \"pt-0\")}>{title}</span>;\r\n        return !title ? null : <span className={classNames(labelClassName, \"pe-2\")}>{title}</span>;\r\n    }\r\n\r\n    function doRenderControls() {\r\n        var c = null;\r\n        if (!values) {\r\n            c = (\r\n                <label\r\n                    className={classNames(\"form-check form-check-label\", {\r\n                        \"form-check-inline\": inline,\r\n                    })}\r\n                >\r\n                    <Field name={name} component=\"input\" type={type} className=\"form-check-input\" {...props} />\r\n                    <span className=\"form-check-label\">{label}</span>\r\n                </label>\r\n            );\r\n        } else {\r\n            for (var i = 0; i < values.length; i++) {\r\n                var item = values[i];\r\n                var code = typeof item === \"string\" ? item : item.code;\r\n                var title = typeof item === \"string\" ? item : item.title;\r\n                var x = (\r\n                    <label\r\n                        className={classNames(\"form-check form-check-label\", {\r\n                            \"form-check-inline\": inline,\r\n                        })}\r\n                    >\r\n                        <Field name={name} component=\"input\" type={type} value={code} className=\"form-check-input\" {...props} />\r\n                        <span className=\"form-check-label\">{title}</span>\r\n                    </label>\r\n                );\r\n                c = !c ? (\r\n                    x\r\n                ) : (\r\n                    <>\r\n                        {c}\r\n                        {x}\r\n                    </>\r\n                );\r\n            }\r\n        }\r\n        return has_columns ? <div className={cnControlColumn}>{c}</div> : c;\r\n    }\r\n\r\n    return (\r\n        <div className={classNames(cssFormGroup(size), { row: has_columns })}>\r\n            {doRenderLabel()}\r\n            {doRenderControls()}\r\n        </div>\r\n    );\r\n};\r\n\r\n//export const FinalCheck = ({ label, labelSize, name, values, inline, labelClassName, controlClassName, ...props }) => {\r\nexport const FinalCheck = ({ ...props }) => {\r\n    return _Final_Check({ type: \"checkbox\", ...props });\r\n};\r\n\r\nexport const FinalRadio = ({ ...props }) => {\r\n    return _Final_Check({ type: \"radio\", ...props });\r\n};\r\n\r\n//\r\n//\r\nexport const FinalSwitch = ({ type, label, labelSize, name, values, inline, labelClassName, controlClassName, size, readonly, ...props }) => {\r\n    var c1 = labelSize * 1;\r\n    var c2 = 12 - c1;\r\n    var has_columns = !!c1 && c1 > 1;\r\n    var cnLabelColumn = `col-md-${c1} ${cssColFormLabel(size)}`;\r\n    var cnControlColumn = `col-md-${c2}`;\r\n\r\n    function doRenderLabel() {\r\n        var title = values ? label : null;\r\n        if (has_columns) return <span className={classNames(labelClassName, cnLabelColumn, \"pt-0\")}>{title}</span>;\r\n        return !title ? null : <span className={classNames(labelClassName, \"pe-2\")}>{title}</span>;\r\n    }\r\n\r\n    function doRenderControls() {\r\n        var c = null;\r\n        if (!values) {\r\n            c = (\r\n                <label\r\n                    className={classNames(\"form-check form-check-label\", {\r\n                        \"form-check-inline\": inline,\r\n                    })}\r\n                >\r\n                    <Field name={name} component=\"input\" type={type} className=\"form-check-input\" {...props} />\r\n                    <span className=\"form-check-label\">{label}</span>\r\n                </label>\r\n            );\r\n        } else {\r\n            for (var i = 0; i < values.length; i++) {\r\n                var item = values[i];\r\n                var code = typeof item === \"string\" ? item : item.code;\r\n                var title = typeof item === \"string\" ? item : item.title;\r\n                var x = (\r\n                    <label\r\n                        className={classNames(\"form-check form-check-label\", {\r\n                            \"form-check-inline\": inline,\r\n                        })}\r\n                    >\r\n                        <Field name={name} component=\"input\" type={type} value={code} className=\"form-check-input\" {...props} />\r\n                        <span className=\"form-check-label\">{title}</span>\r\n                    </label>\r\n                );\r\n                c = !c ? (\r\n                    x\r\n                ) : (\r\n                    <>\r\n                        {c}\r\n                        {x}\r\n                    </>\r\n                );\r\n            }\r\n        }\r\n        return has_columns ? <div className={cnControlColumn}>{c}</div> : c;\r\n    }\r\n\r\n    return (\r\n        <div className={classNames(cssFormGroup(size), { row: has_columns })}>\r\n            {doRenderLabel()}\r\n            {doRenderControls()}\r\n        </div>\r\n    );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { apiConfig } from \"../../api/config\";\r\nimport { FinalField } from \"../../components/basic/final-form\";\r\n//import \"./index.scss\";\r\n\r\nexport const Captcha = ({ counter }) => {\r\n    const captcha = React.createRef();\r\n    const [uid, setUID] = useState(Date.now());\r\n\r\n    function refreshCaptcha() {\r\n        setUID(Date.now());\r\n        captcha.current.focus();\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"middle gap-3\">\r\n                <FinalField\r\n                    name=\"captcha\"\r\n                    renderInput={({ input, meta }) => (\r\n                        <>\r\n                            <input\r\n                                ref={captcha}\r\n                                className=\"form-control ltr\"\r\n                                type=\"text\"\r\n                                maxLength=\"5\"\r\n                                autoComplete=\"off\"\r\n                                spellCheck=\"false\"\r\n                                placeholder=\"Security Code\"\r\n                                {...input}\r\n                            />\r\n                        </>\r\n                    )}\r\n                />\r\n\r\n                <div className=\"mb-3\">\r\n                    <img\r\n                        className=\"cur-pointer border rounded\"\r\n                        alt=\"Captcha\"\r\n                        src={`${apiConfig.baseUrl}/captcha?${uid}_${counter}`}\r\n                        onClick={refreshCaptcha}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { Form } from \"react-final-form\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport * as bs from \"react-basic-design\";\r\nimport * as icons from \"../../assets/icons\";\r\nimport { Captcha } from \"./captcha\";\r\nimport accountManager from \"../../app/account-manager\";\r\nimport { messages } from \"../../components/messages\";\r\nimport settings from \"../../app/settings\";\r\nimport { FinalField } from \"../../components/basic/final-form\";\r\nimport { notify } from \"../../components/basic/notify\";\r\n\r\nexport const LoginForm = ({ inline, ...props }) => {\r\n    const [captchaCounter, setCaptchaCounter] = useState(0);\r\n    const [loading, setLoading] = useState(false);\r\n    const history = useHistory();\r\n\r\n    const onSubmit = (values) => {\r\n        if (!values.userName || values.userName.trim().length < 3) {\r\n            notify.error(messages.InvalidUserName);\r\n            return;\r\n        }\r\n        if (!values.password || values.password.trim().length < 3) {\r\n            notify.error(messages.InvalidPassword);\r\n            return;\r\n        }\r\n        if (!values.captcha || values.captcha.trim().length !== 5) {\r\n            notify.error(messages.InvalidCaptcha);\r\n            return;\r\n        }\r\n        setLoading(true);\r\n        accountManager\r\n            .login(values)\r\n            .then((result) => {\r\n                setCaptchaCounter(captchaCounter + 1);\r\n                setLoading(false);\r\n                if (inline) notify.info(messages.Welcome);\r\n                else history.push(\"/home\");\r\n            })\r\n            .catch((ex) => {\r\n                setCaptchaCounter(captchaCounter + 1);\r\n                setLoading(false);\r\n                notify.error(ex);\r\n            });\r\n    };\r\n    /*\r\n    const myValidator = BasicValidator((builder) =>\r\n        builder.object({\r\n            userName: builder.string().required().userName(),\r\n            password: builder.string().required().password(),\r\n            captcha: builder.string().required().length(5),\r\n        })\r\n    );*/\r\n\r\n    return (\r\n        <Form\r\n            initialValues={{}}\r\n            onSubmit={onSubmit}\r\n            render={({ handleSubmit, form, submitting, pristine, invalid, values, errors, ...args }) => (\r\n                <form onSubmit={handleSubmit} className=\"mx-auto ltr\" style={{ width: 280 }}>\r\n                    <div>\r\n                        {!inline && <h3 className=\"text-center text-primary\">{settings.title}</h3>}\r\n\r\n                        <FinalField name=\"userName\" placeholder=\"User name\" type=\"text\" autoComplete=\"off\" autoFocus />\r\n                        <FinalField name=\"password\" placeholder=\"Password\" type=\"password\" />\r\n                        <Captcha counter={captchaCounter} />\r\n\r\n                        <bs.Button color=\"primary\" type=\"submit\" className=\"w-100\" disabled={loading || submitting || invalid}>\r\n                            {loading && <div className=\"m-e-2 spinner-border spinner-border-sm\"></div>}\r\n                            <span>{messages.LoginTitle}</span>\r\n                        </bs.Button>\r\n\r\n                        {!inline && (\r\n                            <div className=\"text-center\">\r\n                                <p className=\"pt-3\">\r\n                                    <a className=\"text-decoration-none text-primary\" href=\"/account/ForgotPassword\">\r\n                                        {messages.IForgotMyPassword}\r\n                                    </a>\r\n                                </p>\r\n                                <p>\r\n                                    <a className=\"text-decoration-none text-primary\" href=\"/account/register\">\r\n                                        {messages.IDontHaveAccount}\r\n                                    </a>\r\n                                </p>\r\n                                <footer className=\"small mt-4\">\r\n                                    {messages.SupportTel}: <span className=\"ltr d-inline-block\">{settings.supportTel}</span>\r\n                                </footer>\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                </form>\r\n            )}\r\n        />\r\n    );\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Route } from \"react-router\";\r\nimport { api } from \"../api/api\";\r\n\r\nimport * as icons from \"../assets/icons\";\r\nimport * as bs from \"react-basic-design\";\r\nimport { messages } from \"../components/messages\";\r\nimport { LoginForm } from \"../views/account/login-form\";\r\nimport { accountManager } from \"./account-manager\";\r\nimport { notify } from \"../components/basic/notify\";\r\nimport { helper } from \"../components/basic/helper\";\r\n\r\nexport const AzRoute = ({ component: Component, login: Login, render, ...rest }) => {\r\n    const [, setState] = useState(false);\r\n    const [loginHere, setLoginHere] = useState(false);\r\n    var status = accountManager.status;\r\n\r\n    useEffect(\r\n        () =>\r\n            accountManager.status.onChange((x) => {\r\n                setLoginHere(false);\r\n                helper.removeClassNames(document.body, status.all());\r\n                setState(x);\r\n                document.body.classList.add(status.get());\r\n            }).remove,\r\n        [status]\r\n    );\r\n\r\n    useEffect(\r\n        () =>\r\n            api.onUnauthorized((x) => {\r\n                accountManager.status.setAsLoggedOut();\r\n            }).remove,\r\n        []\r\n    );\r\n\r\n    function reconnect() {\r\n        accountManager.init().catch((ex) => !ex.handled && notify.error(ex));\r\n    }\r\n\r\n    const gotoLoginHere = () => setLoginHere(true);\r\n    const returnFromLoginHere = () => setLoginHere(false);\r\n\r\n    function renderConnecting() {\r\n        if (accountManager.status.isConnecting()) {\r\n            return (\r\n                <div className=\"middle h-100\">\r\n                    <div className=\"m-e-2 spinner-grow text-info spinner-grow-sm animation-delay--0s\"></div>\r\n                    <div className=\"m-e-2 spinner-grow text-info spinner-grow-sm animation-delay--1s\"></div>\r\n                    <div className=\"m-e-2 spinner-grow text-info spinner-grow-sm animation-delay--2s\"></div>\r\n                </div>\r\n            );\r\n        } else if (accountManager.status.isConnectionFailed()) {\r\n            return (\r\n                <div className=\"middle h-100\">\r\n                    <div className=\"text-center\">\r\n                        <div className=\"text-danger p-3\">{messages.ConnectionError}</div>\r\n                        <button className=\"btn btn-link btn-icon text-dark\" onClick={reconnect}>\r\n                            <icons.Sync />\r\n                            <span className=\"p-s-2\">{messages.Retry}</span>\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            );\r\n        } else if (accountManager.status.isLoggedOut()) {\r\n            if (loginHere) {\r\n                return (\r\n                    <main className=\"content middle h-100\">\r\n                        <div>\r\n                            <button className=\"btn btn-link btn-icon\" onClick={returnFromLoginHere}>\r\n                                <icons.ArrowForward fill=\"#06c\" /> {messages.Return}\r\n                            </button>\r\n                            <LoginForm inline />\r\n                        </div>\r\n                    </main>\r\n                );\r\n            } else {\r\n                return (\r\n                    <div className=\"middle h-100\" style={{ maxHeight: 601 }}>\r\n                        <div>\r\n                            {messages.WeCannotAuthenticateYou}:\r\n                            <dl className=\"pt-2\">\r\n                                <dd className=\"m-0\">\r\n                                    <button className=\"btn btn-link btn-icon\" onClick={reconnect}>\r\n                                        <icons.Sync fill=\"#06c\" /> {messages.Retry}\r\n                                    </button>\r\n                                </dd>\r\n                                <dd className=\"m-0\">\r\n                                    <button className=\"btn btn-link btn-icon\" onClick={gotoLoginHere}>\r\n                                        <icons.Login fill=\"#06c\" /> {messages.LoginHere}\r\n                                    </button>\r\n                                </dd>\r\n                                <dd className=\"m-0\">\r\n                                    <a className=\"btn btn-link btn-icon\" href=\"/\">\r\n                                        <icons.Home fill=\"#06c\" /> {messages.RedirectToHomePage}\r\n                                    </a>\r\n                                </dd>\r\n                            </dl>\r\n                        </div>\r\n                    </div>\r\n                );\r\n            }\r\n        }\r\n        return <></>;\r\n    }\r\n\r\n    var is_connected = accountManager.status.isConnected();\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={(props) => {\r\n                return (\r\n                    <>\r\n                        {/*{state}*/}\r\n                        <div className=\"h-100\" style={{ display: is_connected ? \"block\" : \"none\" }}>\r\n                            {!!render && render(props)}\r\n                            {!!Component && <Component {...props} />}\r\n                        </div>\r\n                        {!is_connected && renderConnecting()}\r\n                    </>\r\n                );\r\n            }}\r\n        />\r\n    );\r\n};\r\n","import settings from \"../app/settings\";\r\nimport { api } from \"./api\";\r\nimport { apiConfig } from \"./config\";\r\n\r\nexport const menuApi = {\r\n    myMenu: () =>\r\n        api.call(\"post\", apiConfig.menuUrl + \"/my-menu/\" + settings.projectId),\r\n\r\n    load: (projectId) =>\r\n        api.call(\"post\", apiConfig.menuUrl + \"/load/\" + projectId),\r\n\r\n    insertApp: (data) =>\r\n        api.call(\"post\", apiConfig.menuUrl + \"/insert-app\", data),\r\n\r\n    updateApp: (data) =>\r\n        api.call(\"post\", apiConfig.menuUrl + \"/update-app\", data),\r\n\r\n    deleteApp: (list) =>\r\n        api.call(\r\n            \"post\",\r\n            apiConfig.menuUrl + \"/delete-app\",\r\n            list.map((x) => x.id)\r\n        ),\r\n\r\n    insertMenu: (projectId, data) =>\r\n        api.call(\"post\", apiConfig.menuUrl + `/insert-menu/${projectId}`, data),\r\n\r\n    updateMenu: (projectId, data) =>\r\n        api.call(\"post\", apiConfig.menuUrl + `/update-menu/${projectId}`, data),\r\n\r\n    deleteMenu: (projectId, id) =>\r\n        api.call(\r\n            \"post\",\r\n            apiConfig.menuUrl + `/delete-menu/${projectId}/${id}`,\r\n            null\r\n        ),\r\n\r\n    insertFolder: (projectId, data) =>\r\n        api.call(\r\n            \"post\",\r\n            apiConfig.menuUrl + `/insert-folder/${projectId}`,\r\n            data\r\n        ),\r\n\r\n    updateFolder: (projectId, data) =>\r\n        api.call(\r\n            \"post\",\r\n            apiConfig.menuUrl + `/update-folder/${projectId}`,\r\n            data\r\n        ),\r\n\r\n    deleteFolder: (projectId, id) =>\r\n        api.call(\r\n            \"post\",\r\n            apiConfig.menuUrl + `/delete-folder/${projectId}/${id}`,\r\n            null\r\n        ),\r\n};\r\n","import classNames from \"classnames\";\r\nimport React from \"react\";\r\nimport { SlideDown } from \"react-slidedown\";\r\nimport * as bs from \"react-basic-design\";\r\n\r\nimport \"./index.scss\";\r\nimport * as icons from \"../../assets/icons\";\r\n\r\nexport default function MainMenu({ folders, menus, parent, onSelect, selectedFolder, selectedMenu, activeItem, light, dark, ...props }) {\r\n    const parentId = !parent ? null : parent.id;\r\n\r\n    if (!folders) folders = [];\r\n    if (!menus) menus = [];\r\n    if (folders.length === 0 && menus.length === 0) return <></>;\r\n\r\n    var cn = null;\r\n    if (!parentId) {\r\n        cn = classNames(\"mainmenu\", {\r\n            \"mainmenu-light\": light,\r\n            \"mainmenu-dark\": dark,\r\n        });\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <ul className={cn} {...props}>\r\n                {folders\r\n                    .filter((x) => x.parentId === parentId)\r\n                    .map((f) => (\r\n                        <MenuFolder\r\n                            key={f.id}\r\n                            folders={folders}\r\n                            menus={menus}\r\n                            folder={f}\r\n                            onSelect={onSelect}\r\n                            selectedFolder={selectedFolder}\r\n                            selectedMenu={selectedMenu}\r\n                            activeItem={activeItem}\r\n                        />\r\n                    ))}\r\n                {menus\r\n                    .filter((x) => x.parentId === parentId)\r\n                    .map((mi) => (\r\n                        <MenuItem\r\n                            key={mi.id}\r\n                            menu={mi}\r\n                            onSelect={onSelect}\r\n                            selectedFolder={selectedFolder}\r\n                            selectedMenu={selectedMenu}\r\n                            activeItem={activeItem}\r\n                        />\r\n                    ))}\r\n            </ul>\r\n        </>\r\n    );\r\n}\r\n\r\nfunction MenuFolder({ folders, menus, folder, onSelect, selectedFolder, selectedMenu, activeItem }) {\r\n    var is_open = menuHelper.isOpen({\r\n        folder,\r\n        folders,\r\n        menus,\r\n        selectedFolder,\r\n        selectedMenu,\r\n    });\r\n    return (\r\n        <li className=\"mi-folder\">\r\n            <div className=\"mi-item\">\r\n                <a\r\n                    href=\"#/\"\r\n                    onClick={(e) => {\r\n                        onSelect(folder, null);\r\n                        return false;\r\n                    }}\r\n                    className={classNames({\r\n                        \"mi-selected\": selectedFolder && selectedFolder.id === folder.id,\r\n                        \"mi-active\": activeItem && activeItem.id === folder.id,\r\n                        \"mi-open\": is_open,\r\n                    })}\r\n                >\r\n                    {!!folder.parentId && (\r\n                        <i>\r\n                            <menuHelper.FolderIcon />\r\n                        </i>\r\n                    )}\r\n                    <span className=\"mi-text\">{folder.title}</span>\r\n                    {!!folder.parentId && (\r\n                        <b>\r\n                            <menuHelper.CaretIcon />\r\n                        </b>\r\n                    )}\r\n                </a>\r\n            </div>\r\n            <SlideDown closed={!is_open}>\r\n                <MainMenu\r\n                    folders={folders}\r\n                    menus={menus}\r\n                    parent={folder}\r\n                    onSelect={onSelect}\r\n                    selectedFolder={selectedFolder}\r\n                    selectedMenu={selectedMenu}\r\n                    activeItem={activeItem}\r\n                />\r\n            </SlideDown>\r\n        </li>\r\n    );\r\n}\r\n\r\nfunction MenuItem({ menu, onSelect, selectedMenu, activeItem }) {\r\n    return (\r\n        <li className=\"mi-menu\">\r\n            <div className=\"mi-item\">\r\n                <a\r\n                    href=\"#/\"\r\n                    onClick={(e) => {\r\n                        onSelect(null, menu);\r\n                        return false;\r\n                    }}\r\n                    className={classNames({\r\n                        \"mi-selected\": selectedMenu && selectedMenu.id === menu.id,\r\n                        \"mi-active\": activeItem && activeItem.id === menu.id,\r\n                    })}\r\n                >\r\n                    <i>\r\n                        <menuHelper.MenuIcon />\r\n                    </i>\r\n                    <span className=\"mi-text\">{menu.title}</span>\r\n                    {!!menu.badgeText && <span className={classNames(\"mi-more\", menu.badgeCss)}> {menu.badgeText}</span>}\r\n                </a>\r\n            </div>\r\n        </li>\r\n    );\r\n}\r\n\r\nexport const menuHelper = {\r\n    iconSize: 18,\r\n    FolderIcon: () => <icons.Folder width={menuHelper.iconSize} height={menuHelper.iconSize} />,\r\n    CaretIcon: () => <icons.ChevronLeft width={menuHelper.iconSize} height={menuHelper.iconSize} />,\r\n    MenuIcon: () => <icons.Adjust width={menuHelper.iconSize * 0.6} height={menuHelper.iconSize * 0.6} />,\r\n\r\n    isOpen: ({ folder, folders, menus, selectedFolder, selectedMenu }) => {\r\n        if (!folder) return false;\r\n        if (!folder.parentId || folder === selectedFolder || (!!selectedMenu && folder.id === selectedMenu.parentId)) return true;\r\n        var subFolders = folders.filter((x) => x.parentId === folder.id);\r\n        for (var i = 0; i < subFolders.length; i++) {\r\n            var f = subFolders[i];\r\n            if (\r\n                menuHelper.isOpen({\r\n                    folder: f,\r\n                    folders,\r\n                    menus,\r\n                    selectedFolder,\r\n                    selectedMenu,\r\n                })\r\n            )\r\n                return true;\r\n        }\r\n        return false;\r\n    },\r\n};\r\n","//import * as bs from 'react-basic-design'\r\nimport { BasicSubject } from \"../components/basic/event/basic-subject\";\r\n\r\n//Editors = label / textbox / number / select / checkbox / radio\r\n\r\nexport class Column {\r\n    constructor({\r\n        name,\r\n        isPK,\r\n        title,\r\n        toggleOnClick,\r\n        editor,\r\n        validValues,\r\n        cellStyle,\r\n        cellClassName,\r\n        fnFormat,\r\n        hiddenInTable,\r\n        hiddenInEditor,\r\n        category,\r\n        dir,\r\n        ...rest\r\n    }) {\r\n        this.name = name;\r\n        this.isPK = isPK;\r\n        this.title = title;\r\n\r\n        this.toggleOnClick = toggleOnClick;\r\n        this.editor = editor;\r\n\r\n        // [ { code: \"1\", title: \"\" }, ... ],\r\n        // [\"\", \"\", ...],\r\n        this.validValues = validValues;\r\n\r\n        this.cellStyle = cellStyle;\r\n        this.cellClassName = cellClassName;\r\n\r\n        // ({ value }) => '# ' + value\r\n        this.fnFormat = fnFormat;\r\n\r\n        this.hiddenInTable = hiddenInTable;\r\n        this.hiddenInEditor = hiddenInEditor;\r\n        this.category = category;\r\n        this.dir = dir;\r\n        this.rest = rest;\r\n    }\r\n}\r\n\r\nexport class Table {\r\n    constructor({ name, title, singularTitle, columns, sortable, filterable }) {\r\n        this.name = name;\r\n        this.title = title;\r\n        this.singularTitle = singularTitle;\r\n        this.sortable = sortable;\r\n        this.filterable = filterable;\r\n        this.columns = columns;\r\n        this.data = new BasicSubject([], \"table-\" + name);\r\n    }\r\n\r\n    bind(fn, debugName) {\r\n        return this.data.subscribe(fn, debugName);\r\n    }\r\n\r\n    getReactTableColumns = (categories) =>\r\n        this.columns\r\n            .filter((x) => !x.hiddenInTable && (!categories || categories.indexOf(x.category) >= 0))\r\n            .map((x) => {\r\n                var z = {\r\n                    Header: x.title,\r\n                    accessor: x.name,\r\n                    _isSortable: x.sortable,\r\n                    _toggleOnClick: x.toggleOnClick,\r\n                    _isKey: x.isPK,\r\n                    _editor: x.editor,\r\n                    _dir: x.dir,\r\n                    _cellProps: (row, cell) => ({ style: x.cellStyle, className: x.cellClassName }),\r\n                };\r\n                if (x.fnFormat) z.Cell = x.fnFormat;\r\n                return z;\r\n            });\r\n\r\n    is = (name) => typeof name === \"string\" && name.toLowerCase() === this.name.toLowerCase();\r\n}\r\n","import { Column, Table } from \"./table\";\r\n\r\nexport const applications = new Table({\r\n    name: 'Applications',\r\n    title: 'سیستم ها',\r\n    singularTitle: 'سیستم',\r\n    columns: [\r\n\r\n        new Column({\r\n            isPK: true,\r\n            name: 'id',\r\n            title: 'شناسه',\r\n            sortable: true,\r\n            toggleOnClick: true,\r\n            cellStyle: { cursor: 'default' },\r\n            cellClassName: \"text-primary\",\r\n            dir:\"ltr\",\r\n        }),\r\n\r\n        new Column({\r\n            name: 'title',\r\n            title: 'عنوان',\r\n            toggleOnClick: true,\r\n            cellStyle: { cursor: 'default' },\r\n        }),\r\n\r\n    ],\r\n    sortable: true,\r\n    filterable: true,\r\n});\r\n","import { Column, Table } from \"./table\";\r\n\r\nexport const menuFolders = new Table({\r\n    name: 'MenuFolders',\r\n    title: 'پوشه ها',\r\n    singularTitle: 'پوشه',\r\n    columns: [\r\n        new Column({\r\n            isPK: true,\r\n            name: 'id',\r\n            title: 'شناسه',\r\n            dir:\"ltr\",\r\n        }),\r\n        new Column({\r\n            name: 'title',\r\n            title: 'عنوان',\r\n        }),\r\n        new Column({\r\n            name: 'sortOrder',\r\n            title: 'ترتیب',\r\n            editor: 'number',\r\n            dir:\"ltr\",\r\n        }),\r\n    ],\r\n});/*\r\n  { id: 'f0', title: 'مستر دیتا', parentId: null },\r\n  { id: 'f01', title: 'قطعه', parentId: 'f0' },\r\n  { id: 'f011', title: 'ویوها', parentId: 'f01' },\r\n  { id: 'f02', title: 'خرید', parentId: 'f0' },\r\n  { id: 'f1', title: 'شناسایی منابع', parentId: null },\r\n  { id: 'f11', title: 'کسب و کار', parentId: 'f1' },\r\n  { id: 'f12', title: 'خالی', parentId: 'f1' },\r\n*/","import { Column, Table } from \"./table\";\r\n\r\nexport const menus = new Table({\r\n    name: 'Menus',\r\n    title: 'منو ها',\r\n    singularTitle: 'منو',\r\n    columns: [\r\n        new Column({\r\n            isPK: true,\r\n            name: 'id',\r\n            title: 'شناسه',\r\n            dir:\"ltr\",\r\n        }),\r\n\r\n        new Column({\r\n            name: 'title',\r\n            title: 'عنوان',\r\n            editor: 'check',\r\n        }),\r\n\r\n        new Column({\r\n            name: 'sortOrder',\r\n            title: 'ترتیب',\r\n            editor: 'number',\r\n            dir:\"ltr\",\r\n        }),\r\n\r\n        new Column({\r\n            name: 'url',\r\n            title: 'آدرس صفحه',\r\n            dir:\"ltr\",\r\n        }),\r\n\r\n        new Column({\r\n            name: 'openInNewTab',\r\n            title: 'در صفحه جدید باز شود؟',\r\n            editor: 'checkbox',\r\n        }),\r\n    ],\r\n});\r\n\r\n/*\r\n{ id: 'm01', menuFolderId: null, title: 'راهنمای سیستم' },\r\n{ id: 'm02', menuFolderId: null, title: 'قوانیم و مقررات' },\r\n{ id: 'm03', menuFolderId: 'f0', title: 'لیست مستر دیتا ها' },\r\n{ id: 'm04', menuFolderId: 'f01', title: 'تعریف قطعه' },\r\n{ id: 'm05', menuFolderId: 'f011', title: 'تعریف ویوی خرید قطعه' },\r\n{ id: 'm06', menuFolderId: 'f02', title: 'سازمان خرید' },\r\n{ id: 'm07', menuFolderId: 'f02', title: 'انواع اسناد خرید' },\r\n{ id: 'm08', menuFolderId: 'f11', title: 'ایجاد کسب و کار' },\r\n{ id: 'm09', menuFolderId: 'f11', title: 'احراز هویت کسب و کار' },\r\n*/","import { Column, Table } from \"./table\";\r\n\r\nexport const columns = new Table({\r\n    name: \"Columns\",\r\n    title: \"Columns\",\r\n    singularTitle: \"Column\",\r\n    columns: [\r\n        new Column({\r\n            isPK: true,\r\n            name: \"id\",\r\n            title: \"Id\",\r\n            sortable: true,\r\n            toggleOnClick: true,\r\n            cellStyle: { cursor: \"default\" },\r\n            cellClassName: \"text-primary\",\r\n            dir: \"ltr\",\r\n        }),\r\n\r\n        new Column({\r\n            name: \"name\",\r\n            title: \"Name\",\r\n            toggleOnClick: true,\r\n            cellStyle: { cursor: \"default\" },\r\n        }),\r\n\r\n        new Column({\r\n            name: \"expression\",\r\n            title: \"Expression\",\r\n            toggleOnClick: true,\r\n            cellStyle: { cursor: \"default\" },\r\n        }),\r\n\r\n        new Column({ name: \"alias\", title: \"Alias\" }),\r\n\r\n        new Column({ name: \"title\", title: \"عنوان\" }),\r\n\r\n        new Column({ name: \"isPK\", title: \"IsPK\", editor: \"checkbox\" }),\r\n        new Column({\r\n            name: \"isRequired\",\r\n            title: \"IsRequired\",\r\n            editor: \"checkbox\",\r\n        }),\r\n\r\n        new Column({\r\n            name: \"defaultValue\",\r\n            title: \"DefaultValue\",\r\n        }),\r\n\r\n        new Column({\r\n            name: \"toggleOnClick\",\r\n            title: \"ToggleOnClick\",\r\n            editor: \"checkbox\",\r\n        }),\r\n\r\n        new Column({\r\n            name: \"editor\",\r\n            title: \"Editor\",\r\n            validValues: \"label, select, checkbox, radio, url, email\",\r\n        }),\r\n\r\n        new Column({\r\n            name: \"validValues\",\r\n            title: \"ValidValues\",\r\n        }),\r\n\r\n        new Column({\r\n            name: \"cellStyle\",\r\n            title: \"CellStyle\",\r\n        }),\r\n\r\n        new Column({\r\n            name: \"cellClassName\",\r\n            title: \"CellClassName\",\r\n        }),\r\n\r\n        new Column({\r\n            name: \"hiddenInTable\",\r\n            title: \"HiddenInTable\",\r\n            editor: \"checkbox\",\r\n        }),\r\n\r\n        new Column({\r\n            name: \"hiddenInEditor\",\r\n            title: \"HiddenInEditor\",\r\n            editor: \"checkbox\",\r\n        }),\r\n\r\n        new Column({\r\n            name: \"category\",\r\n            title: \"Category\",\r\n        }),\r\n\r\n        new Column({\r\n            name: \"dir\",\r\n            title: \"Dir\",\r\n        }),\r\n    ],\r\n    sortable: true,\r\n    filterable: true,\r\n});\r\n","import React from \"react\";\r\nimport { Modal } from \"react-bootstrap\";\r\n\r\nexport const BasicModal = ({ show, setShow, title, renderBody, ...props }) => {\r\n    const hide = () => setShow(false);\r\n\r\n    return (\r\n        <Modal show={show} onHide={hide} size=\"md\">\r\n            <Modal.Header className=\"py-2\">\r\n                {title && <Modal.Title className=\"h4\">{title}</Modal.Title>}\r\n            </Modal.Header>\r\n            <Modal.Body>{renderBody({ hide, ...props })}</Modal.Body>\r\n        </Modal>\r\n    );\r\n};\r\n","import React from \"react\";\r\n//import * as bs from \"react-basic-design\";\r\nimport { FinalCheck, FinalField, FinalRadio, FinalSelect } from \"../final-form\";\r\n\r\nexport function GenerateEditControls({ columns, data, insertMode, size }) {\r\n    if (!data) return <></>;\r\n    const lb_size = 3;\r\n    var controls = null;\r\n    for (var i = 0; i < columns.length; i++) {\r\n        var c = columns[i];\r\n        var autoFocus = i === 0 ? { autoFocus: true } : {};\r\n        var is_readonly = c._editor === \"label\" || (!insertMode && c._isKey);\r\n        var cn = {\r\n            ltr: c._dir === \"ltr\",\r\n            rtl: c._dir === \"rtl\",\r\n        };\r\n        /*\r\n        if (c._editor === 'label' || (!insertMode && c._isKey)) {\r\n            controls = <>{controls}\r\n                <div className=\"mb-3 row\">\r\n                    <label className={`col-md-${lb_size} col-form-label`}>{c.Header}</label>\r\n                    <div className={`col-md-${12 - lb_size}`}>\r\n                        <input type=\"text\" readOnly className=\"form-control-plaintext\" value={data[c.accessor]} />\r\n                    </div>\r\n                </div>\r\n            </>\r\n        }\r\n        else*/\r\n        if (c._editor === \"select\") {\r\n            if (is_readonly)\r\n                controls = (\r\n                    <>\r\n                        {controls}\r\n                        <FinalField\r\n                            name={c.accessor}\r\n                            label={c.Header}\r\n                            labelSize={lb_size}\r\n                            {...autoFocus}\r\n                            size={size}\r\n                            readonly={is_readonly}\r\n                            controlClassName={cn}\r\n                        />\r\n                    </>\r\n                );\r\n            else\r\n                controls = (\r\n                    <>\r\n                        {controls}\r\n                        <FinalSelect\r\n                            name={c.accessor}\r\n                            label={c.Header}\r\n                            labelSize={lb_size}\r\n                            values={c._validValues}\r\n                            placeholder=\"...\"\r\n                            size={size}\r\n                            readonly={is_readonly}\r\n                            controlClassName={cn}\r\n                        />\r\n                    </>\r\n                );\r\n        } else if (c._editor === \"checkbox\") {\r\n            controls = (\r\n                <>\r\n                    {controls}\r\n                    <FinalCheck\r\n                        name={c.accessor}\r\n                        label={c.Header}\r\n                        labelSize={lb_size}\r\n                        {...autoFocus}\r\n                        size={size}\r\n                        readonly={is_readonly}\r\n                        controlClassName={cn}\r\n                    />\r\n                </>\r\n            );\r\n        } else if (c._editor === \"radio\") {\r\n            controls = (\r\n                <>\r\n                    {controls}\r\n                    <FinalRadio\r\n                        name={c.accessor}\r\n                        label={c.Header}\r\n                        labelSize={lb_size}\r\n                        values={c._validValues}\r\n                        {...autoFocus}\r\n                        size={size}\r\n                        readonly={is_readonly}\r\n                        controlClassName={cn}\r\n                    />\r\n                </>\r\n            );\r\n        } else if (c._editor === \"number\") {\r\n            controls = (\r\n                <>\r\n                    {controls}\r\n                    <FinalField\r\n                        name={c.accessor}\r\n                        label={c.Header}\r\n                        labelSize={lb_size}\r\n                        {...autoFocus}\r\n                        type=\"number\"\r\n                        size={size}\r\n                        readonly={is_readonly}\r\n                        controlClassName={cn}\r\n                    />\r\n                </>\r\n            );\r\n        } else if (c._editor === \"url\") {\r\n            controls = (\r\n                <>\r\n                    {controls}\r\n                    <FinalField\r\n                        name={c.accessor}\r\n                        label={c.Header}\r\n                        labelSize={lb_size}\r\n                        {...autoFocus}\r\n                        type=\"url\"\r\n                        size={size}\r\n                        readonly={is_readonly}\r\n                        controlClassName={cn}\r\n                    />\r\n                </>\r\n            );\r\n        } else if (c._editor === \"email\") {\r\n            controls = (\r\n                <>\r\n                    {controls}\r\n                    <FinalField\r\n                        name={c.accessor}\r\n                        label={c.Header}\r\n                        labelSize={lb_size}\r\n                        {...autoFocus}\r\n                        type=\"email\"\r\n                        size={size}\r\n                        readonly={is_readonly}\r\n                        controlClassName={cn}\r\n                    />\r\n                </>\r\n            );\r\n        } else {\r\n            controls = (\r\n                <>\r\n                    {controls}\r\n                    <FinalField\r\n                        name={c.accessor}\r\n                        label={c.Header}\r\n                        labelSize={lb_size}\r\n                        {...autoFocus}\r\n                        size={size}\r\n                        readonly={is_readonly}\r\n                        controlClassName={cn}\r\n                    />\r\n                </>\r\n            );\r\n        }\r\n    }\r\n\r\n    return controls;\r\n}\r\n","import React, { useState, useContext } from \"react\";\r\nimport { Form } from \"react-final-form\";\r\n//import { Dropdown } from \"react-bootstrap\";\r\n\r\nimport * as bs from \"react-basic-design\";\r\nimport MainMenu, { menuHelper } from \"../../../components/mainmenu/mainmenu\";\r\nimport * as tables from \"../../../data\";\r\nimport { messages } from \"../../../components/messages\";\r\nimport { ThemeContext } from \"../../../app/theme-context\";\r\nimport { BasicModal } from \"../../../components/basic/basic-modal\";\r\nimport { GenerateEditControls } from \"../../../components/basic/table/generate-edit-controls\";\r\nimport { notify } from \"../../../components/basic/notify\";\r\nimport * as icons from \"../../../assets/icons\";\r\n\r\nexport function MenuDesigner({ applications, currApp, setApp, menus, menuFolders, onAdd, onUpdate, onDelete }) {\r\n    const [theme] = useContext(ThemeContext);\r\n    const [busy, setBusy] = useState(false);\r\n    const [showEditForm, setShowEditForm] = useState(false);\r\n    const [showDeleteForm, setShowDeleteForm] = useState(false);\r\n    const [insertMode, setInsertMode] = useState(false);\r\n    const [entityTable, setEntityTable] = useState(null);\r\n    const [entity, setEntity] = useState({});\r\n\r\n    const [activeItem, setActiveItem] = useState(null);\r\n    const [activeItemTable, setActiveItemTable] = useState({});\r\n    const [selectedFolder, setSelectedFolder] = useState(null);\r\n    const [selectedMenu, setSelectedMenu] = useState(null);\r\n\r\n    /*    const changeCurrentApp = (x) => {\r\n        setApp(x);\r\n        setActiveItem(null);\r\n    };*/\r\n\r\n    const onSelectMenu = (folder, menu) => {\r\n        setActiveItem(!menu ? folder : menu);\r\n        setActiveItemTable(!menu ? tables.menuFolders : tables.menus);\r\n        if (\r\n            menuHelper.isOpen({\r\n                folder,\r\n                folders: menuFolders,\r\n                menus,\r\n                selectedFolder,\r\n                selectedMenu,\r\n            })\r\n        ) {\r\n            folder = folder.parentId == null ? null : menuFolders.find((x) => x.id === folder.parentId);\r\n        }\r\n        setSelectedFolder(folder);\r\n        setSelectedMenu(menu);\r\n        setInsertMode(false);\r\n    };\r\n\r\n    const currFolderId = () => (!activeItem ? null : activeItemTable.is(\"menus\") ? activeItem.parentId : activeItem.id);\r\n    const onAddFolderClick = () => openEditForm(true, { parentId: currFolderId() }, tables.menuFolders);\r\n    const onAddMenuClick = () => openEditForm(true, { parentId: currFolderId() }, tables.menus);\r\n\r\n    const openEditForm = (insert_mode, data, table) => {\r\n        setEntity(data);\r\n        setEntityTable(table);\r\n        setInsertMode(insert_mode);\r\n        setShowEditForm(true);\r\n    };\r\n\r\n    const onDeleteClick = () => {\r\n        setEntity(activeItem);\r\n        setEntityTable(activeItemTable);\r\n        setShowEditForm(false);\r\n        setShowDeleteForm(true);\r\n    };\r\n\r\n    const deleteEntity = () => {\r\n        onDelete(entity, entityTable)\r\n            .then((x) => {\r\n                setShowDeleteForm(false);\r\n                notify.info(messages.RowIsDeleted);\r\n                setBusy(false);\r\n                //\r\n                var p = menuFolders.find((x) => x.id === activeItem.parentId);\r\n                setActiveItem(p);\r\n                setSelectedFolder(p);\r\n                setSelectedMenu(null);\r\n            })\r\n            .catch((ex) => {\r\n                notify.error(ex);\r\n                setBusy(false);\r\n            });\r\n    };\r\n\r\n    const onSaveEditForm = (values) => {\r\n        setBusy(true);\r\n        var task = insertMode ? onAdd(values, entityTable) : onUpdate(values, entityTable);\r\n        task.then((x) => {\r\n            setShowEditForm(false);\r\n            notify.info(messages.ChangesAreSaved);\r\n            setBusy(false);\r\n            if (insertMode) {\r\n                if (entityTable.is(\"menus\")) {\r\n                    setSelectedMenu(x);\r\n                    setSelectedFolder(null);\r\n                } else {\r\n                    setSelectedMenu(null);\r\n                    setSelectedFolder(x);\r\n                }\r\n                setActiveItem(x);\r\n                setActiveItemTable(entityTable);\r\n            }\r\n        }).catch((ex) => {\r\n            notify.error(ex);\r\n            setBusy(false);\r\n        });\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div className=\"sticky-top border mt-0 bg-light mb-3 card\" style={{}}>\r\n                <div className=\"card-body\">\r\n                    <div className=\"row row-cols-sm g-2 align-items-center\">\r\n                        {!currApp && <div className=\"col\">{messages.SelectAnApp}</div>}\r\n                        {!!currApp && (\r\n                            <div className=\"col\">\r\n                                <button className=\"btn btn-sm btn-primary px-1\" onClick={onAddFolderClick}>\r\n                                    <icons.Folder height={20} fill=\"#fff\" />\r\n                                </button>\r\n\r\n                                <button className=\"btn btn-sm btn-primary px-1 mx-2\" onClick={onAddMenuClick}>\r\n                                    <icons.InsertDriveFile />\r\n                                </button>\r\n\r\n                                {activeItem && (\r\n                                    <>\r\n                                        <bs.Button\r\n                                            variant=\"text\"\r\n                                            size=\"sm\"\r\n                                            onClick={() => openEditForm(false, activeItem, activeItemTable)}\r\n                                            title={activeItem.title}\r\n                                        >\r\n                                            <icons.Edit />\r\n                                            {messages.Edit}\r\n                                        </bs.Button>\r\n                                        {\r\n                                            <bs.Button variant=\"text\" size=\"sm\" onClick={onDeleteClick}>\r\n                                                <icons.Delete />\r\n                                                {messages.Delete}\r\n                                            </bs.Button>\r\n                                        }\r\n                                        <bs.Button\r\n                                            variant=\"text\"\r\n                                            size=\"sm\"\r\n                                            color=\"secondary\"\r\n                                            onClick={() => setActiveItem(null)}\r\n                                            title={messages.Cancel}\r\n                                        >\r\n                                            <icons.Close height={16} fill=\"#555\" />\r\n                                        </bs.Button>\r\n                                    </>\r\n                                )}\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n\r\n                    {/* EDIT FORM */}\r\n                    {entityTable && (\r\n                        <BasicModal\r\n                            show={showEditForm}\r\n                            setShow={setShowEditForm}\r\n                            title={(insertMode ? messages.New : messages.Edit) + \" \" + entityTable.singularTitle}\r\n                            args={{\r\n                                insertMode,\r\n                                entity,\r\n                                columns: entityTable.getReactTableColumns(),\r\n                            }}\r\n                            renderBody={({ args }) => (\r\n                                <>\r\n                                    <Form\r\n                                        initialValues={args.entity}\r\n                                        onSubmit={onSaveEditForm}\r\n                                        render={({ handleSubmit, form, submitting, pristine, invalid, values }) => (\r\n                                            <form onSubmit={handleSubmit}>\r\n                                                <GenerateEditControls columns={args.columns} data={args.entity} insertMode={args.insertMode} />\r\n                                                <div className=\"text-end pt-3\">\r\n                                                    <button className=\"btn btn-sm btn-warning\" type=\"submit\" disabled={busy || invalid}>\r\n                                                        {busy && <div className=\"me-2 spinner-border spinner-border-sm\"></div>}\r\n                                                        {messages.Save}\r\n                                                    </button>\r\n                                                </div>\r\n                                            </form>\r\n                                        )}\r\n                                    />\r\n                                </>\r\n                            )}\r\n                        />\r\n                    )}\r\n\r\n                    <BasicModal\r\n                        show={showDeleteForm}\r\n                        setShow={setShowDeleteForm}\r\n                        title={messages.ConfirmDeleting}\r\n                        args={{ entity }}\r\n                        renderBody={({ args }) => (\r\n                            <>\r\n                                <p>{messages.YouAreGoingToDeleteRows.replace(\"{count}\", 1)}</p>\r\n                                <div className=\"text-end pt-3\">\r\n                                    <button className=\"btn btn-danger btn-sm text-white\" type=\"button\" onClick={deleteEntity} disabled={busy}>\r\n                                        {busy && <div className=\"me-2 spinner-border spinner-border-sm\"></div>}\r\n                                        {messages.Delete}\r\n                                    </button>\r\n                                </div>\r\n                            </>\r\n                        )}\r\n                    />\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"row\">\r\n                <div className=\"col-auto\">\r\n                    <MainMenu\r\n                        folders={menuFolders}\r\n                        menus={menus}\r\n                        onSelect={onSelectMenu}\r\n                        selectedFolder={selectedFolder}\r\n                        selectedMenu={selectedMenu}\r\n                        activeItem={activeItem}\r\n                        light={theme === \"mui-light\"}\r\n                        dark={theme !== \"mui-light\"}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n","\r\nimport React from 'react';\r\n\r\n\r\n\r\n\r\nexport const Checkbox = React.forwardRef(\r\n    ({ indeterminate, ...rest }, ref) => {\r\n        const defaultRef = React.useRef()\r\n        const resolvedRef = ref || defaultRef\r\n\r\n        React.useEffect(() => {\r\n            resolvedRef.current.indeterminate = indeterminate\r\n        }, [resolvedRef, indeterminate])\r\n\r\n        return (\r\n            <>\r\n                <input type=\"checkbox\" ref={resolvedRef} {...rest} />\r\n            </>\r\n        )\r\n    }\r\n)","import React from 'react';\r\n\r\nexport const GlobalFilter = ({ filter, setFilter, messages }) => {\r\n\r\n    return (\r\n        <input type=\"search\"\r\n            className=\"form-control form-control-sm\"\r\n            value={filter || ''}\r\n            onChange={e => setFilter(e.target.value)}\r\n            placeholder={messages.Search} />\r\n    )\r\n}\r\n\r\n","export const tableMessages = {\r\n    Search: \"Search...\",\r\n    New: \"New\",\r\n    Edit: \"Edit\",\r\n    Cancel: \"Cancel\",\r\n    Delete: \"Delete\",\r\n    Refresh: \"Refresh\",\r\n    Save: \"Save Changes\",\r\n    YouAreGoingToDeleteRows: \"You are going to delete {count} row(s)!\",\r\n    ChangesAreSaved: \"{plural}: Changes are saved.\",\r\n    RowsDeleted: \"{plural}: {count} row(s) deleted.`\",\r\n    RowsSelected: \"{count} row(s) selected\",\r\n\r\n    format: (message, args) => {\r\n        if (!message || !args) return message;\r\n        for (var propName in args) {\r\n            message = message.replace(\"{\" + propName + \"}\", args[propName]);\r\n        }\r\n        return message;\r\n    },\r\n};\r\n","import React from \"react\";\r\nimport { useGlobalFilter, useSortBy, useRowSelect, useTable } from \"react-table\";\r\nimport * as bs from \"react-basic-design\";\r\nimport { Checkbox } from \"./checkbox\";\r\nimport { GlobalFilter } from \"./global-filter\";\r\nimport { tableMessages } from \"./table-messages\";\r\nimport * as icons from \"../../../assets/icons\";\r\n\r\nexport function BasicTable1({ columns, data, title, filtrable, selectable, onAdd, onEdit, onDelete, onRefresh, messages, ...props }) {\r\n    messages = {\r\n        ...tableMessages,\r\n        ...messages,\r\n    };\r\n\r\n    const {\r\n        getTableProps,\r\n        getTableBodyProps,\r\n        headerGroups,\r\n        rows,\r\n        setGlobalFilter,\r\n        //state: { pageIndex, pageSize, selectedRowIds, globalFilter },\r\n        state: { globalFilter },\r\n        prepareRow,\r\n        selectedFlatRows,\r\n        toggleAllRowsSelected,\r\n    } = useTable(\r\n        {\r\n            columns,\r\n            data,\r\n        },\r\n        useGlobalFilter,\r\n        useSortBy,\r\n        useRowSelect,\r\n        (hooks) => {\r\n            if (!selectable) return;\r\n\r\n            hooks.allColumns.push((columns) => [\r\n                {\r\n                    id: \"selection\",\r\n                    Header: ({ getToggleAllRowsSelectedProps }) => (\r\n                        <label className=\"d-block m-0 text-center\">\r\n                            <Checkbox {...getToggleAllRowsSelectedProps()} />\r\n                        </label>\r\n                    ),\r\n                    Cell: ({ row }) => (\r\n                        <label className=\"d-block m-0 text-center\">\r\n                            <Checkbox {...row.getToggleRowSelectedProps()} />\r\n                        </label>\r\n                    ),\r\n                },\r\n                ...columns,\r\n            ]);\r\n        }\r\n    );\r\n\r\n    const onRefreshClick = () => {\r\n        if (!!onRefresh) onRefresh();\r\n        return false;\r\n    };\r\n    const onAddClick = () => {\r\n        if (!!onAdd) onAdd();\r\n    };\r\n    const onEditClick = () => {\r\n        if (!!onEdit && selectedFlatRows.length === 1) onEdit(selectedFlatRows[0].original);\r\n    };\r\n    const onDeleteClick = () => {\r\n        if (!!onDelete) onDelete(selectedFlatRows);\r\n    };\r\n\r\n    const onTdClick = (row, cell) => {\r\n        if (!cell.column._toggleOnClick) return;\r\n        var is_selected = row.isSelected;\r\n        toggleAllRowsSelected(false);\r\n        if (!is_selected) row.toggleRowSelected();\r\n    };\r\n    /*\r\n    const ToolButton = ({ title, icon, disabled, hide, ...props }) => {\r\n        if (hide) return <></>;\r\n        var args = disabled\r\n            ? {\r\n                  ...props,\r\n                  disabled,\r\n              }\r\n            : {\r\n                  ...props,\r\n              };\r\n        return (\r\n            <bs.Button small icon={icon} {...args}>\r\n                {title}\r\n            </bs.Button>\r\n        );\r\n    };\r\n*/\r\n    function format(message, args) {\r\n        if (!message) return message;\r\n        if (typeof message === \"string\" && message.indexOf(\"{\") === -1) return message;\r\n        if (!args) args = {};\r\n        args = {\r\n            count: selectedFlatRows.length,\r\n            plural: title,\r\n            //singular: singularTitle,\r\n            ...args,\r\n        };\r\n        if (typeof message === \"function\") {\r\n            args = {\r\n                //original: entity,\r\n                //insertMode,\r\n                selection: selectedFlatRows.map((x) => x.original),\r\n                ...args,\r\n            };\r\n            return message(args);\r\n        }\r\n        return messages.format(message, args);\r\n    }\r\n\r\n    const menuMore = (\r\n        <bs.Menu>\r\n            {onRefresh && (\r\n                <bs.MenuItem href=\"#/refrsh\" onClick={onRefreshClick}>\r\n                    {format(messages.Refresh)}\r\n                </bs.MenuItem>\r\n            )}\r\n            <bs.MenuItem href=\"#/\" onClick={onDeleteClick} disabled={selectedFlatRows.length < 1}>\r\n                {format(messages.Delete)}\r\n            </bs.MenuItem>\r\n        </bs.Menu>\r\n    );\r\n\r\n    return (\r\n        <>\r\n            <bs.Toolbar size=\"sm\" gap={1} className=\"px-2\">\r\n                {selectedFlatRows.length === 0 && (\r\n                    <bs.Button size=\"md\" variant=\"icon\" color=\"primary\" onClick={onAddClick} edge=\"start\">\r\n                        <icons.Add />\r\n                    </bs.Button>\r\n                )}\r\n                {selectedFlatRows.length === 1 && (\r\n                    <bs.Button size=\"md\" variant=\"icon\" color=\"secondary\" onClick={onEditClick} title={format(messages.Edit)} edge=\"start\">\r\n                        <icons.Edit />\r\n                    </bs.Button>\r\n                )}\r\n\r\n                <b className=\"flex-grow-1\">{selectedFlatRows.length === 0 ? title : format(messages.RowsSelected)}</b>\r\n                {filtrable && (\r\n                    <div\r\n                        style={{\r\n                            maxWidth: 200,\r\n                        }}\r\n                    >\r\n                        <GlobalFilter filter={globalFilter} setFilter={setGlobalFilter} messages={messages} />\r\n                    </div>\r\n                )}\r\n\r\n                <bs.Button size=\"md\" variant=\"icon\" color=\"inherit\" menu={menuMore} edge=\"end\">\r\n                    <icons.MoreVert />\r\n                </bs.Button>\r\n            </bs.Toolbar>\r\n\r\n            <table className=\"basic-table table table-striped0 table-bordered table-hover0 table-sm\" {...getTableProps()} {...props}>\r\n                <thead>\r\n                    {headerGroups.map((headerGroup) => (\r\n                        <tr {...headerGroup.getHeaderGroupProps()}>\r\n                            {headerGroup.headers.map((column) => {\r\n                                var size = 17;\r\n                                return (\r\n                                    // Add the sorting props to control sorting. For this example\r\n                                    // we can add them into the header props\r\n                                    <th {...column.getHeaderProps(column._isSortable && column.getSortByToggleProps())}>\r\n                                        {column.render(\"Header\")}\r\n                                        <span>\r\n                                            {column.isSorted ? (\r\n                                                column.isSortedDesc ? (\r\n                                                    <icons.ArrowDropDown width={size} height={size} />\r\n                                                ) : (\r\n                                                    <icons.ArrowDropUp width={size} height={size} />\r\n                                                )\r\n                                            ) : (\r\n                                                \"\"\r\n                                            )}\r\n                                        </span>\r\n                                    </th>\r\n                                );\r\n                            })}\r\n                        </tr>\r\n                    ))}\r\n                </thead>\r\n                <tbody {...getTableBodyProps()}>\r\n                    {rows.map((row, i) => {\r\n                        prepareRow(row);\r\n                        return (\r\n                            <tr {...row.getRowProps()} className={row.isSelected ? \"table-selected\" : \"\"}>\r\n                                {row.cells.map((cell) => {\r\n                                    var tdprops = cell.getCellProps();\r\n                                    var p = cell.column._cellProps;\r\n                                    if (!!p) {\r\n                                        if (typeof p === \"function\") p = p(row, cell);\r\n                                        tdprops = {\r\n                                            ...tdprops,\r\n                                            ...p,\r\n                                        };\r\n                                    }\r\n                                    return (\r\n                                        <td {...tdprops} onClick={() => onTdClick(row, cell)}>\r\n                                            {cell.render(\"Cell\")}\r\n                                        </td>\r\n                                    );\r\n                                })}\r\n                            </tr>\r\n                        );\r\n                    })}\r\n                </tbody>\r\n            </table>\r\n        </>\r\n    );\r\n}\r\n","import React, { useState, useMemo } from \"react\";\r\nimport { Modal, Button } from \"react-bootstrap\";\r\nimport { notify } from \"../notify\";\r\nimport { BasicTable1 } from \"./basic-table-1\";\r\nimport { tableMessages } from \"./table-messages\";\r\nimport { Form } from \"react-final-form\";\r\nimport BasicValidator from \"basic-data-validator\";\r\nimport { GenerateEditControls } from \"./generate-edit-controls\";\r\n\r\n/*\r\n   Columns Fields:\r\n        Header: '���',\r\n        accessor: 'city',\r\n        _toggleOnClick: true,\r\n        _editor: 'select | number | checkbox | radio',\r\n        _validValues: [ { code: \"1\", title: \"\" }, ... ],\r\n        _validValues: [\"Tehran\", \"Karaj\", \"Isfahan\", \"Sari\"],\r\n*/\r\n\r\nexport function DataTable({\r\n    title,\r\n    singularTitle,\r\n    columns,\r\n    data,\r\n    onRefresh,\r\n    onInsert,\r\n    onUpdate,\r\n    onDelete,\r\n    messages,\r\n    ...props\r\n}) {\r\n    messages = { ...tableMessages, ...messages };\r\n    columns = useMemo(() => columns, [columns]);\r\n\r\n    const [busy, setBusy] = useState(false);\r\n    const [showEditForm, setShowEditForm] = useState(false);\r\n    const [showDeleteForm, setShowDeleteForm] = useState(false);\r\n    const [selectedRows, setSelectedRows] = useState([]);\r\n    const [insertMode, setInsertMode] = useState(false);\r\n    const [entity, setEntity] = useState({});\r\n\r\n    const handleClose = () => {\r\n        setShowEditForm(false);\r\n        setShowDeleteForm(false);\r\n    };\r\n\r\n    const deleteRowsClick = () => {\r\n        var selection = selectedRows.map((x) => x.original);\r\n        setBusy(true);\r\n        onDelete(selection)\r\n            .then((x) => {\r\n                setShowDeleteForm(false);\r\n                notify.info(format(messages.RowIsDeleted));\r\n                setBusy(false);\r\n            })\r\n            .catch((ex) => {\r\n                notify.error(ex);\r\n                setBusy(false);\r\n            });\r\n    };\r\n\r\n    const onSubmit = (values) => {\r\n        setBusy(true);\r\n        var task = insertMode ? onInsert(values) : onUpdate(values);\r\n        task.then((result) => {\r\n            setShowEditForm(false);\r\n            notify.success(format(messages.ChangesAreSaved));\r\n            setBusy(false);\r\n        }).catch((ex) => {\r\n            notify.error(ex);\r\n            setBusy(false);\r\n        });\r\n    };\r\n\r\n    function onOpenEditor(data) {\r\n        setInsertMode(!data);\r\n        setEntity(!data ? {} : data);\r\n        setShowEditForm(true);\r\n    }\r\n\r\n    function onAskForDelete(rows) {\r\n        setSelectedRows(rows);\r\n        setShowDeleteForm(true);\r\n    }\r\n\r\n    function format(message, args) {\r\n        if (!message) return message;\r\n        if (typeof message === \"string\" && message.indexOf(\"{\") === -1) return message;\r\n        if (!args) args = {};\r\n        args = {\r\n            count: selectedRows.length,\r\n            plural: title,\r\n            singular: singularTitle,\r\n            ...args,\r\n        };\r\n        if (typeof message === \"function\") {\r\n            args = {\r\n                original: entity,\r\n                insertMode,\r\n                selection: selectedRows.map((x) => x.original),\r\n                ...args,\r\n            };\r\n            return message(args);\r\n        }\r\n        return messages.format(message, args);\r\n    }\r\n\r\n    const myValidator = BasicValidator((builder) =>\r\n        builder.object({\r\n            //userName: builder.string().required().userName(),\r\n            //password: builder.string().required().password(),\r\n            //captcha: builder.string().required().length(4),\r\n        })\r\n    );\r\n\r\n    return (\r\n        <>\r\n            <BasicTable1\r\n                title={title}\r\n                columns={columns}\r\n                data={data}\r\n                onAdd={onOpenEditor}\r\n                onEdit={onOpenEditor}\r\n                onDelete={onAskForDelete}\r\n                onRefresh={onRefresh}\r\n                messages={messages}\r\n                {...props}\r\n            />\r\n\r\n            {/* EDIT FORM */}\r\n            <Modal show={showEditForm} onHide={handleClose} size=\"md\">\r\n                <Modal.Header closeButton className=\"py-2\">\r\n                    <Modal.Title className=\"h4\">\r\n                        {format(insertMode ? messages.New : messages.Edit)} {singularTitle}\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <Form\r\n                        initialValues={entity}\r\n                        onSubmit={onSubmit}\r\n                        validate={myValidator.validate}\r\n                        render={({ handleSubmit, form, submitting, pristine, invalid, values }) => (\r\n                            <form onSubmit={handleSubmit} className=\"form register\">\r\n                                <GenerateEditControls\r\n                                    columns={columns}\r\n                                    data={entity}\r\n                                    insertMode={insertMode}\r\n                                    size=\"sm\"\r\n                                />\r\n                                <div className=\"text-end mt-4\">\r\n                                    <Button\r\n                                        variant=\"link\"\r\n                                        size=\"sm\"\r\n                                        className=\"text-decoration-none\"\r\n                                        onClick={handleClose}\r\n                                    >\r\n                                        {format(messages.Cancel)}\r\n                                    </Button>\r\n                                    <Button variant=\"warning\" size=\"sm\" type=\"submit\" disabled={busy || invalid}>\r\n                                        {busy && <div className=\"me-2 spinner-border spinner-border-sm\"></div>}\r\n                                        {format(messages.Save)}\r\n                                    </Button>\r\n                                </div>\r\n                            </form>\r\n                        )}\r\n                    />\r\n                </Modal.Body>\r\n            </Modal>\r\n\r\n            {/* DELETE FORM */}\r\n            <Modal show={showDeleteForm} onHide={handleClose}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>{title}</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>{format(messages.YouAreGoingToDeleteRows)}</Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"link\" size=\"sm\" className=\"text-decoration-none\" onClick={handleClose}>\r\n                        {format(messages.Cancel)}\r\n                    </Button>\r\n                    <Button variant=\"danger\" size=\"sm\" className=\"text-white\" onClick={deleteRowsClick} disabled={busy}>\r\n                        {busy && <div className=\"me-2 spinner-border spinner-border-sm\"></div>}\r\n                        {format(messages.Delete)}\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </>\r\n    );\r\n}\r\n","\r\nexport const myTableMessages = {\r\n    Search: 'جستجو ...',\r\n    New: 'ایجاد',\r\n    Edit: 'ویرایش',\r\n    Cancel: 'انصراف',\r\n    Delete: 'حذف',\r\n    Refresh: 'بروزرسانی',\r\n    Save: 'ثبت تغییرات',\r\n    YouAreGoingToDeleteRows: 'شما در حال حذف {count} ردیف می باشید!',\r\n    ChangesAreSaved: '{plural}: تغییرات با موفقیت ثبت شد',\r\n    RowsDeleted: '{plural}: {count} ردیف حدف شد',\r\n    RowsSelected: '{count} ردیف انتخاب شده است',\r\n\r\n    format: (message, args) => {\r\n        if (!message || !args) return message;\r\n        for (var propName in args) {\r\n            message = message.replace(\"{\" + propName + \"}\", args[propName]);\r\n        }\r\n        return message;\r\n    }\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport * as bs from \"react-basic-design\";\r\nimport { Tab, Tabs } from \"react-bootstrap\";\r\n\r\nimport InsertDriveFile from \"../../../assets/icons/InsertDriveFile\";\r\nimport Folder from \"../../../assets/icons/Folder\";\r\nimport ArrowBackIos from \"../../../assets/icons/ArrowBackIos\";\r\nimport { menuApi } from \"../../../api/menu-api\";\r\nimport { MenuDesigner } from \"./menu-designer\";\r\nimport * as tables from \"../../../data\";\r\nimport accountManager from \"../../../app/account-manager\";\r\nimport { DataTable } from \"../../../components/basic/table/data-table\";\r\nimport { myTableMessages } from \"../../../components/my-table-messages\";\r\n\r\nexport function MenuApp() {\r\n    const [projects, setProjects] = useState([]);\r\n    const [app, setApp] = useState(null);\r\n    const [menuFolders, setMenuFolders] = useState([]);\r\n    const [menus, setMenus] = useState([]);\r\n\r\n    const onRefresh = (app) =>\r\n        menuApi.load(!app ? \"not-assigned-app\" : app.id).then((x) => {\r\n            setProjects(x.projects);\r\n            setMenuFolders(x.menuFolders);\r\n            setMenus(x.menus);\r\n        });\r\n    const onInsertApp = (entity) =>\r\n        menuApi.insertApp(entity).then((x) => {\r\n            setProjects(x);\r\n            return x;\r\n        });\r\n    const onUpdateApp = (entity) =>\r\n        menuApi.updateApp(entity).then((x) => {\r\n            setProjects(x);\r\n            return x;\r\n        });\r\n    const onDeleteApp = (selection) =>\r\n        menuApi.deleteApp(selection).then((x) => {\r\n            setProjects(x);\r\n            return x;\r\n        });\r\n\r\n    const onAdd = (entity, tb) =>\r\n        tb.is(\"menus\")\r\n            ? menuApi.insertMenu(app.id, entity).then((x) => {\r\n                  menus.push(x);\r\n                  setMenus(menus);\r\n                  return x;\r\n              })\r\n            : menuApi.insertFolder(app.id, entity).then((x) => {\r\n                  menuFolders.push(x);\r\n                  setMenuFolders(menuFolders);\r\n                  return x;\r\n              });\r\n\r\n    const onUpdate = (entity, tb) =>\r\n        tb.is(\"menus\")\r\n            ? menuApi.updateMenu(app.id, entity).then((x) => {\r\n                  setMenus([x, ...menus.filter((x) => x.id !== entity.id)]);\r\n                  return x;\r\n              })\r\n            : menuApi.updateFolder(app.id, entity).then((x) => {\r\n                  setMenuFolders([x, ...menuFolders.filter((x) => x.id !== entity.id)]);\r\n                  return x;\r\n              });\r\n\r\n    const onDelete = (entity, tb) =>\r\n        tb.is(\"menus\")\r\n            ? menuApi.deleteMenu(app.id, entity.id).then((x) => setMenus(menus.filter((x) => x.id !== entity.id)))\r\n            : menuApi.deleteFolder(app.id, entity.id).then((x) => setMenuFolders(menuFolders.filter((x) => x.id !== entity.id)));\r\n\r\n    const menuProjects = (\r\n        <bs.Menu>\r\n            {projects.map((x) => (\r\n                <bs.MenuItem onClick={(e) => setApp(x)}>{x.title}</bs.MenuItem>\r\n            ))}\r\n        </bs.Menu>\r\n    );\r\n\r\n    useEffect(\r\n        () =>\r\n            accountManager.status.onConnected(function () {\r\n                onRefresh(app);\r\n            }).remove,\r\n        [app]\r\n    );\r\n\r\n    function changeApp(newApp) {\r\n        setApp(newApp);\r\n        setMenuFolders([]);\r\n        setMenus([]);\r\n        onRefresh(newApp);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {app && (\r\n                <bs.AppBar color position=\"sticky\" style={{ zIndex: 10 }} shadow={0} className=\"shadow-0 border-bottom\">\r\n                    <div className=\"container\">\r\n                        <bs.Toolbar>\r\n                            <bs.Button variant=\"icon\" size=\"md\" onClick={() => setApp(null)}>\r\n                                <ArrowBackIos />\r\n                            </bs.Button>\r\n                            <h5 className=\"m-s-2 appbar-title\">\r\n                                Menu Designer :<span className=\"m-s-3 text-secondary\">{app.title}</span>\r\n                            </h5>\r\n\r\n                            <bs.Button variant=\"icon\">\r\n                                <Folder />\r\n                            </bs.Button>\r\n\r\n                            <bs.Button variant=\"icon\">\r\n                                <InsertDriveFile />\r\n                            </bs.Button>\r\n                        </bs.Toolbar>\r\n                    </div>\r\n                </bs.AppBar>\r\n            )}\r\n\r\n            {!app && (\r\n                <div className=\"text-center py-4 border-bottom bg-default\">\r\n                    <h5>Menu Designer:</h5>\r\n                    <bs.Button variant=\"\" color=\"primary\" menu={menuProjects} className=\"m-auto\">\r\n                        Select a project ...\r\n                    </bs.Button>\r\n                </div>\r\n            )}\r\n\r\n            <div className=\"container-fluid py-3\">\r\n                <Tabs defaultActiveKey=\"menus\">\r\n                    <Tab eventKey=\"menus\" title=\"Define Menu\">\r\n                        <div className=\"card card-accent-secondary m-0\">\r\n                            <div className=\"card-body\">\r\n                                <MenuDesigner\r\n                                    applications={projects}\r\n                                    currApp={app}\r\n                                    setApp={changeApp}\r\n                                    menus={menus}\r\n                                    menuFolders={menuFolders}\r\n                                    onAdd={onAdd}\r\n                                    onUpdate={onUpdate}\r\n                                    onDelete={onDelete}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </Tab>\r\n\r\n                    <Tab eventKey=\"apps\" title=\"Define Projects\">\r\n                        <div className=\"card m-0\">\r\n                            <div className=\"card-body\" style={{ maxWidth: 700 }}>\r\n                                <DataTable\r\n                                    title=\"برنامه ها\"\r\n                                    singularTitle=\"برنامه\"\r\n                                    columns={tables.applications.getReactTableColumns()}\r\n                                    data={projects}\r\n                                    onRefresh={onRefresh}\r\n                                    onInsert={onInsertApp}\r\n                                    onUpdate={onUpdateApp}\r\n                                    onDelete={onDeleteApp}\r\n                                    messages={myTableMessages}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </Tab>\r\n                </Tabs>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport { messages } from \"../../components/messages\";\r\n\r\nexport default function NotFound() {\r\n    return <div className=\"container-fluid h-100 d-flex justify-content-center align-items-center text-center\" >\r\n        <div className=\"p-4 text-warning \" style={{ maxWidth: 500, borderRadius: 10 }}>\r\n            <h2 className=\"text-dark\" style={{ fontWeight: 'bold', maxWidth: 500, borderRadius: 10, textShadow: '1px 1px 3px #000', fontSize: 80 }}>{messages.PageNotFoundTitle}</h2>\r\n            <p className=\"text-dark\" style={{ fontSize: 22 }}>{messages.PageNotFoundDescription}</p>\r\n        </div>\r\n    </div>;\r\n}\r\n","export default __webpack_public_path__ + \"static/media/procurement.ffddee6f.png\";","import React, { useEffect, useState } from \"react\";\r\nimport * as bs from \"react-basic-design\";\r\n\r\nimport procurement from \"../../../assets/bg/procurement.png\";\r\nimport { messages } from \"../../../components/messages\";\r\nimport accountManager from \"../../../app/account-manager\";\r\n\r\nexport function Dashboard() {\r\n    const [, setUser] = useState({});\r\n\r\n    useEffect(() => accountManager.bind(setUser).remove, []);\r\n\r\n    return (\r\n        <div className=\"container p-3\">\r\n            <div className=\"row\">\r\n                <div className=\"col-lg-12\">\r\n                    <bs.Card>\r\n                        <bs.CardBody>\r\n                            <div className=\"d-flex p-3\">\r\n                                <img src={procurement} style={{ maxWidth: 200 }} alt=\"\" />\r\n                                <div className=\"flex-grow-1 p-3\">\r\n                                    <h2>{messages.Welcome}</h2>\r\n                                    <p>{messages.WelcomeText}</p>\r\n                                </div>\r\n                            </div>\r\n                        </bs.CardBody>\r\n                    </bs.Card>\r\n                    <div className=\"row my-3\">\r\n                        <div className=\"col-4\">\r\n                            <bs.Card>\r\n                                <bs.CardBody>INBOX</bs.CardBody>\r\n                            </bs.Card>\r\n                        </div>\r\n                        <div className=\"col-4\">\r\n                            <bs.Card>\r\n                                <bs.CardBody>ORDEERS</bs.CardBody>\r\n                            </bs.Card>\r\n                        </div>\r\n                        <div className=\"col-4\">\r\n                            <bs.Card>\r\n                                <bs.CardBody>ORDEERS</bs.CardBody>\r\n                            </bs.Card>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"col-lg-4\"></div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport * as bs from \"react-basic-design\";\r\n\r\nimport accountManager from \"../../../app/account-manager\";\r\n\r\nexport function Inbox() {\r\n    const [, setUser] = useState({});\r\n\r\n    useEffect(() => accountManager.bind(setUser).remove, []);\r\n\r\n    return (\r\n        <div className=\"container p-3\">\r\n            <bs.Card>\r\n                <bs.CardBody>INBOX</bs.CardBody>\r\n            </bs.Card>\r\n        </div>\r\n    );\r\n}\r\n","import classNames from \"classnames\";\r\nimport React from \"react\";\r\nimport * as bs from \"react-basic-design\";\r\n\r\nimport \"./index.scss\";\r\nimport * as icons from \"../../assets/icons\";\r\n\r\nexport function TileMenu({ folders, menus, parent, onSelect, selectedFolder, selectedMenu, activeItem, light, dark, ...props }) {\r\n    const parentId = !parent ? null : parent.id;\r\n\r\n    if (!folders) folders = [];\r\n    if (!menus) menus = [];\r\n    if (folders.length === 0 && menus.length === 0) return <></>;\r\n\r\n    var cn = null;\r\n    if (!parentId) {\r\n        cn = classNames(\"tilemenu\", {\r\n            \"tilemenu-light\": light,\r\n            \"tilemenu-dark\": dark,\r\n        });\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <ul className={cn} {...props}>\r\n                {folders\r\n                    .filter((x) => x.parentId === parentId)\r\n                    .map((f) => (\r\n                        <MenuFolder\r\n                            key={f.id}\r\n                            folders={folders}\r\n                            menus={menus}\r\n                            folder={f}\r\n                            onSelect={onSelect}\r\n                            selectedFolder={selectedFolder}\r\n                            selectedMenu={selectedMenu}\r\n                            activeItem={activeItem}\r\n                        />\r\n                    ))}\r\n                {menus\r\n                    .filter((x) => x.parentId === parentId)\r\n                    .map((mi) => (\r\n                        <MenuItem\r\n                            key={mi.id}\r\n                            menu={mi}\r\n                            onSelect={onSelect}\r\n                            selectedFolder={selectedFolder}\r\n                            selectedMenu={selectedMenu}\r\n                            activeItem={activeItem}\r\n                        />\r\n                    ))}\r\n            </ul>\r\n        </>\r\n    );\r\n}\r\n\r\nfunction MenuFolder({ folders, menus, folder, onSelect, selectedFolder, selectedMenu, activeItem }) {\r\n    return (\r\n        <li className=\"mi-folder\">\r\n            <div className=\"mi-item\">\r\n                <div\r\n                    className={classNames({\r\n                        \"text-primary\": !folder.parentId,\r\n                        \"text-secondary-text\": !!folder.parentId,\r\n                    })}\r\n                >\r\n                    {!folder.parentId && (\r\n                        <i>\r\n                            <menuHelper.FolderIcon />\r\n                        </i>\r\n                    )}\r\n                    <span className=\"mi-text\">{folder.title}</span>\r\n                </div>\r\n            </div>\r\n            <TileMenu\r\n                folders={folders}\r\n                menus={menus}\r\n                parent={folder}\r\n                onSelect={onSelect}\r\n                selectedFolder={selectedFolder}\r\n                selectedMenu={selectedMenu}\r\n                activeItem={activeItem}\r\n            />\r\n        </li>\r\n    );\r\n}\r\n\r\nfunction MenuItem({ menu, onSelect, selectedMenu, activeItem }) {\r\n    return (\r\n        <li className=\"mi-menu\">\r\n            <div className=\"mi-item\">\r\n                <a\r\n                    href=\"#/\"\r\n                    onClick={(e) => {\r\n                        onSelect(null, menu);\r\n                        return false;\r\n                    }}\r\n                    className={classNames(\"border bg-default hover-shade-5 text-primary-text\", {\r\n                        \"mi-selected\": selectedMenu && selectedMenu.id === menu.id,\r\n                        \"mi-active\": activeItem && activeItem.id === menu.id,\r\n                    })}\r\n                >\r\n                    <span className=\"mi-text\">{menu.title}</span>\r\n                    {!!menu.badgeText && <span className={classNames(\"mi-more\", menu.badgeCss)}> {menu.badgeText}</span>}\r\n                </a>\r\n            </div>\r\n        </li>\r\n    );\r\n}\r\n\r\nexport const menuHelper = {\r\n    iconSize: 18,\r\n    FolderIcon: () => <icons.Folder width={menuHelper.iconSize} height={menuHelper.iconSize} />,\r\n    CaretIcon: () => <icons.ChevronLeft width={menuHelper.iconSize} height={menuHelper.iconSize} />,\r\n    MenuIcon: () => <icons.Adjust width={menuHelper.iconSize * 0.6} height={menuHelper.iconSize * 0.6} />,\r\n\r\n    isOpen: ({ folder, folders, menus, selectedFolder, selectedMenu }) => {\r\n        if (!folder) return false;\r\n        if (!folder.parentId || folder === selectedFolder || (!!selectedMenu && folder.id === selectedMenu.parentId)) return true;\r\n        var subFolders = folders.filter((x) => x.parentId === folder.id);\r\n        for (var i = 0; i < subFolders.length; i++) {\r\n            var f = subFolders[i];\r\n            if (\r\n                menuHelper.isOpen({\r\n                    folder: f,\r\n                    folders,\r\n                    menus,\r\n                    selectedFolder,\r\n                    selectedMenu,\r\n                })\r\n            )\r\n                return true;\r\n        }\r\n        return false;\r\n    },\r\n};\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport * as bs from \"react-basic-design\";\r\n\r\n//import { messages } from \"../../../components/messages\";\r\nimport * as icons from \"../../../assets/icons\";\r\nimport accountManager from \"../../../app/account-manager\";\r\nimport { menuHelper, TileMenu } from \"../../../components/tilemenu\";\r\nimport { ThemeContext } from \"../../../app/theme-context\";\r\nimport { menuApi } from \"../../../api/menu-api\";\r\nimport { notify } from \"../../../components/basic/notify\";\r\n\r\nexport function SysMenuApp() {\r\n    const [menuFolders, setMenuFolders] = useState([]);\r\n    const [menus, setMenus] = useState([]);\r\n    const [user] = useState({});\r\n    const [activeItem, setActiveItem] = useState(null);\r\n    const [selectedFolder, setSelectedFolder] = useState(null);\r\n    const [selectedMenu, setSelectedMenu] = useState(null);\r\n    const [theme] = useContext(ThemeContext);\r\n    //const is_dark = true;\r\n    const is_dark = theme !== \"mui-light\";\r\n\r\n    //useEffect(() => accountManager.bind(setUser).remove, []);\r\n\r\n    useEffect(\r\n        () =>\r\n            accountManager.status.onConnected(function () {\r\n                menuApi\r\n                    .myMenu()\r\n                    .then((x) => {\r\n                        setMenuFolders(x.menuFolders);\r\n                        setMenus(x.menus);\r\n                    })\r\n                    .catch((ex) => notify(ex));\r\n            }).remove,\r\n        []\r\n    );\r\n\r\n    const onSelectMenu = (folder, menu) => {\r\n        if (\r\n            menuHelper.isOpen({\r\n                folder,\r\n                folders: user.menuFolders,\r\n                menus: user.menus,\r\n                selectedFolder,\r\n                selectedMenu,\r\n            })\r\n        ) {\r\n            folder = folder.parentId == null ? null : user.menuFolders.find((x) => x.id === folder.parentId);\r\n        }\r\n        setSelectedFolder(folder);\r\n        setSelectedMenu(menu);\r\n        if (menu) {\r\n            setActiveItem(menu);\r\n            window.location.href = menu.url;\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"container p-3\">\r\n            <TileMenu\r\n                folders={menuFolders}\r\n                menus={menus}\r\n                onSelect={onSelectMenu}\r\n                selectedFolder={selectedFolder}\r\n                selectedMenu={selectedMenu}\r\n                activeItem={activeItem}\r\n                light={!is_dark}\r\n                dark={is_dark}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nSysMenuApp.Appbar = (\r\n    <>\r\n        <bs.Button variant=\"icon\" color=\"inherit\">\r\n            <icons.Search />\r\n        </bs.Button>\r\n    </>\r\n);\r\n","import React from \"react\";\r\nimport accountManager from \"../../app/account-manager\";\r\nimport * as bs from \"react-basic-design\";\r\nimport settings from \"../../app/settings\";\r\n\r\nexport default function Landing() {\r\n    function GotoSysMenu() {\r\n        window.location = accountManager.isLoggedin() ? \"/home\" : \"/login\";\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div\r\n                className=\"landing\"\r\n                style={{\r\n                    backgroundImage: \"url(/images/bg/bg1.jpg)\",\r\n                    backgroundSize: \"cover\",\r\n                }}\r\n            >\r\n                <bs.AppBar color=\"inherit\" shadow={0} className=\"border-bottom shadow-0\" style={{ backgroundColor: \"transparent\" }}>\r\n                    <div className=\"container\">\r\n                        <bs.Toolbar>\r\n                            <img\r\n                                src=\"/images/logo/logo.png\"\r\n                                alt=\"logo\"\r\n                                style={{\r\n                                    fontSize: \"2.2rem\",\r\n                                    width: \"1em\",\r\n                                    height: \"1em\",\r\n                                }}\r\n                            />\r\n\r\n                            <h5 className=\"appbar-title\">{settings.title}</h5>\r\n                        </bs.Toolbar>\r\n                    </div>\r\n                </bs.AppBar>\r\n\r\n                <div className=\"container\">\r\n                    <section\r\n                        className=\"banner py-5 px-30\"\r\n                        style={{\r\n                            maxWidth: 1000,\r\n                            minHeight: 450,\r\n                            fontSize: \"1.15rem\",\r\n                        }}\r\n                    >\r\n                        <div className=\"row\">\r\n                            <p className=\"col-lg-8\">\r\n                                <h2>Welcome</h2>\r\n                                We can help you to boost engagement with your visitors by ensuring that people have access to the information that\r\n                                they. A business concept is a statement that describes the reach and reason of existence of a given business idea.\r\n                            </p>\r\n                            <p className=\"col-lg-4 pt-5 text-center\">\r\n                                <bs.Button color=\"primary\" onClick={GotoSysMenu}>\r\n                                    Start Project\r\n                                </bs.Button>\r\n                            </p>\r\n                        </div>\r\n                    </section>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"features py-5\">\r\n                <section className=\"container\">\r\n                    <h2>FAQ</h2>\r\n                    <p>\r\n                        <h3>#1: What are you doing?</h3>\r\n                        <br />\r\n                        Sample text. Click to select the text box. Click again or double click to start editing the text.\r\n                    </p>\r\n\r\n                    <p>\r\n                        <h3>#2: What is your product features?</h3>\r\n                        <br />\r\n                        Sample text. Click to select the text box. Click again or double click to start editing the text.\r\n                    </p>\r\n                </section>\r\n            </div>\r\n\r\n            <footer className=\"page-footer\">\r\n                <section className=\"container\">\r\n                    <ul className=\"links\">\r\n                        <li>\r\n                            <a href=\"/\">Home</a>\r\n                        </li>\r\n                        <li>\r\n                            <a href=\"/#about\">About us</a>\r\n                        </li>\r\n                        <li>\r\n                            <a href=\"/#contact\">Contact us</a>\r\n                        </li>\r\n                    </ul>\r\n                    <p>&copy; 2021 All rights reserved for my componay</p>\r\n                </section>\r\n            </footer>\r\n        </>\r\n    );\r\n}\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport * as bs from \"react-basic-design\";\r\nimport accountManager from \"../../app/account-manager\";\r\nimport settings from \"../../app/settings\";\r\nimport { ThemeContext } from \"../../app/theme-context\";\r\nimport SvgHome from \"../../assets/icons/Home\";\r\nimport SvgNotificationsActive from \"../../assets/icons/NotificationsActive\";\r\nimport SvgDarkMode from \"../../assets/icons/DarkMode\";\r\nimport SvgAccountCircle from \"../../assets/icons/AccountCircle\";\r\n\r\nexport function MainLayout({ component: Comp, ...props }) {\r\n    const [, setUser] = useState({});\r\n    const [theme, setTheme] = useContext(ThemeContext);\r\n\r\n    useEffect(() => accountManager.bind(setUser).remove, []);\r\n\r\n    function logout() {\r\n        accountManager.logout();\r\n        window.location = \"/login\";\r\n        return false;\r\n    }\r\n\r\n    function toggleDarkMode() {\r\n        if (theme && theme.indexOf(\"dark\") >= 0) setTheme(\"mui-light\");\r\n        else setTheme(\"mui-dark\");\r\n    }\r\n\r\n    const menuUser = (\r\n        <bs.Menu className=\"mt-n4 shadow-5\">\r\n            <bs.MenuItem>User Profige</bs.MenuItem>\r\n            <div className=\"dropdown-divider\"></div>\r\n            <bs.MenuItem>Settings</bs.MenuItem>\r\n            <bs.MenuItem onClick={logout}>Logout</bs.MenuItem>\r\n        </bs.Menu>\r\n    );\r\n\r\n    return (\r\n        <div className=\"d-flex flex-column h-100\">\r\n            <bs.AppBar color=\"inherit\" shadow={0} className=\"border-bottom\">\r\n                <div className=\"container\">\r\n                    <bs.Toolbar>\r\n                        <bs.Button variant=\"icon\" color=\"default\" href=\"/home\">\r\n                            <SvgHome style={{ fontSize: \"1.65rem\" }} />\r\n                        </bs.Button>\r\n\r\n                        <h5 className=\"appbar-title\">{settings.title}</h5>\r\n\r\n                        {Comp.Appbar}\r\n                        <bs.Badge value={2} overlapCircle className=\"bg-warning text-dark d-none d-sm-flex\">\r\n                            <bs.Button variant=\"icon\" color=\"default\" className=\"d-none d-sm-block\">\r\n                                <SvgNotificationsActive />\r\n                            </bs.Button>\r\n                        </bs.Badge>\r\n\r\n                        <bs.Button variant=\"icon\" color=\"default\" onClick={toggleDarkMode} className=\"d-none d-md-block\">\r\n                            <SvgDarkMode />\r\n                        </bs.Button>\r\n\r\n                        <bs.Button variant=\"icon\" color=\"default\" menu={menuUser} edge=\"end\" className=\"d-none d-sm-block\">\r\n                            <SvgAccountCircle />\r\n                        </bs.Button>\r\n                    </bs.Toolbar>\r\n                </div>\r\n            </bs.AppBar>\r\n\r\n            <main className=\"content flex-grow-1\">\r\n                <Comp {...props} />\r\n            </main>\r\n        </div>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport * as bs from \"react-basic-design\";\r\n\r\nexport function TablesApp() {\r\n    return (\r\n        <>\r\n            <bs.AppBar shadow={0} className=\"shadow-0 border-bottom\">\r\n                <div className=\"container\">\r\n                    <bs.Toolbar>\r\n                        <h5 className=\"appbar-title\">Maintain tables</h5>\r\n                    </bs.Toolbar>\r\n                </div>\r\n            </bs.AppBar>\r\n\r\n            <div className=\"py-4\">\r\n                <div className=\"container\">\r\n                    <h5 className=\"text-secondary-text\">Select a table ...</h5>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n","import settings from \"../app/settings\";\r\nimport { api } from \"./api\";\r\nimport { apiConfig } from \"./config\";\r\n\r\nexport const tableDesignerApi = {\r\n    getGroups: () => api.call(\"post\", `${apiConfig.tableDesignerUrl}/get-groups?projectId=${settings.projectId}`),\r\n\r\n    saveGroup: (group, insertMode) => {\r\n        var g = { ...group };\r\n        delete g.items;\r\n        var actionName = insertMode ? \"insert-group\" : \"update-group\";\r\n        return api.call(\"post\", `${apiConfig.tableDesignerUrl}/${actionName}?projectId=${settings.projectId}`, g);\r\n    },\r\n\r\n    deleteGroup: (groupId) => {\r\n        return api.call(\r\n            \"post\",\r\n            `${apiConfig.tableDesignerUrl}/delete-group?projectId=${settings.projectId}&groupId=${groupId}`\r\n        );\r\n    },\r\n\r\n    getTable: (tableName) =>\r\n        api.call(\r\n            \"post\",\r\n            `${apiConfig.tableDesignerUrl}/get-table?projectId=${settings.projectId}&tableName=${tableName}`\r\n        ),\r\n\r\n    saveTable: (groupId, table, insertMode) => {\r\n        var tb = { ...table };\r\n        var actionName = insertMode ? \"insert-table\" : \"update-table\";\r\n        return api.call(\r\n            \"post\",\r\n            `${apiConfig.tableDesignerUrl}/${actionName}?projectId=${settings.projectId}&groupId=${groupId}`,\r\n            tb\r\n        );\r\n    },\r\n\r\n    deleteTable: (tableName) => {\r\n        return api.call(\r\n            \"post\",\r\n            `${apiConfig.tableDesignerUrl}/delete-table?projectId=${settings.projectId}&tableName=${tableName}`\r\n        );\r\n    },\r\n\r\n    saveColumn: (tableName, column, insertMode) => {\r\n        var actionName = insertMode ? \"insert-column\" : \"update-column\";\r\n        return api.call(\r\n            \"post\",\r\n            `${apiConfig.tableDesignerUrl}/${actionName}?projectId=${settings.projectId}&tableName=${tableName}`,\r\n            column\r\n        );\r\n    },\r\n\r\n    deleteColumn: (columnId) => {\r\n        return api.call(\"post\", `${apiConfig.tableDesignerUrl}/delete-column?id=${columnId}`);\r\n    },\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport * as bs from \"react-basic-design\";\r\n\r\n//import * as tables from \"../../../data\";\r\nimport accountManager from \"../../../app/account-manager\";\r\n//import { DataTable } from \"../../../components/basic/table/data-table\";\r\n\r\nimport \"./index.scss\";\r\n//import { messages } from \"../../../components/messages\";\r\nimport classNames from \"classnames\";\r\nimport { tableDesignerApi } from \"../../../api/table-designer-api\";\r\nimport SvgArrowBackIos from \"../../../assets/icons/ArrowBackIos\";\r\nimport SvgFolder from \"../../../assets/icons/Folder\";\r\nimport SvgEdit from \"../../../assets/icons/Edit\";\r\nimport SvgInsertDriveFile from \"../../../assets/icons/InsertDriveFile\";\r\n\r\nexport function FormDesignerApp() {\r\n    const [group, setGroup] = useState(null);\r\n    const [form, setForm] = useState(null);\r\n\r\n    function goBack() {\r\n        setGroup(null);\r\n        setForm(null);\r\n    }\r\n\r\n    function refresh() {\r\n        goBack();\r\n        tableDesignerApi.menu();\r\n    }\r\n\r\n    useEffect(\r\n        () =>\r\n            accountManager.status.onConnected(function () {\r\n                refresh();\r\n            }).remove\r\n    );\r\n\r\n    return (\r\n        <>\r\n            <bs.AppBar shadow={0} className=\"shadow-0 border-bottom\">\r\n                <div className=\"container\">\r\n                    <bs.Toolbar>\r\n                        {(group || form) && (\r\n                            <bs.Button variant=\"icon\" onClick={goBack} size=\"md\">\r\n                                <SvgArrowBackIos />\r\n                            </bs.Button>\r\n                        )}\r\n                        <h5 className=\"appbar-title\">Form Designer</h5>\r\n\r\n                        <bs.Button variant=\"icon\">\r\n                            <SvgFolder />\r\n                        </bs.Button>\r\n                    </bs.Toolbar>\r\n                </div>\r\n            </bs.AppBar>\r\n\r\n            <div className={classNames(\"container\", { \"d-none\": group || form })}>\r\n                <ul className=\"tiles\">\r\n                    <li>\r\n                        <h5>\r\n                            Group 1\r\n                            <bs.Button\r\n                                variant=\"text\"\r\n                                size=\"sm\"\r\n                                className=\"mx-2\"\r\n                                color=\"secondary\"\r\n                                onClick={() => {\r\n                                    setGroup({ title: \"G1\" });\r\n                                    return false;\r\n                                }}\r\n                            >\r\n                                <SvgEdit />\r\n                                Edit Group\r\n                            </bs.Button>\r\n                            <bs.Button variant=\"text\" size=\"sm\" color=\"secondary\">\r\n                                <SvgInsertDriveFile />\r\n                                New Form\r\n                            </bs.Button>\r\n                        </h5>\r\n                        <ul>\r\n                            <li>\r\n                                <a\r\n                                    href=\"#Form1\"\r\n                                    onClick={() => {\r\n                                        setForm({ title: \"Form 1\" });\r\n                                        return false;\r\n                                    }}\r\n                                >\r\n                                    Form 1\r\n                                </a>\r\n                            </li>\r\n                            <li>\r\n                                <a href=\"#Form2\">Form 2</a>\r\n                            </li>\r\n                            <li>\r\n                                <a href=\"#Form3\">Form 3</a>\r\n                            </li>\r\n                        </ul>\r\n                    </li>\r\n                    <li>\r\n                        <h5>Group B</h5>\r\n                        <ul>\r\n                            <li>\r\n                                <a href=\"/#\">Form B-1</a>\r\n                            </li>\r\n                            <li>\r\n                                <a href=\"/#\">Form B-2</a>\r\n                            </li>\r\n                            <li>\r\n                                <a href=\"/#\">Form B-3</a>\r\n                            </li>\r\n                        </ul>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n\r\n            {group && <div className=\"container\">Edit {group.title}</div>}\r\n\r\n            {form && <div className=\"container\">Edit {form.title}</div>}\r\n        </>\r\n    );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Form } from \"react-final-form\";\r\n\r\nimport { FinalField } from \"../../../components/basic/final-form\";\r\nimport * as bs from \"react-basic-design\";\r\nimport { BasicModal } from \"../../../components/basic/basic-modal\";\r\n\r\nimport { messages } from \"../../../components/messages\";\r\nimport classNames from \"classnames\";\r\nimport { tableDesignerApi } from \"../../../api/table-designer-api\";\r\nimport { notify } from \"../../../components/basic/notify\";\r\n\r\n//\r\nexport function TableDesignerEditGroup({ group, onChanged }) {\r\n    const [loading, setLoading] = useState(false);\r\n    const [deleting, setDeleting] = useState(false);\r\n    const [showDeletingGroup, setShowDeletingGroup] = useState(false);\r\n\r\n    const onSubmit = (values) => {\r\n        setLoading(true);\r\n        var insertMode = !group.id;\r\n        tableDesignerApi\r\n            .saveGroup(values, insertMode)\r\n            .then((x) => {\r\n                setLoading(false);\r\n                notify.info(messages.ChangesAreSaved);\r\n                x.items = group.items ? group.items : [];\r\n                onChanged(x);\r\n            })\r\n            .catch((ex) => {\r\n                setLoading(false);\r\n                notify.error(ex);\r\n            });\r\n    };\r\n\r\n    const onDeleteClick = () => {\r\n        setDeleting(true);\r\n        tableDesignerApi\r\n            .deleteGroup(group.id)\r\n            .then((x) => {\r\n                setLoading(false);\r\n                notify.info(messages.RowIsDeleted);\r\n                onChanged(null);\r\n            })\r\n            .catch((ex) => {\r\n                setLoading(false);\r\n                notify.error(ex);\r\n            });\r\n    };\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"mt-4\" style={{ maxWidth: 400 }}>\r\n                <Form\r\n                    initialValues={group}\r\n                    onSubmit={onSubmit}\r\n                    render={({ handleSubmit, submitting, invalid }) => (\r\n                        <form onSubmit={handleSubmit} className=\"ltr\">\r\n                            <div>\r\n                                <FinalField name=\"title\" label=\"Group Title:\" type=\"text\" autoComplete=\"off\" autoFocus />\r\n                            </div>\r\n\r\n                            <div className=\"mt-4\">\r\n                                <bs.Button color=\"primary\" type=\"submit\" disabled={loading || deleting || invalid}>\r\n                                    {loading && <div className=\"m-e-2 spinner-border spinner-border-sm\"></div>}\r\n                                    <span>Save Group</span>\r\n                                </bs.Button>\r\n\r\n                                <bs.Button\r\n                                    className={classNames(\"mx-2\", {\r\n                                        \"d-none\": !group.id,\r\n                                    })}\r\n                                    type=\"button\"\r\n                                    variant=\"outline\"\r\n                                    disabled={loading || deleting || (group.items && group.items.length)}\r\n                                    onClick={() => setShowDeletingGroup(true)}\r\n                                >\r\n                                    {deleting && <div className=\"m-e-2 spinner-border spinner-border-sm\"></div>}\r\n                                    <span>DELETE</span>\r\n                                </bs.Button>\r\n\r\n                                <BasicModal\r\n                                    show={showDeletingGroup}\r\n                                    setShow={setShowDeletingGroup}\r\n                                    renderBody={({ hide }) => (\r\n                                        <>\r\n                                            Your going to delete the group\r\n                                            <br />\r\n                                            Are you sure?\r\n                                            <div className=\"pt-2 text-end\">\r\n                                                <bs.Button variant=\"text\" type=\"button\" color=\"primary\" onClick={hide} className=\"m-e-2\">\r\n                                                    Cancel\r\n                                                </bs.Button>\r\n\r\n                                                <bs.Button type=\"button\" color=\"secondary\" disabled={deleting} onClick={onDeleteClick}>\r\n                                                    {deleting && <div className=\"m-e-2 spinner-border spinner-border-sm\"></div>}\r\n                                                    <span>DELETE</span>\r\n                                                </bs.Button>\r\n                                            </div>\r\n                                        </>\r\n                                    )}\r\n                                />\r\n                            </div>\r\n                        </form>\r\n                    )}\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","export type TableMessages = {\r\n    showing?: string;\r\n    showingFiltered?: string;\r\n    page?: string;\r\n    gotoPage?: string;\r\n    firstPage?: string;\r\n    prevPage?: string;\r\n    nextPage?: string;\r\n    lastPage?: string;\r\n};\r\n\r\nconst messages: TableMessages = {\r\n    showing: \"showing {from} to {to} of {total}\",\r\n    showingFiltered: \"showing {from} to {to} of {total} (filtered from ${all} rows)\",\r\n    page: \"Page {page} of {total}\",\r\n    gotoPage: \"Go to page\",\r\n    firstPage: \"First page\",\r\n    prevPage: \"Previous page\",\r\n    nextPage: \"Next page\",\r\n    lastPage: \"Last page\",\r\n};\r\n\r\nexport default messages;\r\n","/*\r\ncolumn._breakPoint :   \"sm\" | \"md\" | \"lg\" | \"xl\"\r\ncolumn._popinCss :  sample: \"col-12 col-md-6\" \r\ncolumn._headerProps :   {}  |  (column) => {}\r\ncolumn._cellProps   :   {}  |  (row, cell) => {}\r\ncolumn._ignoreToggleOnClick :   boolean\r\ncolumn._summary:                   {}  |  (rows, col) => {}\r\n\r\n\r\n*/\r\nimport React, { MutableRefObject, useEffect, useState } from \"react\";\r\nimport classNames from \"classnames\";\r\nimport * as bd from \"react-basic-design\";\r\nimport defaultMessages, { TableMessages } from \"./messages\";\r\nimport { useTable, useGlobalFilter, usePagination, useSortBy, useFilters, useGroupBy, useExpanded, useRowSelect } from \"react-table\";\r\nimport * as icons from \"../../assets/icons\";\r\nimport { Modal, TabContainer, TabContent, TabPane } from \"react-bootstrap\";\r\n\r\ninterface ToggleProps {\r\n    className?: string;\r\n    tableClassName?: string;\r\n    columns?: any;\r\n    defaultColumn?: any;\r\n    data?: any;\r\n    enablePaging?: boolean;\r\n    enableGrouping?: boolean;\r\n    enableSorting?: boolean;\r\n    maxDisplayRow?: number;\r\n    skipReset?: boolean;\r\n    showColumnFilter?: boolean;\r\n    showColumns?: boolean;\r\n    showTableInfo?: boolean;\r\n    showPageSize?: boolean;\r\n    showSummary?: boolean;\r\n    showFooter?: boolean;\r\n    border?: \"\" | \"none\" | \"full\" | \"row\" | \"table-row\" | \"column\";\r\n    editable?: boolean;\r\n    hideCheckbox?: boolean;\r\n    clickAction?: \"\" | \"select\" | \"toggle\";\r\n    selectionMode?: \"\" | \"single\" | \"multiple\";\r\n    messages?: TableMessages;\r\n    tableRef?: MutableRefObject<any>;\r\n    title?: string;\r\n    expandableTitlebar?: boolean;\r\n    showRowsCount?: boolean;\r\n    titlebarButtons?: any;\r\n    titlebarSize?: \"\" | \"sm\" | \"md\";\r\n    titlebarColor?: \"\" | \"primary\" | \"secondary\";\r\n    hideGlobalFilter?: boolean;\r\n    defaultPageSize?: number;\r\n    updateData: (rowIndex: number, columnId: number, value: any) => void;\r\n    [x: string]: any;\r\n}\r\n\r\n//\r\n// Be sure to pass our updateMyData and the skipReset option\r\nexport function Table({\r\n    className,\r\n    tableClassName,\r\n    columns,\r\n    defaultColumn,\r\n    data,\r\n    enablePaging,\r\n    enableGrouping,\r\n    enableSorting,\r\n    maxDisplayRow,\r\n    skipReset,\r\n    showColumnFilter,\r\n    showColumns,\r\n    showTableInfo,\r\n    showPageSize,\r\n    showSummary,\r\n    showFooter,\r\n    border = \"row\",\r\n    editable,\r\n    hideCheckbox,\r\n    clickAction,\r\n    selectionMode,\r\n    messages,\r\n    tableRef,\r\n\r\n    defaultPageSize,\r\n\r\n    updateData,\r\n}: ToggleProps) {\r\n    messages = { ...defaultMessages, ...messages };\r\n    if (!maxDisplayRow || maxDisplayRow < 1) maxDisplayRow = 100;\r\n    const filterTypes = React.useMemo(\r\n        () => ({\r\n            text: (rows: any, id: any, filterValue: any) => {\r\n                return rows.filter((row: any) => {\r\n                    const rowValue = row.values[id];\r\n                    return rowValue !== undefined ? String(rowValue).toLowerCase().startsWith(String(filterValue).toLowerCase()) : true;\r\n                });\r\n            },\r\n        }),\r\n        []\r\n    );\r\n\r\n    // Use the state and functions returned from useTable to build your UI\r\n    const tableApi = useTable(\r\n        {\r\n            initialState: {\r\n                pageSize: defaultPageSize ?? 10,\r\n            },\r\n            defaultColumn,\r\n            columns,\r\n            data,\r\n            filterTypes,\r\n            // updateMyData isn't part of the API, but\r\n            // anything we put into these options will\r\n            // automatically be available on the instance.\r\n            // That way we can call this function from our\r\n            // cell renderer!\r\n            updateMyData: updateData,\r\n            // We also need to pass this so the page doesn't change\r\n            // when we edit the data.\r\n            autoResetPage: !skipReset,\r\n            autoResetFilters: !skipReset,\r\n            autoResetSortBy: !skipReset,\r\n            autoResetSelectedRows: !skipReset,\r\n            disableMultiSort: false,\r\n        },\r\n        useGlobalFilter,\r\n        useFilters,\r\n        useGroupBy,\r\n        useSortBy,\r\n        useExpanded,\r\n        usePagination,\r\n        useRowSelect,\r\n\r\n        (hooks: any) => {\r\n            hooks.visibleColumns.push((columns: any) => {\r\n                return [\r\n                    {\r\n                        id: \"_multi_select_\",\r\n                        groupByBoundary: true,\r\n                        Header: ({ getToggleAllRowsSelectedProps }) => (\r\n                            <bd.Toggle size=\"sm\" color=\"primary\" labelClassName=\"m-0\" {...getToggleAllRowsSelectedProps()} />\r\n                        ),\r\n                        Cell: ({ row }) => <bd.Toggle size=\"sm\" color=\"primary\" labelClassName=\"m-0\" {...row.getToggleRowSelectedProps()} />,\r\n                        Filter: null,\r\n                        _headerProps: null,\r\n                        _cellProps: null,\r\n                        _footerProps: null,\r\n                    },\r\n                    {\r\n                        id: \"_single_select_\",\r\n                        groupByBoundary: true,\r\n                        Header: ({ getToggleAllRowsSelectedProps }) => <></>,\r\n                        Cell: ({ row }) => (\r\n                            <bd.Toggle\r\n                                size=\"sm\"\r\n                                color=\"primary\"\r\n                                labelClassName=\"m-0\"\r\n                                {...row.getToggleRowSelectedProps()}\r\n                                onChange={() => {\r\n                                    toggleAllRowsSelected(false);\r\n                                    toggleRowSelected(row.id);\r\n                                }}\r\n                                radio\r\n                            />\r\n                        ),\r\n                        Filter: null,\r\n                        _headerProps: null,\r\n                        _cellProps: null,\r\n                        _footerProps: null,\r\n                    },\r\n                    ...columns,\r\n                ];\r\n            });\r\n        }\r\n    );\r\n\r\n    const {\r\n        getTableProps,\r\n        getTableBodyProps,\r\n        headerGroups,\r\n        footerGroups,\r\n        prepareRow,\r\n        rows,\r\n        page, // Instead of using 'rows', we'll use page,\r\n        // which has only the rows for the active page\r\n\r\n        // The rest of these things are super handy, too ;)\r\n        canPreviousPage,\r\n        canNextPage,\r\n        pageOptions,\r\n        pageCount,\r\n        gotoPage,\r\n        nextPage,\r\n        previousPage,\r\n        setPageSize,\r\n        setGlobalFilter,\r\n        state,\r\n        toggleAllRowsSelected,\r\n        toggleRowSelected,\r\n    } = tableApi;\r\n\r\n    const { globalFilter, pageIndex, pageSize, sortBy, groupBy, expanded, filters, selectedRowIds } = state;\r\n    const [showSettings, setShowSettings] = useState(false);\r\n    const [titlebarIsExplanded, setTitlebarIsExplanded] = useState(false);\r\n\r\n    if (tableRef) tableRef.current = tableApi;\r\n\r\n    let list = enablePaging ? page : rows;\r\n    if (list.length > maxDisplayRow) list = list.slice(0, maxDisplayRow);\r\n\r\n    const cn = classNames(className, {\r\n        \"bd-table-selectable\": clickAction === \"select\" || clickAction === \"toggle\",\r\n    });\r\n\r\n    editable = editable && groupBy.length === 0;\r\n    const enable_responsive = headerGroups.length == 1 && columns.some((x) => !!x._breakPoint);\r\n    const css_popin_row = columns.some((x) => x._breakPoint == \"xl\")\r\n        ? \"popin-row-lg\"\r\n        : columns.some((x) => x._breakPoint == \"lg\")\r\n        ? \"popin-row-md\"\r\n        : columns.some((x) => x._breakPoint == \"md\")\r\n        ? \"popin-row-sm\"\r\n        : columns.some((x) => x._breakPoint == \"sm\")\r\n        ? \"popin-row-xs\"\r\n        : \"\";\r\n\r\n    function getTableInfo() {\r\n        var size = enablePaging ? page.length : rows.length;\r\n        var a = rows.length < 1 ? 0 : enablePaging ? pageIndex * pageSize + 1 : 1;\r\n        var b = rows.length < 1 ? 0 : a + size - 1;\r\n        var s = state.globalFilter || state.filters.length > 0 ? messages.showingFiltered : messages.showing;\r\n        return s.replace(\"{from}\", a.toString()).replace(\"{to}\", b.toString()).replace(\"{total}\", rows.length).replace(\"{all}\", data.length);\r\n    }\r\n\r\n    function getSummary(col) {\r\n        var sum = col._summary;\r\n        if (!sum || typeof sum !== \"function\") return sum;\r\n        return sum(rows, col);\r\n    }\r\n\r\n    function getHeaderProps(column, idx) {\r\n        const props = column.getHeaderProps();\r\n        const style = column.id === \"_multi_select_\" || column.id === \"_single_select_\" ? { width: \"36px\", textAlign: \"center\" } : {};\r\n        let userProps = column._headerProps;\r\n        if (!userProps) userProps = {};\r\n        else if (typeof userProps === \"function\") userProps = userProps(column);\r\n\r\n        const { className, ...remUserProps } = userProps ? userProps : { className: \"\" };\r\n        const cn = classNames(className, `bd-column-${column.id}`, {\r\n            [`d-none d-${column._breakPoint}-table-cell`]: enable_responsive && column._breakPoint,\r\n        });\r\n\r\n        return { ...props, className: cn, style, ...remUserProps };\r\n    }\r\n\r\n    function getCellProps(row, cell) {\r\n        if (!cell) cell = row.cells[0];\r\n        var props = cell.getCellProps();\r\n        var userProps = cell.column._cellProps;\r\n        if (userProps) {\r\n            if (typeof userProps === \"function\") userProps = userProps(row, cell);\r\n            props = { ...props, ...userProps };\r\n        }\r\n        //----\r\n        const { className, ...remUserProps } = props ? props : { className: \"\" };\r\n        const cn = classNames(className, {\r\n            [`d-none d-${cell.column._breakPoint}-table-cell`]: enable_responsive && cell.column._breakPoint,\r\n        });\r\n\r\n        return { ...props, ...remUserProps, className: cn, onClick: () => onTdClick(row, cell) };\r\n    }\r\n\r\n    function getFooterProps(column, idx) {\r\n        const props = column.getFooterProps();\r\n        const style = column.id === \"_multi_select_\" || column.id === \"_single_select_\" ? { width: \"36px\" } : {};\r\n        let userProps = column._headerProps;\r\n        if (!userProps) userProps = {};\r\n        else if (typeof userProps === \"function\") userProps = userProps(column);\r\n\r\n        const { className, ...remUserProps } = userProps ? userProps : { className: \"\" };\r\n        const cn = classNames(className, `bd-column-${column.id}`, {\r\n            [`d-none d-${column._breakPoint}-table-cell`]: enable_responsive && column._breakPoint,\r\n        });\r\n\r\n        return { ...props, className: cn, style, ...remUserProps };\r\n    }\r\n\r\n    const onTdClick = (row, cell) => {\r\n        if (cell.column._ignoreToggleOnClick) return;\r\n        if (selectionMode !== \"single\" && selectionMode !== \"multiple\") return;\r\n\r\n        const is_selected = row.isSelected;\r\n        switch (clickAction) {\r\n            case \"select\":\r\n                if (is_selected && selectionMode === \"multiple\") break;\r\n                if (selectionMode === \"single\") toggleAllRowsSelected(false);\r\n                row.toggleRowSelected();\r\n                break;\r\n\r\n            case \"toggle\":\r\n                if (selectionMode === \"single\") toggleAllRowsSelected(false);\r\n                if (!is_selected || selectionMode === \"multiple\") row.toggleRowSelected();\r\n                break;\r\n        }\r\n    };\r\n\r\n    function renderCheckboxHeader(column: any, idx: number) {\r\n        if (hideCheckbox) return null;\r\n        return (idx == 0 && selectionMode === \"multiple\") || (idx == 1 && selectionMode === \"single\") ? (\r\n            <th {...getHeaderProps(column, idx)}>{column.render(\"Header\")}</th>\r\n        ) : null;\r\n    }\r\n\r\n    function renderCheckboxCell(row, cell, idx: number) {\r\n        if (hideCheckbox) return null;\r\n        return (idx == 0 && selectionMode === \"multiple\") || (idx == 1 && selectionMode === \"single\") ? (\r\n            <td {...getCellProps(row, cell)}>{cell.render(\"Cell\")}</td>\r\n        ) : null;\r\n    }\r\n\r\n    function renderCheckboxPlaceholder(column: any, idx: number) {\r\n        if (hideCheckbox) return null;\r\n        return (idx == 0 && selectionMode === \"multiple\") || (idx == 1 && selectionMode === \"single\") ? <th {...column.getFooterProps()}></th> : null;\r\n    }\r\n\r\n    function checkboxPlaceholder(idx: number) {\r\n        if (hideCheckbox) return null;\r\n        return (idx == 0 && selectionMode === \"multiple\") || (idx == 1 && selectionMode === \"single\");\r\n    }\r\n\r\n    function getSortByToggleProps(column: any) {\r\n        return enableSorting ? column.getSortByToggleProps() : {};\r\n    }\r\n\r\n    // Render the UI for your table\r\n    return (\r\n        <>\r\n            <div className=\"bd-titlebar\"></div>\r\n            <div\r\n                className={classNames(\"bd-table\", {\r\n                    \"bd-table-bordered\": !border || border == \"full\",\r\n                    \"bd-table-border-row\": border === \"row\" || border === \"table-row\",\r\n                    \"bd-table-border-table-row\": border === \"table-row\",\r\n                })}\r\n            >\r\n                <table {...getTableProps()} className={tableClassName}>\r\n                    {showColumns && (\r\n                        <thead>\r\n                            {headerGroups.map((headerGroup) => (\r\n                                <tr {...headerGroup.getHeaderGroupProps()}>\r\n                                    {headerGroup.headers.map((column, idx) => {\r\n                                        if (idx <= 1) return renderCheckboxHeader(column, idx);\r\n                                        return (\r\n                                            <th {...getHeaderProps(column, idx)}>\r\n                                                {idx > 1 && (\r\n                                                    <>\r\n                                                        <div className=\"header-label\">\r\n                                                            <span {...getSortByToggleProps(column)} className=\"flex-grow-1\">\r\n                                                                {column.render(\"Header\")}\r\n\r\n                                                                {enableSorting && column.isSorted ? (\r\n                                                                    column.isSortedDesc ? (\r\n                                                                        <icons.ArrowDownward className=\"size-sm\" />\r\n                                                                    ) : (\r\n                                                                        <icons.ArrowUpward className=\"size-sm\" />\r\n                                                                    )\r\n                                                                ) : (\r\n                                                                    \"\"\r\n                                                                )}\r\n                                                            </span>\r\n\r\n                                                            {enableGrouping && column.canGroupBy ? (\r\n                                                                // If the column can be grouped, let's add a toggle\r\n                                                                <span {...column.getGroupByToggleProps()}>\r\n                                                                    {column.isGrouped ? (\r\n                                                                        <icons.Close className=\"m-e-1 size-sm text-secondary\" />\r\n                                                                    ) : (\r\n                                                                        <icons.Functions className=\"m-e-1 size-sm text-primary\" />\r\n                                                                    )}\r\n                                                                </span>\r\n                                                            ) : null}\r\n                                                        </div>\r\n\r\n                                                        {showColumnFilter && column.canFilter && (\r\n                                                            <div className=\"header-filter\">{column.render(\"Filter\")}</div>\r\n                                                        )}\r\n                                                    </>\r\n                                                )}\r\n                                            </th>\r\n                                        );\r\n                                    })}\r\n                                </tr>\r\n                            ))}\r\n                        </thead>\r\n                    )}\r\n                    <tbody {...getTableBodyProps()}>\r\n                        {list.map((row, rowIndex) => {\r\n                            prepareRow(row);\r\n                            return (\r\n                                <React.Fragment key={rowIndex}>\r\n                                    <tr {...row.getRowProps()} className={row.isSelected ? \"selected\" : \"\"} key=\"ODD\">\r\n                                        {row.cells.map((cell, cellIndex) => {\r\n                                            if (cellIndex <= 1) return renderCheckboxCell(row, cell, cellIndex);\r\n                                            return (\r\n                                                <td {...getCellProps(row, cell)}>\r\n                                                    {cell.isGrouped ? (\r\n                                                        // If it's a grouped cell, add an expander and row count\r\n                                                        <>\r\n                                                            <span {...row.getToggleRowExpandedProps()}>\r\n                                                                <icons.ChevronRight\r\n                                                                    className={classNames(\"transition-transform text-primary\", {\r\n                                                                        \"rotate-90\": row.isExpanded,\r\n                                                                        \"rtl-rotate-180\": !row.isExpanded,\r\n                                                                    })}\r\n                                                                />\r\n                                                            </span>{\" \"}\r\n                                                            {cell.render(\"Cell\", { editable: false })} ({row.subRows.length})\r\n                                                        </>\r\n                                                    ) : cell.isAggregated ? (\r\n                                                        // If the cell is aggregated, use the Aggregated\r\n                                                        // renderer for cell\r\n                                                        cell.render(\"Aggregated\")\r\n                                                    ) : cell.isPlaceholder ? null : ( // For cells with repeated values, render null\r\n                                                        // Otherwise, just render the regular cell\r\n                                                        cell.render(\"Cell\", { editable })\r\n                                                    )}\r\n                                                </td>\r\n                                            );\r\n                                        })}\r\n                                    </tr>\r\n                                    <tr {...row.getRowProps()} className={classNames(css_popin_row, { selected: row.isSelected })} key=\"EVEN\">\r\n                                        {checkboxPlaceholder(0) || checkboxPlaceholder(1) ? (\r\n                                            <td {...getCellProps(row, row.cells[0])} key={\"bd-table-chk\"}></td>\r\n                                        ) : (\r\n                                            <></>\r\n                                        )}\r\n                                        {row.cells.map((cell, cellIndex) => {\r\n                                            if (!cell.isGrouped && !cell.isPlaceholder) return null;\r\n                                            return <td {...getCellProps(row, cell)}></td>;\r\n                                        })}\r\n                                        <td colSpan={100} {...getCellProps(row, row.cells[0])}>\r\n                                            <div className=\"bd-table-popin row pb-1\">\r\n                                                {row.cells.map(\r\n                                                    (cell, cellIndex) =>\r\n                                                        cell.column._breakPoint && (\r\n                                                            <div\r\n                                                                key={cellIndex}\r\n                                                                className={`${cell.column._popinCss} mb-1 d-${cell.column._breakPoint}-none`}\r\n                                                            >\r\n                                                                <span className=\"text-secondary-text\">{cell.column.Header}: </span>\r\n                                                                <span>{cell.render(\"Cell\", { editable })}</span>\r\n                                                            </div>\r\n                                                        )\r\n                                                )}\r\n                                            </div>\r\n                                        </td>\r\n                                    </tr>\r\n                                </React.Fragment>\r\n                            );\r\n                        })}\r\n                    </tbody>\r\n\r\n                    {(showFooter || showSummary) && (\r\n                        <tfoot>\r\n                            {showSummary && (\r\n                                <tr {...footerGroups[0].getFooterGroupProps()}>\r\n                                    {footerGroups[0].headers.map((column, idx) => {\r\n                                        if (idx <= 1) return renderCheckboxPlaceholder(column, idx);\r\n                                        return (\r\n                                            <th {...getFooterProps(column, idx)}>\r\n                                                <div className=\"header-label\">{getSummary(column)}</div>\r\n                                            </th>\r\n                                        );\r\n                                    })}\r\n                                </tr>\r\n                            )}\r\n                            {showFooter &&\r\n                                footerGroups.map((footerGroup) => (\r\n                                    <tr {...footerGroup.getFooterGroupProps()}>\r\n                                        {footerGroup.headers.map((column, idx) => {\r\n                                            if (idx <= 1) return renderCheckboxPlaceholder(column, idx);\r\n                                            return (\r\n                                                <th {...getFooterProps(column, idx)}>\r\n                                                    <div className=\"header-label\">{column.render(\"Footer\")}</div>\r\n                                                </th>\r\n                                            );\r\n                                        })}\r\n                                    </tr>\r\n                                ))}\r\n                        </tfoot>\r\n                    )}\r\n                </table>\r\n            </div>\r\n\r\n            {/* PAGINATION */}\r\n\r\n            <div className=\"bd-table-bottom\">\r\n                {showTableInfo && <div className=\"bd-table-info d-none d-md-block\">{getTableInfo()}</div>}\r\n\r\n                {enablePaging && showPageSize && (\r\n                    <div className=\"bd-table-pagination flex-grow-1\">\r\n                        <bd.Button variant=\"icon\" size=\"sm\" onClick={() => gotoPage(0)} disabled={!canPreviousPage} title={messages.firstPage}>\r\n                            <icons.FirstPage className=\"rtl-rotate-180\" />\r\n                        </bd.Button>\r\n                        <bd.Button variant=\"icon\" size=\"sm\" onClick={() => previousPage()} disabled={!canPreviousPage} title={messages.prevPage}>\r\n                            <icons.ChevronLeft className=\"rtl-rotate-180\" />\r\n                        </bd.Button>\r\n                        <span className=\"px-2\">{messages.page.replace(\"{page}\", pageIndex + 1).replace(\"{total}\", pageOptions.length)}</span>\r\n                        <bd.Button variant=\"icon\" size=\"sm\" onClick={() => nextPage()} disabled={!canNextPage} title={messages.nextPage}>\r\n                            <icons.ChevronRight className=\"rtl-rotate-180 size-md\" />\r\n                        </bd.Button>\r\n                        <bd.Button variant=\"icon\" size=\"sm\" onClick={() => gotoPage(pageCount - 1)} disabled={!canNextPage} title={messages.lastPage}>\r\n                            <icons.LastPage className=\"rtl-rotate-180\" />\r\n                        </bd.Button>\r\n                        {/* <span>\r\n                            | {messages.gotoPage}\r\n                            <input\r\n                                className=\"form-control d-inline-block\"\r\n                                type=\"number\"\r\n                                defaultValue={pageIndex + 1}\r\n                                onChange={(e) => {\r\n                                    const page = e.target.value ? Number(e.target.value) - 1 : 0;\r\n                                    gotoPage(page);\r\n                                }}\r\n                                style={{ width: \"70px\" }}\r\n                            />\r\n                        </span> */}\r\n\r\n                        {/* <select\r\n                            value={pageSize}\r\n                            onChange={(e) => {\r\n                                setPageSize(Number(e.target.value));\r\n                            }}\r\n                        >\r\n                            {[10, 20, 30, 40, 50].map((pageSize) => (\r\n                                <option key={pageSize} value={pageSize}>\r\n                                    Show {pageSize}\r\n                                </option>\r\n                            ))}\r\n                        </select> */}\r\n                    </div>\r\n                )}\r\n            </div>\r\n            {/* <pre>\r\n                <code>\r\n                    {JSON.stringify(\r\n                        {\r\n                            pageIndex,\r\n                            pageSize,\r\n                            pageCount,\r\n                            canNextPage,\r\n                            canPreviousPage,\r\n                            sortBy,\r\n                            groupBy,\r\n                            expanded: expanded,\r\n                            filters,\r\n                            selectedRowIds: selectedRowIds,\r\n                        },\r\n                        null,\r\n                        2\r\n                    )}\r\n                </code>\r\n            </pre> */}\r\n        </>\r\n    );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Form } from \"react-final-form\";\r\n\r\nimport { FinalCheck, FinalField } from \"../../../components/basic/final-form\";\r\nimport * as bd from \"react-basic-design\";\r\nimport * as icons from \"../../../assets/icons\";\r\nimport { BasicModal } from \"../../../components/basic/basic-modal\";\r\n\r\nimport { messages } from \"../../../components/messages\";\r\nimport classNames from \"classnames\";\r\nimport { tableDesignerApi } from \"../../../api/table-designer-api\";\r\nimport { notify } from \"../../../components/basic/notify\";\r\nimport { Table } from \"../../../components/table\";\r\n\r\n//\r\nexport function TableDesignerEditTable({ table, group, onChanged }) {\r\n    const [columns] = useState(table.columns);\r\n    const [loading, setLoading] = useState(false);\r\n    const [deleting, setDeleting] = useState(false);\r\n    const [showDeletingGroup, setShowDeletingGroup] = useState(false);\r\n    const insertMode = !table.name;\r\n    const tableRef = React.useRef();\r\n\r\n    const onSubmit = (values) => {\r\n        setLoading(true);\r\n        tableDesignerApi\r\n            .saveTable(group.id, values, insertMode)\r\n            .then((x) => {\r\n                setLoading(false);\r\n                notify.info(messages.ChangesAreSaved);\r\n                table.data = x;\r\n                onChanged(x);\r\n            })\r\n            .catch((ex) => {\r\n                setLoading(false);\r\n                notify.error(ex);\r\n            });\r\n    };\r\n\r\n    const onDeleteClick = () => {\r\n        setDeleting(true);\r\n        tableDesignerApi\r\n            .deleteTable(table.name)\r\n            .then((x) => {\r\n                setLoading(false);\r\n                notify.info(messages.RowIsDeleted);\r\n                onChanged(null);\r\n            })\r\n            .catch((ex) => {\r\n                setLoading(false);\r\n                notify.error(ex);\r\n            });\r\n    };\r\n\r\n    const table_columns = React.useMemo(\r\n        () => [\r\n            { Header: \"Id\", accessor: \"id\" },\r\n            { Header: \"Name\", accessor: \"name\" },\r\n            { Header: \"Expression\", accessor: \"expression\" },\r\n            { Header: \"Alias\", accessor: \"alias\" },\r\n            { Header: \"Title\", accessor: \"tile\" },\r\n            { Header: \"IsPK\", accessor: \"isPk\" },\r\n            { Header: \"IsRequired\", accessor: \"isRequired\" },\r\n            { Header: \"DefaultValue\", accessor: \"defaultValue\" },\r\n            { Header: \"ToggleOnClick\", accessor: \"toggleOnClick\" },\r\n            { Header: \"Editor\", accessor: \"editor\" },\r\n            { Header: \"ValidValues\", accessor: \"validValues\" },\r\n            { Header: \"CellStyle\", accessor: \"cellStyle\" },\r\n            { Header: \"CellClassName\", accessor: \"cellClassName\" },\r\n            { Header: \"HiddenInTable\", accessor: \"hiddenInTable\" },\r\n            { Header: \"HiddenInEditor\", accessor: \"hiddenInEditor\" },\r\n            { Header: \"Category\", accessor: \"category\" },\r\n            { Header: \"Dir\", accessor: \"dir\" },\r\n        ],\r\n        []\r\n    );\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"mt-4\" style={{ maxWidth: 500 }}>\r\n                <Form\r\n                    initialValues={table.data}\r\n                    onSubmit={onSubmit}\r\n                    render={({ handleSubmit, submitting, invalid }) => (\r\n                        <form onSubmit={handleSubmit} className=\"ltr\" spellCheck=\"false\">\r\n                            <FinalField name=\"name\" label=\"Name:\" type=\"text\" autoComplete=\"off\" autoFocus labelSize=\"3\" />\r\n\r\n                            <FinalField name=\"title\" label=\"Title:\" type=\"text\" autoComplete=\"off\" labelSize=\"3\" />\r\n\r\n                            <FinalField name=\"singularTitle\" label=\"Singular Title:\" type=\"text\" autoComplete=\"off\" labelSize=\"3\" />\r\n                            <FinalCheck inline name=\"sortable\" label=\"Sortable\" labelSize=\"3\" />\r\n                            <FinalCheck inline name=\"filterable\" label=\"Filterable\" labelSize=\"3\" />\r\n\r\n                            <div className=\"row\">\r\n                                <div className=\"col-md-3\"></div>\r\n                                <div className=\"col-md-9\">\r\n                                    <div>\r\n                                        <bd.Button color=\"primary\" type=\"submit\" disabled={loading || deleting || invalid}>\r\n                                            {loading && <div className=\"m-e-2 spinner-border spinner-border-sm\"></div>}\r\n                                            <span>Save Table</span>\r\n                                        </bd.Button>\r\n\r\n                                        <bd.Button\r\n                                            className={classNames(\"mx-2\", {\r\n                                                \"d-none\": !group.id,\r\n                                            })}\r\n                                            type=\"button\"\r\n                                            variant=\"outline\"\r\n                                            disabled={loading || deleting || table.columns.length > 0}\r\n                                            onClick={() => setShowDeletingGroup(true)}\r\n                                        >\r\n                                            {deleting && <div className=\"m-e-2 spinner-border spinner-border-sm\"></div>}\r\n                                            <span>DELETE</span>\r\n                                        </bd.Button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <BasicModal\r\n                                show={showDeletingGroup}\r\n                                setShow={setShowDeletingGroup}\r\n                                renderBody={({ hide }) => (\r\n                                    <>\r\n                                        Your going to delete the table\r\n                                        <br />\r\n                                        Are you sure?\r\n                                        <div className=\"pt-2 text-end\">\r\n                                            <bd.Button variant=\"text\" type=\"button\" color=\"primary\" onClick={hide} className=\"m-e-2\">\r\n                                                Cancel\r\n                                            </bd.Button>\r\n\r\n                                            <bd.Button type=\"button\" color=\"secondary\" disabled={deleting} onClick={onDeleteClick}>\r\n                                                {deleting && <div className=\"m-e-2 spinner-border spinner-border-sm\"></div>}\r\n                                                <span>DELETE</span>\r\n                                            </bd.Button>\r\n                                        </div>\r\n                                    </>\r\n                                )}\r\n                            />\r\n                        </form>\r\n                    )}\r\n                />\r\n            </div>\r\n\r\n            <div className={`overflow-auto nano-scroll ${insertMode ? \"d-none\" : \"\"}`}>\r\n                <bd.TableTitlebar\r\n                    title=\"My Table\"\r\n                    tableRef={tableRef}\r\n                    fixed\r\n                    buttons={\r\n                        <>\r\n                            <bd.Button variant=\"icon\" size=\"md\">\r\n                                <icons.Add />\r\n                            </bd.Button>\r\n                            <bd.Button variant=\"icon\" size=\"md\">\r\n                                <icons.Delete />\r\n                            </bd.Button>\r\n                        </>\r\n                    }\r\n                />\r\n\r\n                <Table\r\n                    //className=\"w-100\"\r\n                    columns={table_columns}\r\n                    //defaultColumn={defaultColumn}\r\n                    data={columns}\r\n                    //updateData={updateMyData}\r\n                    //skipReset={skipResetRef.current}\r\n                    //enablePaging={enablePaging}\r\n                    //enableGrouping={enableGrouping}\r\n                    //enableSorting={enableSorting}\r\n                    //showTableInfo={showTableInfo}\r\n                    //showSummary={showSummary}\r\n                    //showColumnFilter={showColumnFilter}\r\n                    showColumns=\"true\"\r\n                    //showFooter={showFooter}\r\n                    //showPageSize={true}\r\n                    //border=\"\"\r\n                    editable=\"false\"\r\n                    clickAction=\"toggle\"\r\n                    //hideCheckbox={hideCheckbox}\r\n                    selectionMode=\"single\"\r\n                    //messages={messages}\r\n                    tableRef={tableRef}\r\n                    //tableClassName=\"w-100\"\r\n                    //\r\n                    title=\"Columns\"\r\n                    expandableTitlebar={true}\r\n                    showRowsCount={true}\r\n                    titlebarSize=\"md\"\r\n                    titlebarColor=\"secondary\"\r\n                    //\r\n                    defaultPageSize={5}\r\n                    onStateChanged={(state) => {\r\n                        console.log(state);\r\n                    }}\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import React from \"react\";\r\n\r\nimport * as bs from \"react-basic-design\";\r\nimport * as icons from \"../../../assets/icons\";\r\n\r\n//\r\nexport function TableDesignerHeader({ group, table, column, onGoBack, onAddGroupClicked }) {\r\n    var editMode = group || table || column;\r\n    let title = \"Table Designer\";\r\n    if (column) {\r\n        title = column.id ? `Edit Column '${column.name}'` : \"New Column\";\r\n    } else if (table) {\r\n        title = table.name ? (\r\n            <>\r\n                Edit Table: <span className=\"text-secondary\">{table.name}</span>\r\n            </>\r\n        ) : (\r\n            \"New Table\"\r\n        );\r\n    } else if (group) {\r\n        title = group.id ? `Edit Group '${group.title}'` : \"New Group\";\r\n    }\r\n\r\n    return (\r\n        <bs.AppBar shadow={0} className=\"border-bottom\">\r\n            <div className=\"container\">\r\n                <bs.Toolbar>\r\n                    {editMode && (\r\n                        <bs.Button variant=\"icon\" onClick={onGoBack} size=\"md\">\r\n                            <icons.ArrowBackIos />\r\n                        </bs.Button>\r\n                    )}\r\n                    <h5 className=\"appbar-title\">{title}</h5>\r\n                    {!editMode && (\r\n                        <bs.Button variant=\"icon\" onClick={onAddGroupClicked}>\r\n                            <icons.Folder />\r\n                        </bs.Button>\r\n                    )}\r\n                </bs.Toolbar>\r\n            </div>\r\n        </bs.AppBar>\r\n    );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport * as bs from \"react-basic-design\";\r\nimport accountManager from \"../../../app/account-manager\";\r\n\r\nimport classNames from \"classnames\";\r\nimport { tableDesignerApi } from \"../../../api/table-designer-api\";\r\nimport { TableDesignerEditGroup } from \"./edit-group\";\r\nimport { TableDesignerEditTable } from \"./edit-table\";\r\nimport { TableDesignerHeader } from \"./header\";\r\nimport { notify } from \"../../../components/basic/notify\";\r\nimport SvgInsertDriveFile from \"../../../assets/icons/InsertDriveFile\";\r\nimport SvgEdit from \"../../../assets/icons/Edit\";\r\n\r\n//\r\nexport function TableDesignerApp() {\r\n    const [groups, setGroups] = useState([]);\r\n    const [group, setGroup0] = useState(null);\r\n    const [table, setTable] = useState(null);\r\n    const [column, setColumn] = useState(null);\r\n\r\n    function setGroup(v) {\r\n        setGroup0(v);\r\n    }\r\n\r\n    function goBack() {\r\n        if (column) {\r\n            setColumn(null);\r\n            return;\r\n        }\r\n        if (group) setGroup(null);\r\n        if (table) setTable(null);\r\n    }\r\n\r\n    const refresh = () => {\r\n        tableDesignerApi.getGroups().then((x) => setGroups(x));\r\n    };\r\n\r\n    function onEditGroupClick(g) {\r\n        setGroup(g);\r\n        return false;\r\n    }\r\n\r\n    function onAddFormClick(g) {\r\n        setGroup(g);\r\n        setTable({ columns: [] });\r\n        return false;\r\n    }\r\n\r\n    function onEditTableClick(g, t) {\r\n        if (t.data) {\r\n            setGroup(g);\r\n            setTable(t);\r\n            return false;\r\n        }\r\n        tableDesignerApi\r\n            .getTable(t.name)\r\n            .then((x) => {\r\n                t.data = x.table;\r\n                t.columns = x.columns;\r\n                setGroup(g);\r\n                setTable(t);\r\n            })\r\n            .catch((ex) => {\r\n                notify.error(ex);\r\n            });\r\n        return false;\r\n    }\r\n\r\n    function onAddGroupClicked() {\r\n        setGroup({});\r\n        return false;\r\n    }\r\n\r\n    useEffect(\r\n        () =>\r\n            accountManager.status.onConnected(function () {\r\n                refresh();\r\n            }).remove\r\n    );\r\n\r\n    return (\r\n        <>\r\n            <TableDesignerHeader group={group} table={table} column={column} onGoBack={goBack} onAddGroupClicked={onAddGroupClicked} />\r\n\r\n            {/* <Groups />\r\n        \r\n        <EditTable />\r\n             */}\r\n\r\n            <div\r\n                className={classNames(\"container\", {\r\n                    \"d-none\": group || table,\r\n                })}\r\n            >\r\n                <ul className=\"tiles\">\r\n                    {groups\r\n                        .sort((a, b) => (a.title === b.title ? 0 : a.title > b.title ? 1 : -1))\r\n                        .map((g) => (\r\n                            <li key={g.id}>\r\n                                <h5>\r\n                                    {g.title}\r\n                                    <bs.Button variant=\"text\" size=\"sm\" className=\"mx-2\" color=\"secondary\" onClick={() => onEditGroupClick(g)}>\r\n                                        <SvgEdit />\r\n                                        Edit Group\r\n                                    </bs.Button>\r\n                                    <bs.Button variant=\"text\" size=\"sm\" color=\"secondary\" onClick={() => onAddFormClick(g)}>\r\n                                        <SvgInsertDriveFile />\r\n                                        New table\r\n                                    </bs.Button>\r\n                                </h5>\r\n                                <ul>\r\n                                    {g.items.map((t) => (\r\n                                        <li key={t}>\r\n                                            <a\r\n                                                href=\"#/\"\r\n                                                className=\"bg-shade-1 hover-shade-3 text-primary-text border\"\r\n                                                onClick={() => onEditTableClick(g, t)}\r\n                                            >\r\n                                                {t.title}\r\n                                            </a>\r\n                                        </li>\r\n                                    ))}\r\n                                </ul>\r\n                            </li>\r\n                        ))}\r\n                </ul>\r\n            </div>\r\n\r\n            {group && !table && !column && (\r\n                <TableDesignerEditGroup\r\n                    group={group}\r\n                    onChanged={(g) => {\r\n                        if (!g) {\r\n                            var i = groups.indexOf(group);\r\n                            groups.splice(i, 1);\r\n                            goBack();\r\n                            setGroups(groups);\r\n                            return;\r\n                        }\r\n                        for (let i = 0; i < groups.length; i++) {\r\n                            if (groups[i].id === g.id) {\r\n                                groups[i] = g;\r\n                                goBack();\r\n                                setGroups(groups);\r\n                                return;\r\n                            }\r\n                        }\r\n                        groups.push(g);\r\n                        goBack();\r\n                        setGroups(groups);\r\n                    }}\r\n                />\r\n            )}\r\n\r\n            {group && table && !column && (\r\n                <TableDesignerEditTable\r\n                    group={group}\r\n                    table={table}\r\n                    onChanged={(tb) => {\r\n                        var g = groups.find((x) => x.id === group.id);\r\n                        var t = g.items.find((x) => x.name === table.name);\r\n                        if (!tb) {\r\n                            // removed\r\n                            g.items = g.items.filter((x) => x !== t);\r\n                        } else if (!t) {\r\n                            // added\r\n                            g.items.push({\r\n                                name: tb.name,\r\n                                title: tb.title,\r\n                                table: tb,\r\n                            });\r\n                        } else {\r\n                            // modifed\r\n                            g.title = tb.title;\r\n                        }\r\n                        goBack();\r\n                        setGroups(groups);\r\n                    }}\r\n                />\r\n            )}\r\n        </>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport { useTable, usePagination, useSortBy, useFilters, useGroupBy, useExpanded, useRowSelect } from \"react-table\";\r\nimport { matchSorter } from \"match-sorter\";\r\nimport \"./basic-table.scss\";\r\n\r\nfunction fuzzyTextFilterFn(rows, id, filterValue) {\r\n    return matchSorter(rows, filterValue, { keys: [(row) => row.values[id]] });\r\n}\r\n\r\n// Let the table remove the filter if the string is empty\r\nfuzzyTextFilterFn.autoRemove = (val) => !val;\r\n\r\n//\r\n//\r\n// Be sure to pass our updateMyData and the skipReset option\r\nexport function BasicTable({\r\n    columns,\r\n    defaultColumn,\r\n    data,\r\n    enablePaging,\r\n    maxDisplayRow,\r\n    updateData,\r\n    skipReset,\r\n    showTableInfo,\r\n    showSummary,\r\n    showFooter,\r\n}) {\r\n    if (!maxDisplayRow || maxDisplayRow < 1) maxDisplayRow = 100;\r\n    const filterTypes = React.useMemo(\r\n        () => ({\r\n            // Add a new fuzzyTextFilterFn filter type.\r\n            fuzzyText: fuzzyTextFilterFn,\r\n            // Or, override the default text filter to use\r\n            // \"startWith\"\r\n            text: (rows, id, filterValue) => {\r\n                return rows.filter((row) => {\r\n                    const rowValue = row.values[id];\r\n                    return rowValue !== undefined\r\n                        ? String(rowValue).toLowerCase().startsWith(String(filterValue).toLowerCase())\r\n                        : true;\r\n                });\r\n            },\r\n        }),\r\n        []\r\n    );\r\n\r\n    // Use the state and functions returned from useTable to build your UI\r\n    const {\r\n        getTableProps,\r\n        getTableBodyProps,\r\n        headerGroups,\r\n        footerGroups,\r\n        prepareRow,\r\n        rows,\r\n        page, // Instead of using 'rows', we'll use page,\r\n        // which has only the rows for the active page\r\n\r\n        // The rest of these things are super handy, too ;)\r\n        canPreviousPage,\r\n        canNextPage,\r\n        pageOptions,\r\n        pageCount,\r\n        gotoPage,\r\n        nextPage,\r\n        previousPage,\r\n        setPageSize,\r\n        state,\r\n    } = useTable(\r\n        {\r\n            columns,\r\n            data,\r\n            defaultColumn,\r\n            filterTypes,\r\n            // updateMyData isn't part of the API, but\r\n            // anything we put into these options will\r\n            // automatically be available on the instance.\r\n            // That way we can call this function from our\r\n            // cell renderer!\r\n            updateMyData: updateData,\r\n            // We also need to pass this so the page doesn't change\r\n            // when we edit the data.\r\n            autoResetPage: !skipReset,\r\n            autoResetSelectedRows: !skipReset,\r\n            disableMultiSort: false,\r\n        },\r\n        useFilters,\r\n        useGroupBy,\r\n        useSortBy,\r\n        useExpanded,\r\n        usePagination,\r\n        useRowSelect,\r\n        // Here we will use a plugin to add our selection column\r\n        (hooks) => {\r\n            hooks.visibleColumns.push((columns) => {\r\n                return [\r\n                    {\r\n                        id: \"selection\",\r\n                        // Make this column a groupByBoundary. This ensures that groupBy columns\r\n                        // are placed after it\r\n                        groupByBoundary: true,\r\n                        // The header can use the table's getToggleAllRowsSelectedProps method\r\n                        // to render a checkbox\r\n                        Header: ({ getToggleAllRowsSelectedProps }) => (\r\n                            <div>\r\n                                <IndeterminateCheckbox {...getToggleAllRowsSelectedProps()} />\r\n                            </div>\r\n                        ),\r\n                        // The cell can use the individual row's getToggleRowSelectedProps method\r\n                        // to the render a checkbox\r\n                        Cell: ({ row }) => (\r\n                            <div>\r\n                                <IndeterminateCheckbox {...row.getToggleRowSelectedProps()} />\r\n                            </div>\r\n                        ),\r\n                    },\r\n                    ...columns,\r\n                ];\r\n            });\r\n        }\r\n    );\r\n\r\n    const { pageIndex, pageSize, sortBy, groupBy, expanded, filters, selectedRowIds } = state;\r\n    let list = enablePaging ? page : rows;\r\n    if (list.length > maxDisplayRow) list = list.slice(0, maxDisplayRow);\r\n\r\n    function getTableInfo() {\r\n        var n = rows.length;\r\n        var a = pageIndex * pageSize + 1;\r\n        var b = a + pageSize - 1;\r\n        if (b > n) b = n;\r\n\r\n        var s = `showing ${a} to ${b} of ${n}`;\r\n        if (!enablePaging) s = `showing ${1} to ${list.length} of ${n}`;\r\n        return state.filters.length === 0 ? s : s + ` (filtered from ${data.length} rows)`;\r\n    }\r\n\r\n    function getSummary(col) {\r\n        return col._summary;\r\n    }\r\n\r\n    // Render the UI for your table\r\n    return (\r\n        <>\r\n            <div className={\"basic-table\"}>\r\n                <table {...getTableProps()}>\r\n                    <thead>\r\n                        {headerGroups.map((headerGroup) => (\r\n                            <tr {...headerGroup.getHeaderGroupProps()}>\r\n                                {headerGroup.headers.map((column) => (\r\n                                    <th {...column.getHeaderProps()}>\r\n                                        <div>\r\n                                            {column.canGroupBy ? (\r\n                                                // If the column can be grouped, let's add a toggle\r\n                                                <span {...column.getGroupByToggleProps()}>\r\n                                                    {column.isGrouped ? \"🛑 \" : \"👊 \"}\r\n                                                </span>\r\n                                            ) : null}\r\n                                            <span {...column.getSortByToggleProps()}>\r\n                                                {column.render(\"Header\")}\r\n                                                {/* Add a sort direction indicator */}\r\n                                                {column.isSorted ? (column.isSortedDesc ? \" 🔽\" : \" 🔼\") : \"\"}\r\n                                            </span>\r\n                                        </div>\r\n                                        {/* Render the columns filter UI */}\r\n                                        <div>{column.canFilter ? column.render(\"Filter\") : null}</div>\r\n                                    </th>\r\n                                ))}\r\n                            </tr>\r\n                        ))}\r\n                    </thead>\r\n\r\n                    <tbody {...getTableBodyProps()}>\r\n                        {list.map((row) => {\r\n                            prepareRow(row);\r\n                            return (\r\n                                <tr {...row.getRowProps()}>\r\n                                    {row.cells.map((cell) => {\r\n                                        return (\r\n                                            <td {...cell.getCellProps()}>\r\n                                                {cell.isGrouped ? (\r\n                                                    // If it's a grouped cell, add an expander and row count\r\n                                                    <>\r\n                                                        <span {...row.getToggleRowExpandedProps()}>\r\n                                                            {row.isExpanded ? \"👇\" : \"👉\"}\r\n                                                        </span>{\" \"}\r\n                                                        {cell.render(\"Cell\", { editable: false })} ({row.subRows.length}\r\n                                                        )\r\n                                                    </>\r\n                                                ) : cell.isAggregated ? (\r\n                                                    // If the cell is aggregated, use the Aggregated\r\n                                                    // renderer for cell\r\n                                                    cell.render(\"Aggregated\")\r\n                                                ) : cell.isPlaceholder ? null : ( // For cells with repeated values, render null\r\n                                                    // Otherwise, just render the regular cell\r\n                                                    cell.render(\"Cell\", { editable: true })\r\n                                                )}\r\n                                            </td>\r\n                                        );\r\n                                    })}\r\n                                </tr>\r\n                            );\r\n                        })}\r\n                    </tbody>\r\n\r\n                    {(showFooter || showSummary) && (\r\n                        <tfoot>\r\n                            {showSummary && (\r\n                                <tr {...footerGroups[0].getFooterGroupProps()}>\r\n                                    {footerGroups[0].headers.map((column) => (\r\n                                        <th {...column.getFooterProps()}>{getSummary(column)}</th>\r\n                                    ))}\r\n                                </tr>\r\n                            )}\r\n                            {showFooter &&\r\n                                footerGroups.map((footerGroup) => (\r\n                                    <tr {...footerGroup.getFooterGroupProps()}>\r\n                                        {footerGroup.headers.map((column) => (\r\n                                            <th {...column.getFooterProps()}>{column.render(\"Footer\")}</th>\r\n                                        ))}\r\n                                    </tr>\r\n                                ))}\r\n                        </tfoot>\r\n                    )}\r\n                </table>\r\n            </div>\r\n            {/*\r\n                Pagination can be built however you'd like.\r\n                This is just a very basic UI implementation:\r\n            */}\r\n\r\n            <div className=\"bas\">\r\n                {showTableInfo && <div className=\"basic-table-info\">{getTableInfo()}</div>}\r\n\r\n                {enablePaging && (\r\n                    <div className=\"basic-table-pagination\">\r\n                        <button onClick={() => gotoPage(0)} disabled={!canPreviousPage}>\r\n                            {\"<<\"}\r\n                        </button>{\" \"}\r\n                        <button onClick={() => previousPage()} disabled={!canPreviousPage}>\r\n                            {\"<\"}\r\n                        </button>{\" \"}\r\n                        <button onClick={() => nextPage()} disabled={!canNextPage}>\r\n                            {\">\"}\r\n                        </button>{\" \"}\r\n                        <button onClick={() => gotoPage(pageCount - 1)} disabled={!canNextPage}>\r\n                            {\">>\"}\r\n                        </button>{\" \"}\r\n                        <span>\r\n                            Page{\" \"}\r\n                            <strong>\r\n                                {pageIndex + 1} of {pageOptions.length}\r\n                            </strong>{\" \"}\r\n                        </span>\r\n                        <span>\r\n                            | Go to page:{\" \"}\r\n                            <input\r\n                                type=\"number\"\r\n                                defaultValue={pageIndex + 1}\r\n                                onChange={(e) => {\r\n                                    const page = e.target.value ? Number(e.target.value) - 1 : 0;\r\n                                    gotoPage(page);\r\n                                }}\r\n                                style={{ width: \"100px\" }}\r\n                            />\r\n                        </span>{\" \"}\r\n                        <select\r\n                            value={pageSize}\r\n                            onChange={(e) => {\r\n                                setPageSize(Number(e.target.value));\r\n                            }}\r\n                        >\r\n                            {[10, 20, 30, 40, 50].map((pageSize) => (\r\n                                <option key={pageSize} value={pageSize}>\r\n                                    Show {pageSize}\r\n                                </option>\r\n                            ))}\r\n                        </select>\r\n                    </div>\r\n                )}\r\n            </div>\r\n            <pre>\r\n                <code>\r\n                    {JSON.stringify(\r\n                        {\r\n                            pageIndex,\r\n                            pageSize,\r\n                            pageCount,\r\n                            canNextPage,\r\n                            canPreviousPage,\r\n                            sortBy,\r\n                            groupBy,\r\n                            expanded: expanded,\r\n                            filters,\r\n                            selectedRowIds: selectedRowIds,\r\n                        },\r\n                        null,\r\n                        2\r\n                    )}\r\n                </code>\r\n            </pre>\r\n        </>\r\n    );\r\n}\r\n\r\nconst IndeterminateCheckbox = React.forwardRef(({ indeterminate, ...rest }, ref) => {\r\n    const defaultRef = React.useRef();\r\n    const resolvedRef = ref || defaultRef;\r\n\r\n    React.useEffect(() => {\r\n        resolvedRef.current.indeterminate = indeterminate;\r\n    }, [resolvedRef, indeterminate]);\r\n\r\n    return (\r\n        <>\r\n            <input type=\"checkbox\" ref={resolvedRef} {...rest} />\r\n        </>\r\n    );\r\n});\r\n","import namor from \"namor\";\r\n\r\nconst range = (len) => {\r\n    const arr = [];\r\n    for (let i = 0; i < len; i++) {\r\n        arr.push(i);\r\n    }\r\n    return arr;\r\n};\r\n\r\nconst newPerson = () => {\r\n    const statusChance = Math.random();\r\n    return {\r\n        firstName: namor.generate({ words: 1, numbers: 0 }),\r\n        lastName: namor.generate({ words: 1, numbers: 0 }),\r\n        age: Math.floor(Math.random() * 30),\r\n        visits: Math.floor(Math.random() * 100),\r\n        progress: Math.floor(Math.random() * 100),\r\n        status: statusChance > 0.66 ? \"relationship\" : statusChance > 0.33 ? \"complicated\" : \"single\",\r\n    };\r\n};\r\n\r\nexport default function makeData(...lens) {\r\n    const makeDataLevel = (depth = 0) => {\r\n        const len = lens[depth];\r\n        return range(len).map((d) => {\r\n            return {\r\n                ...newPerson(),\r\n                subRows: lens[depth + 1] ? makeDataLevel(depth + 1) : undefined,\r\n            };\r\n        });\r\n    };\r\n\r\n    return makeDataLevel();\r\n}\r\n","import React from \"react\";\r\nimport { matchSorter } from \"match-sorter\";\r\n\r\n// Define a default UI for filtering\r\nexport function DefaultColumnFilter({ column: { filterValue, preFilteredRows, setFilter } }) {\r\n    return <input value={filterValue || \"\"} onChange={(e) => setFilter(e.target.value || undefined)} />;\r\n}\r\n\r\n// This is a custom filter UI for selecting\r\n// a unique option from a list\r\nexport function SelectColumnFilter({ column: { filterValue, setFilter, preFilteredRows, id } }) {\r\n    // Calculate the options for filtering\r\n    // using the preFilteredRows\r\n    const options = React.useMemo(() => {\r\n        const options = new Set();\r\n        preFilteredRows.forEach((row) => {\r\n            options.add(row.values[id]);\r\n        });\r\n        return [...options.values()];\r\n    }, [id, preFilteredRows]);\r\n\r\n    // Render a multi-select box\r\n    return (\r\n        <select\r\n            value={filterValue}\r\n            onChange={(e) => {\r\n                setFilter(e.target.value || undefined);\r\n            }}\r\n        >\r\n            <option value=\"\">All</option>\r\n            {options.map((option, i) => (\r\n                <option key={i} value={option}>\r\n                    {option}\r\n                </option>\r\n            ))}\r\n        </select>\r\n    );\r\n}\r\n\r\n// This is a custom filter UI that uses a\r\n// slider to set the filter value between a column's\r\n// min and max values\r\nexport function SliderColumnFilter({ column: { filterValue, setFilter, preFilteredRows, id } }) {\r\n    // Calculate the min and max\r\n    // using the preFilteredRows\r\n\r\n    const [min, max] = React.useMemo(() => {\r\n        let min = preFilteredRows.length ? preFilteredRows[0].values[id] : 0;\r\n        let max = preFilteredRows.length ? preFilteredRows[0].values[id] : 0;\r\n        preFilteredRows.forEach((row) => {\r\n            min = Math.min(row.values[id], min);\r\n            max = Math.max(row.values[id], max);\r\n        });\r\n        return [min, max];\r\n    }, [id, preFilteredRows]);\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                type=\"range\"\r\n                min={min}\r\n                max={max}\r\n                value={filterValue || min}\r\n                onChange={(e) => {\r\n                    setFilter(parseInt(e.target.value, 10));\r\n                }}\r\n            />\r\n            <button onClick={() => setFilter(undefined)}>Off</button>\r\n        </>\r\n    );\r\n}\r\n\r\n// This is a custom UI for our 'between' or number range\r\n// filter. It uses two number boxes and filters rows to\r\n// ones that have values between the two\r\nexport function NumberRangeColumnFilter({ column: { filterValue = [], preFilteredRows, setFilter, id } }) {\r\n    const [min, max] = React.useMemo(() => {\r\n        let min = preFilteredRows.length ? preFilteredRows[0].values[id] : 0;\r\n        let max = preFilteredRows.length ? preFilteredRows[0].values[id] : 0;\r\n        preFilteredRows.forEach((row) => {\r\n            min = Math.min(row.values[id], min);\r\n            max = Math.max(row.values[id], max);\r\n        });\r\n        return [min, max];\r\n    }, [id, preFilteredRows]);\r\n\r\n    return (\r\n        <div\r\n            style={{\r\n                display: \"flex\",\r\n            }}\r\n        >\r\n            <input\r\n                value={filterValue[0] || \"\"}\r\n                type=\"number\"\r\n                onChange={(e) => {\r\n                    const val = e.target.value;\r\n                    setFilter((old = []) => [val ? parseInt(val, 10) : undefined, old[1]]);\r\n                }}\r\n                placeholder={`Min (${min})`}\r\n                style={{\r\n                    width: \"70px\",\r\n                    marginRight: \"0.5rem\",\r\n                }}\r\n            />\r\n            to\r\n            <input\r\n                value={filterValue[1] || \"\"}\r\n                type=\"number\"\r\n                onChange={(e) => {\r\n                    const val = e.target.value;\r\n                    setFilter((old = []) => [old[0], val ? parseInt(val, 10) : undefined]);\r\n                }}\r\n                placeholder={`Max (${max})`}\r\n                style={{\r\n                    width: \"70px\",\r\n                    marginLeft: \"0.5rem\",\r\n                }}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction fuzzyTextFilterFn(rows, id, filterValue) {\r\n    return matchSorter(rows, filterValue, { keys: [(row) => row.values[id]] });\r\n}\r\n\r\n// Let the table remove the filter if the string is empty\r\nfuzzyTextFilterFn.autoRemove = (val) => !val;\r\n\r\n// Define a custom filter filter function!\r\nexport function filterGreaterThan(rows, id, filterValue) {\r\n    return rows.filter((row) => {\r\n        const rowValue = row.values[id];\r\n        return rowValue >= filterValue;\r\n    });\r\n}\r\n\r\n// This is an autoRemove method on the filter function that\r\n// when given the new filter value and returns true, the filter\r\n// will be automatically removed. Normally this is just an undefined\r\n// check, but here, we want to remove the filter if it's not a number\r\nfilterGreaterThan.autoRemove = (val) => typeof val !== \"number\";\r\n","// This is a custom aggregator that\r\n// takes in an array of leaf values and\r\n// returns the rounded median\r\nexport function roundedMedian(leafValues) {\r\n    let min = leafValues[0] || 0;\r\n    let max = leafValues[0] || 0;\r\n\r\n    leafValues.forEach((value) => {\r\n        min = Math.min(min, value);\r\n        max = Math.max(max, value);\r\n    });\r\n\r\n    return Math.round((min + max) / 2);\r\n}\r\n","import React from \"react\";\r\n\r\n// Create an editable cell renderer\r\nexport const BTTextEditor = ({\r\n    value: initialValue,\r\n    row: { index },\r\n    column: { id },\r\n    updateMyData, // This is a custom function that we supplied to our table instance\r\n    editable,\r\n}) => {\r\n    // We need to keep and update the state of the cell normally\r\n    const [value, setValue] = React.useState(initialValue);\r\n    const onChange = (e) => setValue(e.target.value);\r\n    const onBlur = () => updateMyData(index, id, value);\r\n\r\n    React.useEffect(() => setValue(initialValue), [initialValue]);\r\n\r\n    if (!editable) return `${initialValue}`;\r\n    return <input value={value} onChange={onChange} onBlur={onBlur} />;\r\n};\r\n\r\n//\r\n//\r\nexport const BTSelectEditor = ({\r\n    value: initialValue,\r\n    row: { index },\r\n    column,\r\n    updateMyData, // This is a custom function that we supplied to our table instance\r\n    editable,\r\n}) => {\r\n    // We need to keep and update the state of the cell normally\r\n    const [value, setValue] = React.useState(initialValue);\r\n    const onChange = (e) => {\r\n        setValue(e.target.value);\r\n    };\r\n    const onBlur = () => updateMyData(index, column.id, value);\r\n\r\n    React.useEffect(() => setValue(initialValue), [initialValue]);\r\n\r\n    if (!editable || !column._validValues) return `${initialValue}`;\r\n\r\n    //<input value={value} onChange={onChange} onBlur={onBlur} />;\r\n    return (\r\n        <select value={value} onChange={onChange} className=\"\" onBlur={onBlur}>\r\n            <option value=\"\"></option>\r\n            {column._validValues.map((x) => (\r\n                <option key={x.id} value={x.id}>\r\n                    {x.title}\r\n                </option>\r\n            ))}\r\n        </select>\r\n    );\r\n};\r\n","import React from \"react\";\r\nimport * as bs from \"react-basic-design\";\r\n\r\nimport { BasicTable } from \"./basic-table\";\r\nimport makeData from \"./makeData\";\r\nimport {\r\n    DefaultColumnFilter,\r\n    filterGreaterThan,\r\n    NumberRangeColumnFilter,\r\n    SelectColumnFilter,\r\n    SliderColumnFilter,\r\n} from \"./basic-table-filters\";\r\nimport { roundedMedian } from \"./basic-table-aggregators\";\r\nimport { BTSelectEditor, BTTextEditor } from \"./basic-table-editors\";\r\n\r\nexport function TestTableApp() {\r\n    const [enablePaging, setEnablePaging] = React.useState(true);\r\n    const [showTableInfo, setShowTableInfo] = React.useState(true);\r\n    const [showSummary, setShowSummary] = React.useState(true);\r\n    const [showFooter, setShowFooter] = React.useState(true);\r\n\r\n    const columns = React.useMemo(\r\n        () => [\r\n            {\r\n                Header: \"Name\",\r\n                Footer: \"Name\",\r\n                columns: [\r\n                    {\r\n                        Header: \"First Name\",\r\n                        Footer: \"First Name\",\r\n                        accessor: \"firstName\",\r\n                        // Use a two-stage aggregator here to first\r\n                        // count the total rows being aggregated,\r\n                        // then sum any of those counts if they are\r\n                        // aggregated further\r\n                        aggregate: \"count\",\r\n                        Aggregated: ({ value }) => `${value} Names`,\r\n                        _summary: \"count\",\r\n                    },\r\n                    {\r\n                        Header: \"Last Name\",\r\n                        Footer: \"Last Name\",\r\n                        accessor: \"lastName\",\r\n                        // Use our custom `fuzzyText` filter on this column\r\n                        filter: \"fuzzyText\",\r\n                        // Use another two-stage aggregator here to\r\n                        // first count the UNIQUE values from the rows\r\n                        // being aggregated, then sum those counts if\r\n                        // they are aggregated further\r\n                        aggregate: \"uniqueCount\",\r\n                        Aggregated: ({ value }) => `${value} Unique Names`,\r\n                    },\r\n                ],\r\n            },\r\n            {\r\n                Header: \"Info\",\r\n                Footer: \"Info\",\r\n                columns: [\r\n                    {\r\n                        Header: \"Age\",\r\n                        Footer: \"Age\",\r\n                        accessor: \"age\",\r\n                        Filter: SliderColumnFilter,\r\n                        filter: \"equals\",\r\n                        // Aggregate the average age of visitors\r\n                        aggregate: \"average\",\r\n                        Aggregated: ({ value }) => `${value} (avg)`,\r\n                    },\r\n                    {\r\n                        Header: \"Visits\",\r\n                        Footer: \"Visits\",\r\n                        accessor: \"visits\",\r\n                        Filter: NumberRangeColumnFilter,\r\n                        filter: \"between\",\r\n                        // Aggregate the sum of all visits\r\n                        aggregate: \"sum\",\r\n                        Aggregated: ({ value }) => `${value} (total)`,\r\n                    },\r\n                    {\r\n                        Header: \"Status\",\r\n                        Footer: \"Status\",\r\n                        accessor: \"status\",\r\n                        Filter: SelectColumnFilter,\r\n                        Cell: BTSelectEditor,\r\n                        filter: \"includes\",\r\n                        _validValues: [\r\n                            { id: \"single\", title: \"SINGLE\" },\r\n                            { id: \"relationship\", title: \"RELATIONSHIP\" },\r\n                            { id: \"complicated\", title: \"COMPLICATED\" },\r\n                        ],\r\n                    },\r\n                    {\r\n                        Header: \"Profile Progress\",\r\n                        Footer: \"Profile Progress\",\r\n                        accessor: \"progress\",\r\n                        Filter: SliderColumnFilter,\r\n                        filter: filterGreaterThan,\r\n                        // Use our custom roundedMedian aggregator\r\n                        aggregate: roundedMedian,\r\n                        Aggregated: ({ value }) => `${value} (med)`,\r\n                    },\r\n                ],\r\n            },\r\n        ],\r\n        []\r\n    );\r\n\r\n    const defaultColumn = React.useMemo(() => ({ Filter: DefaultColumnFilter, Cell: BTTextEditor }), []);\r\n\r\n    const [data, setData] = React.useState(() => makeData(1000));\r\n    const [originalData] = React.useState(data);\r\n\r\n    // We need to keep the table from resetting the pageIndex when we\r\n    // Update data. So we can keep track of that flag with a ref.\r\n    const skipResetRef = React.useRef(false);\r\n\r\n    // When our cell renderer calls updateMyData, we'll use\r\n    // the rowIndex, columnId and new value to update the\r\n    // original data\r\n    const updateMyData = (rowIndex, columnId, value) => {\r\n        // We also turn on the flag to not reset the page\r\n        skipResetRef.current = true;\r\n        setData((old) =>\r\n            old.map((row, index) => {\r\n                if (index === rowIndex) {\r\n                    return {\r\n                        ...row,\r\n                        [columnId]: value,\r\n                    };\r\n                }\r\n                return row;\r\n            })\r\n        );\r\n    };\r\n\r\n    // After data changes, we turn the flag back off\r\n    // so that if data actually changes when we're not\r\n    // editing it, the page is reset\r\n    React.useEffect(() => {\r\n        skipResetRef.current = false;\r\n    }, [data]);\r\n\r\n    // Let's add a data resetter/randomizer to help\r\n    // illustrate that flow...\r\n    const resetData = () => {\r\n        // Don't reset the page when we do this\r\n        skipResetRef.current = true;\r\n        setData(originalData);\r\n    };\r\n\r\n    return (\r\n        <div className=\"p-3\">\r\n            <bs.Toolbar gap={2} size=\"md\">\r\n                <bs.Button color=\"primary\" onClick={resetData}>\r\n                    Reset Data\r\n                </bs.Button>\r\n                <label>\r\n                    <bs.Toggle color=\"primary\" size=\"sm\" model={enablePaging} setModel={setEnablePaging}></bs.Toggle>\r\n                    Enable paging\r\n                </label>\r\n                <label>\r\n                    <bs.Toggle color=\"primary\" size=\"sm\" model={showTableInfo} setModel={setShowTableInfo}></bs.Toggle>\r\n                    Show Table Info\r\n                </label>\r\n                <label>\r\n                    <bs.Toggle color=\"primary\" size=\"sm\" model={showSummary} setModel={setShowSummary}></bs.Toggle>\r\n                    Show Summary\r\n                </label>\r\n                <label>\r\n                    <bs.Toggle color=\"primary\" size=\"sm\" model={showFooter} setModel={setShowFooter}></bs.Toggle>\r\n                    Show Footer\r\n                </label>\r\n            </bs.Toolbar>\r\n\r\n            <BasicTable\r\n                columns={columns}\r\n                defaultColumn={defaultColumn}\r\n                data={data}\r\n                updateData={updateMyData}\r\n                skipReset={skipResetRef.current}\r\n                enablePaging={enablePaging}\r\n                showTableInfo={showTableInfo}\r\n                showSummary={showSummary}\r\n                showFooter={showFooter}\r\n                showPageSize={true}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\n\r\nimport { ThemeProvider } from \"./app/theme-context\";\r\nimport accountManager from \"./app/account-manager\";\r\nimport { notify } from \"./components/basic/notify\";\r\n\r\n/*\r\nimport BasicLayout from \"./components/layout/basic-layout\";\r\nimport Header from \"./views/shared/header\";\r\nimport Sidebar from \"./views/shared/sidebar\";\r\n\r\nimport AccountHeader from \"./views/account/account-header\";\r\nimport AccountFooter from \"./views/account/account-footer\";\r\nimport RegisterForm from \"./views/account/register-form\";\r\nimport LoginForm from \"./views/account/login-form\";\r\nimport ManageUsersForm from \"./views/manage/manage-users-form\";\r\n\r\nimport NotFound from \"./views/shared/not-found\";\r\nimport { AzRoute } from \"./app/az-route\";\r\nimport RoleForm from \"./views/admin/role-form\";\r\n\r\n\r\n\r\nimport ManageUsersForm from \"./views/manage/manage-users-form\";\r\n*/\r\nimport { AzRoute } from \"./app/az-route\";\r\nimport { MenuApp } from \"./views/admin/menu/menu-app\";\r\n\r\nimport { LoginForm } from \"./views/account/login-form\";\r\nimport NotFound from \"./views/shared/not-found\";\r\n\r\nimport { Dashboard } from \"./views/home/dashboard/index.js\";\r\nimport { Inbox } from \"./views/home/inbox\";\r\nimport { SysMenuApp } from \"./views/home/sysmenu/sysmenu-app\";\r\nimport Landing from \"./views/home/landing\";\r\nimport { MainLayout } from \"./views/shared/main-layout\";\r\nimport { TablesApp } from \"./views/admin/tables/tables-app\";\r\nimport { FormDesignerApp } from \"./views/admin/form-designer/form-designer-app\";\r\nimport { TableDesignerApp } from \"./views/admin/table-designer/table-designer-app\";\r\nimport { TestTableApp } from \"./views/test/test-table\";\r\n\r\n/*\r\nfunction Layout({ layout, header, content, sidebar, footer, ...props }) {\r\n    return (\r\n        <BasicLayout\r\n            layout={!layout ? \"hmf\" : layout}\r\n            breakPoint={breakPoint}\r\n            header={!header ? Header : header}\r\n            content={content}\r\n            sidebar={!sidebar ? Sidebar : sidebar}\r\n            footer={footer}\r\n            rtl={settings.rtl}\r\n            {...props}\r\n        />\r\n    );\r\n}\r\n*/\r\nexport function App() {\r\n    const [loginStatus, setLoginStatus] = useState(false);\r\n\r\n    useEffect(() => {\r\n        accountManager\r\n            .init()\r\n            .then((x) => {\r\n                notify.info(x);\r\n                return x;\r\n            })\r\n            .catch((ex) => {\r\n                if (ex.name !== \"401\") notify.error(ex);\r\n            });\r\n    }, []);\r\n\r\n    useEffect(() => accountManager.status.onChange((x) => setLoginStatus(x)).remove, [loginStatus]);\r\n\r\n    return (\r\n        <ThemeProvider>\r\n            <Switch>\r\n                <Route exact path=\"/\" render={() => <Landing />} />\r\n\r\n                <Route exact path=\"/login\">\r\n                    <main className=\"content h-100 middle text-secondary-text\">\r\n                        <LoginForm />\r\n                    </main>\r\n                </Route>\r\n\r\n                <AzRoute exact path=\"/admin/menu\" render={() => <MainLayout component={MenuApp} />} />\r\n\r\n                <AzRoute exact path=\"/admin/table-designer\" render={() => <MainLayout component={TableDesignerApp} />} />\r\n\r\n                <AzRoute exact path=\"/admin/form-designer\" render={() => <MainLayout component={FormDesignerApp} />} />\r\n\r\n                <AzRoute exact path=\"/admin/tables\" render={() => <MainLayout component={TablesApp} />} />\r\n\r\n                <AzRoute exact path=\"/home\" render={() => <MainLayout component={SysMenuApp} />} />\r\n\r\n                <AzRoute exact path=\"/dashboard\" render={() => <MainLayout component={Dashboard} />} />\r\n\r\n                <AzRoute exact path=\"/inbox\" render={() => <MainLayout component={Inbox} />} />\r\n\r\n                <Route exact path=\"/test/table\" render={() => <TestTableApp />} />\r\n\r\n                <AzRoute render={() => <MainLayout component={NotFound} />} />\r\n            </Switch>\r\n        </ThemeProvider>\r\n    );\r\n}\r\n\r\n/*\r\n\r\n\r\n                <Route exact path=\"/admin/role\" render={() => <Layout content={RoleForm} />} />\r\n\r\n                <AzRoute exact path=\"/manage/users\" render={() => <Layout content={ManageUsersForm} />} />\r\n\r\n \r\n                <Route exact path=\"/account/login\"><Layout layout=\"hmf\" className=\"account account-light\" header={AccountHeader} content={LoginForm} footer={AccountFooter} light /></Route>\r\n                <Route exact path=\"/account/login2\"><Layout layout=\"hmf\" className=\"account account-dark\" header={AccountHeader} content={LoginForm} footer={AccountFooter} dark /></Route>\r\n                <Route exact path=\"/account/login3\"><Layout layout=\"hmf\" className=\"account account-dark with-background-image\" header={AccountHeader} content={LoginForm} footer={AccountFooter} dark /></Route>\r\n\r\n                <Route exact path=\"/account/register\"><Layout layout=\"hmf\" className=\"account account-light\" header={AccountHeader} content={RegisterForm} footer={AccountFooter} light /></Route>\r\n                <Route exact path=\"/account/register2\"><Layout layout=\"hmf\" className=\"account account-dark\" header={AccountHeader} content={RegisterForm} footer={AccountFooter} dark /></Route>\r\n                <Route exact path=\"/account/register3\"><Layout layout=\"hmf\" className=\"account account-dark with-background-image\" header={AccountHeader} content={RegisterForm} footer={AccountFooter} dark /></Route>\r\n\r\n\r\n\r\n */\r\n","import \"./index.scss\";\r\n\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport { App } from \"./app\";\r\n\r\nReactDOM.render(\r\n    <>\r\n        <React.StrictMode>\r\n            <BrowserRouter>\r\n                <App />\r\n            </BrowserRouter>\r\n        </React.StrictMode>\r\n        <ToastContainer\r\n            rtl={false}\r\n            limit={3}\r\n            position=\"bottom-left\"\r\n            autoClose={6000}\r\n            hideProgressBar={false}\r\n            newestOnTop={false}\r\n            closeOnClick\r\n            pauseOnFocusLoss\r\n            draggable\r\n            pauseOnHover\r\n        />\r\n    </>,\r\n    document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}