{"version":3,"sources":["reportWebVitals.js","components/basic/helper.js","app/theme-manager.js","app/theme-context.js","assets/icons/AccountCircle.tsx","assets/icons/Add.tsx","assets/icons/Adjust.tsx","assets/icons/ArrowBackIos.tsx","assets/icons/ArrowDownward.tsx","assets/icons/ArrowForward.tsx","assets/icons/ArrowUpward.tsx","assets/icons/CheckBoxOutlineBlank.tsx","assets/icons/ChevronLeft.tsx","assets/icons/ChevronRight.tsx","assets/icons/Close.tsx","assets/icons/DarkMode.tsx","assets/icons/Delete.tsx","assets/icons/DoneAll.tsx","assets/icons/Edit.tsx","assets/icons/FirstPage.tsx","assets/icons/Folder.tsx","assets/icons/Functions.tsx","assets/icons/Home.tsx","assets/icons/InsertDriveFile.tsx","assets/icons/LastPage.tsx","assets/icons/Login.tsx","assets/icons/Mail.tsx","assets/icons/MoreVert.tsx","assets/icons/NotificationsActive.tsx","assets/icons/Person.tsx","assets/icons/PersonAddAlt.tsx","assets/icons/PhoneIphone.tsx","assets/icons/Search.tsx","assets/icons/Settings.tsx","assets/icons/Sync.tsx","assets/icons/TableView.tsx","assets/icons/ZoomIn.tsx","components/messages.js","api/config.js","components/basic/final-form.js","views/account/captcha.js","app/settings.js","components/basic/notify.js","api/api.js","api/account-api.js","app/account-context.js","views/account/login-form.js","app/az-route.js","api/menu-api.js","components/tilemenu/tiles.js","components/basic-form/basic-input.jsx","views/admin/menu/edit-folder.jsx","components/basic-form/basic-switch.jsx","views/admin/menu/edit-menu.jsx","views/admin/menu/menu-app.js","views/account/forgot-password.jsx","views/shared/not-found.js","assets/bg/procurement.png","app/account-manager.js","views/home/dashboard/dashboard-app.js","views/home/inbox/inbox-app.js","components/tilemenu/tilemenu.js","views/home/lunchpad/lunchpad-app.js","views/home/startup/startup-app.js","views/shared/main-layout2.jsx","views/admin/tables/tables-app.js","api/table-designer-api.js","views/admin/form-designer/form-designer-app.js","views/admin/table-designer/edit-group.js","components/table/table-titlebar.tsx","components/table/render-table-div.js","components/table/editors.tsx","components/basic-form/basic-textarea.jsx","views/admin/table-designer/edit-table.js","views/admin/table-designer/table-designer-app.js","views/account/user-settings-app.jsx","api/user-managment-api.js","views/admin/users/edit-user.jsx","views/admin/users/users-app.jsx","views/account/user-profile-app.jsx","app.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","helper","elem","list","split","i","length","document","body","classList","add","remove","themeManager","get","localStorage","getItem","set","value","setItem","css","isDark","theme","indexOf","isDarkSidebar","lst","cl","startsWith","push","css_list","getCss","endsWith","t","ThemeContext","createContext","ThemeProvider","props","useState","setTheme","Provider","children","SvgAccountCircle","xmlns","width","height","viewBox","d","SvgAdd","SvgAdjust","SvgArrowBackIos","SvgArrowDownward","SvgArrowForward","SvgArrowUpward","SvgCheckBoxOutlineBlank","SvgChevronLeft","SvgChevronRight","SvgClose","SvgDarkMode","SvgDelete","SvgDoneAll","SvgEdit","SvgFirstPage","SvgFolder","SvgFunctions","SvgHome","SvgInsertDriveFile","SvgLastPage","SvgLogin","SvgMail","SvgMoreVert","SvgNotificationsActive","SvgPerson","SvgPersonAddAlt","SvgPhoneIphone","SvgSearch","SvgSettings","SvgSync","SvgTableView","SvgZoomIn","messages","host","apiConfig","localeUrl","baseUrl","accountUrl","menuUrl","tableDesignerUrl","userManegmentUrl","cssFormGroup","size","cssColFormLabel","cssFormLabel","settings","toFormControlClassNames","readonly","controlClassName","input","meta","classNames","cssFormControl","final_from_classes","filled","touched","invalid","valid","modified","pristine","dirty","visited","submitFailed","FinalField","label","labelSize","name","renderLabel","renderInput","type","defaultValue","labelClassName","c1","c2","has_columns","cnLabelColumn","cnControlColumn","doRenderLabel","className","cn","doRenderInput","args","title","error","readOnly","inp","data-meta","JSON","stringify","doRenderValidationError","attr","parse","isNaN","parseFloat","component","row","Captcha","counter","captcha","React","createRef","Date","now","uid","setUID","ref","maxLength","autoComplete","spellCheck","placeholder","alt","src","onClick","current","focus","debugMode","projectId","supportTel","missingTranslations","logMissings","console","log","getLanguageCode","parts","cookie","pop","shift","getCookie","notify","message","Error","response","ex","data","toString","toast","closeToast","success","info","warning","dark","close","id","dismiss","genericeResponseHandler","isSuccess","errorMessage","newError","result","stack","translateError","status","callAxios","method","url","axios","withCredentials","headers","authorization","api","token","catch","onUnauthorizeHandler","onForbiddenHandler","dispatchUnauthorized","dispatchForbidden","expiry","onUnauthorized","fn","ownerName","onForbidden","call","Promise","resolve","reject","handle_reject","handled","handle_resolve","directCall","accountApi","userName","password","user","accountStatuses","AccountContext","useAccount","useContext","AccountProvider","setData","logout","sync","account","setStatus","useEffect","onLogoutEvent","event","key","window","addEventListener","removeEventListener","getToken","getStatus","getName","setName","isConnecting","isConnectionFailed","isConnected","isLoggedIn","isLoggedOut","setAsLoggedOut","setAsForbidden","init","x","displayName","login","LoginForm","inline","captchaCounter","setCaptchaCounter","loading","setLoading","history","useHistory","initialValues","onSubmit","values","trim","render","handleSubmit","submitting","form","errors","style","autoFocus","color","disabled","href","AzRoute","Component","rest","loginHere","setLoginHere","reconnect","gotoLoginHere","returnFromLoginHere","fill","maxHeight","variant","menuApi","insertMode","action","Tiles","Tile","icon","selected","is_folder","BasicInput","maxWidth","useField","field","cnControl","undefined","field_comp","htmlFor","EditFolder","folder","onGoBack","useTranslation","deleting","setDeleting","formRef","useRef","position","zIndex","shadow","submitForm","bd","hide","onDeleteClick","validationSchema","yup","required","e","innerRef","BasicSwitch","model","onChange","onBlur","EditMenu","menu","openInNewTab","MenuApp","projects","setProjects","app","setApp","menuFolders","setMenuFolders","menus","setMenus","initialized","setInitialized","selectedFolder","setSelectedFolder","selectedMenu","setSelectedMenu","editMode","setEditMode","onRefresh","menuProjects","map","newApp","filter","parentId","f","m","item","findIndex","Appbar","buttons","ForgotPassword","busy","setBusy","setVerificatinKey","isValid","alert","Key","NotFound","borderRadius","fontWeight","textShadow","fontSize","authStatusTypes","Connecting","ConnectionFailed","Connected","LoggedIn","LoggedOut","accountSubject","application","statusSubject","accountManager","all","propName","next","asObservable","subscribe","onConnected","isLoggedin","bind","res","DashboardApp","setUser","procurement","InboxApp","TileMenu","folders","parent","onSelect","activeItem","MenuFolder","mi","MenuItem","menuHelper","FolderIcon","badgeText","badgeCss","iconSize","CaretIcon","MenuIcon","isOpen","subFolders","LunchpadApp","setActiveItem","find","location","StartupApp","backgroundImage","backgroundSize","backgroundColor","minHeight","MainLayout","Comp","menuUser","setRTL","getRTL","isDarkMode","overlapCircle","edge","TablesApp","tableDesignerApi","getGroups","saveGroup","group","g","items","actionName","deleteGroup","groupId","getTable","tableName","saveTable","table","tb","deleteTable","schemaColumn","FormDesignerApp","setGroup","setForm","goBack","TableDesignerEditGroup","onChanged","min","max","TableTitlebar","tableApi","fixed","expanded","hideSearch","hideSettings","showSettings","setShowSettings","controls","state","globalFilter","setGlobalFilter","target","SettingsDialog","show","setShow","columns","accessor","Modal","fullscreen","onHide","Header","closeButton","Title","Body","TabContainer","defaultActiveKey","eventKey","TabContent","TabPane","forEach","toggleHidden","dense","primary","isVisible","canGroupBy","isGrouped","opacity","toggleGroupBy","RenderTableDiv","dataLength","showColumnFilter","enableGrouping","enableSorting","multiSelect","singleSelect","hideCheckbox","clickAction","enablePaging","maxDisplayRow","editable","hasSummary","showTableInfo","showPageSize","hover","striped","hasWhitespace","stickyFooter","rows","page","enable_responsive","headerGroups","some","_breakPoint","selectable","slice","showing","showingFiltered","gotoPage","firstPage","prevPage","nextPage","lastPage","getSummary","col","sum","_summary","getSortByToggleProps","column","onTdClick","cell","_ignoreToggleOnClick","is_selected","isSelected","toggleAllRowsSelected","toggleRowSelected","getTableProps","headerGroup","getHeaderGroupProps","getToggleAllRowsSelectedProps","getHeaderProps","userProps","_headerProps","remUserProps","isSorted","isSortedDesc","getGroupByToggleProps","canFilter","getTableBodyProps","rowIndex","prepareRow","getRowProps","getToggleRowSelectedProps","radio","cells","getCellProps","_cellProps","getToggleRowExpandedProps","isExpanded","subRows","isAggregated","isPlaceholder","footerGroups","getFooterGroupProps","idx","getFooterProps","a","pageIndex","pageSize","b","filters","replace","getTableInfo","canPreviousPage","previousPage","pageOptions","canNextPage","pageCount","DefaultEditor","initialValue","updateMyData","setValue","updateValue","newValue","index","getDisplayValue","r","isReadonly","nullValue","display","setModel","validValues","code","substr","getValidValues","BasicTextArea","TableDesignerEditTable","saving","setSaving","onSaveClick","dto","dataColumns","useTable","initialState","defaultColumn","Cell","minWidth","disableGroupBy","useMemo","c","isRequired","original","dataType","maxLen","columnId","new_row","autoResetPage","autoResetFilters","autoResetSortBy","autoResetSelectedRows","autoResetGlobalFilter","disableMultiSort","useGlobalFilter","useFilters","useGroupBy","useSortBy","useExpanded","usePagination","useRowSelect","useFlexLayout","moreMenu","createAt","indicatorColor","textColor","marginBottom","singularTitle","schemaColumns","z","isPK","isNull","ordinalPosition","selectedRowIds","selectedFlatRows","updatedRows","TableDesignerApp","groups","setGroups","setTable","setColumn","sort","onEditGroupClick","onAddFormClick","onEditTableClick","splice","languages","country_code","dir","UserSettingsApp","darkMode","setDarkMode","currentLanguageCode","currentLanguage","l","checked","lang","i18next","changeLanguage","userManagmentApi","userId","EditUser","titlePage","activeTab","setActiveTab","windowsAuth","setAuthType","windowsAuthenticate","UserForm","Tab","Container","shade","Content","Pane","GeneralUserInfo","AuthenticationType","inputStyle","read","class","firstName","lastName","nationalCode","nullable","email","phoneNumber","matches","repeatePassword","when","is","UsersApp","users","setUsers","selectedUser","setSelectedUser","useResizeColumns","resizable","newUsers","UserProfileApp","chPassMode","setChPassMode","WinAuth","Atthenticate","PageTitle","editProfileOnClick","changePasswordOnClick","ViewUserInfo","listStyleType","oldPassword","oneOf","App","exact","path","i18n","use","HttpApi","LanguageDetector","initReactI18next","supportedLngs","fallbackLng","debug","saveMissing","detection","order","caches","backend","loadPath","on","lngs","namespace","lang_missings","loadingMarkup","getTheme","ReactDOM","fallback","StrictMode","rtl","limit","autoClose","hideProgressBar","newestOnTop","closeOnClick","pauseOnFocusLoss","draggable","pauseOnHover","getElementById"],"mappings":"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","file":"static/js/main.517f4f68.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","//import { createBrowserHistory } from 'history';\r\n//export const history = createBrowserHistory();\r\n\r\nexport const delayedPromise = (delay, fn) =>\r\n    new Promise((resolve, reject) => {\r\n        setTimeout(() => fn(resolve, reject), delay);\r\n    });\r\n\r\nexport const helper = {\r\n    isNullOrUndefined: (x) => x == null || typeof x === \"undefined\",\r\n    isUndefined: (x) => typeof x === \"undefined\",\r\n    isString: (x) => typeof x === \"string\",\r\n    isArray: (x) => Array.isArray(x),\r\n    isFunction: (x) => typeof x === \"function\",\r\n\r\n    isFunctionalComponent: (c) =>\r\n        typeof c === \"function\" &&\r\n        !(c.prototype && c.prototype.isReactComponent),\r\n    isClassComponent: (c) =>\r\n        typeof c === \"function\" &&\r\n        !!(c.prototype && c.prototype.isReactComponent),\r\n\r\n    addClassNames: (elem, list) => {\r\n        if (typeof list === \"string\") list = list.split(\" \");\r\n        for (var i = 0; i < list.length; i++) {\r\n            document.body.classList.add(list[i]);\r\n        }\r\n    },\r\n\r\n    removeClassNames: (elem, list) => {\r\n        if (typeof list === \"string\") list = list.split(\" \");\r\n        for (var i = 0; i < list.length; i++) {\r\n            document.body.classList.remove(list[i]);\r\n        }\r\n    },\r\n\r\n    hexColorToStyle: function (color, text, bg) {\r\n        if (!color || !color.startsWith(\"#\")) return {};\r\n        var style = text ? { color: color } : {};\r\n        return !bg ? style : { ...style, backgroundColor: color };\r\n    },\r\n};\r\n","import { helper } from \"../components/basic/helper\";\r\n\r\nexport const themeManager = {\r\n    get: () => localStorage.getItem(\"theme\"),\r\n\r\n    set: (value) => {\r\n        if (!value) value = \"default\";\r\n        localStorage.setItem(\"theme\", value);\r\n        themeManager.css(value);\r\n    },\r\n\r\n    isDark: (theme) => theme && theme.indexOf(\"dark\") >= 0,\r\n    isDarkSidebar: (theme) => themeManager.isDark(theme) || (theme && theme.indexOf(\"default\") >= 0),\r\n\r\n    css: (value) => {\r\n        var lst = [];\r\n        var cl = document.body.classList;\r\n        for (var i = 0; i < cl.length; i++) {\r\n            if (cl[i].startsWith(\"theme-\")) lst.push(cl[i]);\r\n        }\r\n        helper.removeClassNames(document.body, lst);\r\n        var css_list = themeManager.getCss(value);\r\n        helper.addClassNames(document.body, css_list);\r\n    },\r\n\r\n    getCss: (value) => {\r\n        var list = [];\r\n        if (!value) return list;\r\n        list.push(\"theme-\" + value);\r\n        if (value.startsWith(\"bs-\")) list.push(\"theme-bs\");\r\n        if (value.startsWith(\"bd-\")) list.push(\"theme-bd\");\r\n        if (value.endsWith(\"-default\")) list.push(\"theme-light\");\r\n        if (value.endsWith(\"-light\")) list.push(\"theme-light\");\r\n        if (value.endsWith(\"-dark\")) list.push(\"theme-dark\");\r\n        return list;\r\n    },\r\n};\r\nvar t = themeManager.get();\r\nif (!t) t = \"bd-light\";\r\nthemeManager.css(t);\r\n","import React, { useState, createContext } from \"react\";\r\nimport { themeManager } from \"./theme-manager\";\r\n\r\nexport const ThemeContext = createContext();\r\n\r\nexport const ThemeProvider = (props) => {\r\n    const [theme, setTheme] = useState(themeManager.get());\r\n\r\n    const changeTheme = (value) => {\r\n        if (!value) value = \"default\";\r\n        themeManager.set(value);\r\n        setTheme(value);\r\n    };\r\n\r\n    return <ThemeContext.Provider value={[theme, changeTheme]}>{props.children}</ThemeContext.Provider>;\r\n};\r\n","import * as React from \"react\";\r\n\r\nfunction SvgAccountCircle(props: React.SVGProps<SVGSVGElement>) {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width=\"1em\"\r\n      height=\"1em\"\r\n      viewBox=\"0 0 24 24\"\r\n      {...props}\r\n    >\r\n      <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zM7.07 18.28c.43-.9 3.05-1.78 4.93-1.78s4.51.88 4.93 1.78C15.57 19.36 13.86 20 12 20s-3.57-.64-4.93-1.72zm11.29-1.45c-1.43-1.74-4.9-2.33-6.36-2.33s-4.93.59-6.36 2.33A7.95 7.95 0 014 12c0-4.41 3.59-8 8-8s8 3.59 8 8c0 1.82-.62 3.49-1.64 4.83zM12 6c-1.94 0-3.5 1.56-3.5 3.5S10.06 13 12 13s3.5-1.56 3.5-3.5S13.94 6 12 6zm0 5c-.83 0-1.5-.67-1.5-1.5S11.17 8 12 8s1.5.67 1.5 1.5S12.83 11 12 11z\" />\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default SvgAccountCircle;\r\n","import * as React from \"react\";\r\n\r\nfunction SvgAdd(props: React.SVGProps<SVGSVGElement>) {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width=\"1em\"\r\n      height=\"1em\"\r\n      viewBox=\"0 0 24 24\"\r\n      {...props}\r\n    >\r\n      <path d=\"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\" />\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default SvgAdd;\r\n","import * as React from \"react\";\r\n\r\nfunction SvgAdjust(props: React.SVGProps<SVGSVGElement>) {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width=\"1em\"\r\n      height=\"1em\"\r\n      viewBox=\"0 0 24 24\"\r\n      {...props}\r\n    >\r\n      <path d=\"M12 2C6.49 2 2 6.49 2 12s4.49 10 10 10 10-4.49 10-10S17.51 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8zm3-8c0 1.66-1.34 3-3 3s-3-1.34-3-3 1.34-3 3-3 3 1.34 3 3z\" />\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default SvgAdjust;\r\n","import * as React from \"react\";\r\n\r\nfunction SvgArrowBackIos(props: React.SVGProps<SVGSVGElement>) {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width=\"1em\"\r\n      height=\"1em\"\r\n      viewBox=\"0 0 24 24\"\r\n      {...props}\r\n    >\r\n      <path d=\"M17.51 3.87L15.73 2.1 5.84 12l9.9 9.9 1.77-1.77L9.38 12l8.13-8.13z\" />\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default SvgArrowBackIos;\r\n","import * as React from \"react\";\r\n\r\nfunction SvgArrowDownward(props: React.SVGProps<SVGSVGElement>) {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width=\"1em\"\r\n      height=\"1em\"\r\n      viewBox=\"0 0 24 24\"\r\n      {...props}\r\n    >\r\n      <path d=\"M20 12l-1.41-1.41L13 16.17V4h-2v12.17l-5.58-5.59L4 12l8 8 8-8z\" />\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default SvgArrowDownward;\r\n","import * as React from \"react\";\r\n\r\nfunction SvgArrowForward(props: React.SVGProps<SVGSVGElement>) {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width=\"1em\"\r\n      height=\"1em\"\r\n      viewBox=\"0 0 24 24\"\r\n      {...props}\r\n    >\r\n      <path d=\"M12 4l-1.41 1.41L16.17 11H4v2h12.17l-5.58 5.59L12 20l8-8-8-8z\" />\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default SvgArrowForward;\r\n","import * as React from \"react\";\r\n\r\nfunction SvgArrowUpward(props: React.SVGProps<SVGSVGElement>) {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width=\"1em\"\r\n      height=\"1em\"\r\n      viewBox=\"0 0 24 24\"\r\n      {...props}\r\n    >\r\n      <path d=\"M4 12l1.41 1.41L11 7.83V20h2V7.83l5.58 5.59L20 12l-8-8-8 8z\" />\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default SvgArrowUpward;\r\n","import * as React from \"react\";\r\n\r\nfunction SvgCheckBoxOutlineBlank(props: React.SVGProps<SVGSVGElement>) {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width=\"1em\"\r\n      height=\"1em\"\r\n      viewBox=\"0 0 24 24\"\r\n      {...props}\r\n    >\r\n      <path d=\"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z\" />\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default SvgCheckBoxOutlineBlank;\r\n","import * as React from \"react\";\r\n\r\nfunction SvgChevronLeft(props: React.SVGProps<SVGSVGElement>) {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width=\"1em\"\r\n      height=\"1em\"\r\n      viewBox=\"0 0 24 24\"\r\n      {...props}\r\n    >\r\n      <path d=\"M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12l4.58-4.59z\" />\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default SvgChevronLeft;\r\n","import * as React from \"react\";\r\n\r\nfunction SvgChevronRight(props: React.SVGProps<SVGSVGElement>) {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width=\"1em\"\r\n      height=\"1em\"\r\n      viewBox=\"0 0 24 24\"\r\n      {...props}\r\n    >\r\n      <path d=\"M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6-6-6z\" />\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default SvgChevronRight;\r\n","import * as React from \"react\";\r\n\r\nfunction SvgClose(props: React.SVGProps<SVGSVGElement>) {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width=\"1em\"\r\n      height=\"1em\"\r\n      viewBox=\"0 0 24 24\"\r\n      {...props}\r\n    >\r\n      <path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12 19 6.41z\" />\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default SvgClose;\r\n","import * as React from \"react\";\r\n\r\nfunction SvgDarkMode(props: React.SVGProps<SVGSVGElement>) {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width=\"1em\"\r\n      height=\"1em\"\r\n      viewBox=\"0 0 24 24\"\r\n      {...props}\r\n    >\r\n      <path d=\"M9.37 5.51A7.35 7.35 0 009.1 7.5c0 4.08 3.32 7.4 7.4 7.4.68 0 1.35-.09 1.99-.27A7.014 7.014 0 0112 19c-3.86 0-7-3.14-7-7 0-2.93 1.81-5.45 4.37-6.49zM12 3a9 9 0 109 9c0-.46-.04-.92-.1-1.36a5.389 5.389 0 01-4.4 2.26 5.403 5.403 0 01-3.14-9.8c-.44-.06-.9-.1-1.36-.1z\" />\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default SvgDarkMode;\r\n","import * as React from \"react\";\r\n\r\nfunction SvgDelete(props: React.SVGProps<SVGSVGElement>) {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width=\"1em\"\r\n      height=\"1em\"\r\n      viewBox=\"0 0 24 24\"\r\n      {...props}\r\n    >\r\n      <path d=\"M16 9v10H8V9h8m-1.5-6h-5l-1 1H5v2h14V4h-3.5l-1-1zM18 7H6v12c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7z\" />\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default SvgDelete;\r\n","import * as React from \"react\";\r\n\r\nfunction SvgDoneAll(props: React.SVGProps<SVGSVGElement>) {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width=\"1em\"\r\n      height=\"1em\"\r\n      viewBox=\"0 0 24 24\"\r\n      {...props}\r\n    >\r\n      <path d=\"M18 7l-1.41-1.41-6.34 6.34 1.41 1.41L18 7zm4.24-1.41L11.66 16.17 7.48 12l-1.41 1.41L11.66 19l12-12-1.42-1.41zM.41 13.41L6 19l1.41-1.41L1.83 12 .41 13.41z\" />\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default SvgDoneAll;\r\n","import * as React from \"react\";\r\n\r\nfunction SvgEdit(props: React.SVGProps<SVGSVGElement>) {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width=\"1em\"\r\n      height=\"1em\"\r\n      viewBox=\"0 0 24 24\"\r\n      {...props}\r\n    >\r\n      <path d=\"M14.06 9.02l.92.92L5.92 19H5v-.92l9.06-9.06M17.66 3c-.25 0-.51.1-.7.29l-1.83 1.83 3.75 3.75 1.83-1.83a.996.996 0 000-1.41l-2.34-2.34c-.2-.2-.45-.29-.71-.29zm-3.6 3.19L3 17.25V21h3.75L17.81 9.94l-3.75-3.75z\" />\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default SvgEdit;\r\n","import * as React from \"react\";\r\n\r\nfunction SvgFirstPage(props: React.SVGProps<SVGSVGElement>) {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width=\"1em\"\r\n      height=\"1em\"\r\n      viewBox=\"0 0 24 24\"\r\n      {...props}\r\n    >\r\n      <path d=\"M18.41 16.59L13.82 12l4.59-4.59L17 6l-6 6 6 6 1.41-1.41zM6 6h2v12H6V6z\" />\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default SvgFirstPage;\r\n","import * as React from \"react\";\r\n\r\nfunction SvgFolder(props: React.SVGProps<SVGSVGElement>) {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width=\"1em\"\r\n      height=\"1em\"\r\n      viewBox=\"0 0 24 24\"\r\n      {...props}\r\n    >\r\n      <path d=\"M9.17 6l2 2H20v10H4V6h5.17M10 4H4c-1.1 0-1.99.9-1.99 2L2 18c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V8c0-1.1-.9-2-2-2h-8l-2-2z\" />\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default SvgFolder;\r\n","import * as React from \"react\";\r\n\r\nfunction SvgFunctions(props: React.SVGProps<SVGSVGElement>) {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width=\"1em\"\r\n      height=\"1em\"\r\n      viewBox=\"0 0 24 24\"\r\n      {...props}\r\n    >\r\n      <path d=\"M18 4H6v2l6.5 6L6 18v2h12v-3h-7l5-5-5-5h7V4z\" />\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default SvgFunctions;\r\n","import * as React from \"react\";\r\n\r\nfunction SvgHome(props: React.SVGProps<SVGSVGElement>) {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width=\"1em\"\r\n      height=\"1em\"\r\n      viewBox=\"0 0 24 24\"\r\n      {...props}\r\n    >\r\n      <path d=\"M12 5.69l5 4.5V18h-2v-6H9v6H7v-7.81l5-4.5M12 3L2 12h3v8h6v-6h2v6h6v-8h3L12 3z\" />\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default SvgHome;\r\n","import * as React from \"react\";\r\n\r\nfunction SvgInsertDriveFile(props: React.SVGProps<SVGSVGElement>) {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width=\"1em\"\r\n      height=\"1em\"\r\n      viewBox=\"0 0 24 24\"\r\n      {...props}\r\n    >\r\n      <path d=\"M14 2H6c-1.1 0-1.99.9-1.99 2L4 20c0 1.1.89 2 1.99 2H18c1.1 0 2-.9 2-2V8l-6-6zM6 20V4h7v5h5v11H6z\" />\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default SvgInsertDriveFile;\r\n","import * as React from \"react\";\r\n\r\nfunction SvgLastPage(props: React.SVGProps<SVGSVGElement>) {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width=\"1em\"\r\n      height=\"1em\"\r\n      viewBox=\"0 0 24 24\"\r\n      {...props}\r\n    >\r\n      <path d=\"M5.59 7.41L10.18 12l-4.59 4.59L7 18l6-6-6-6-1.41 1.41zM16 6h2v12h-2V6z\" />\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default SvgLastPage;\r\n","import * as React from \"react\";\r\n\r\nfunction SvgLogin(props: React.SVGProps<SVGSVGElement>) {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width=\"1em\"\r\n      height=\"1em\"\r\n      viewBox=\"0 0 24 24\"\r\n      {...props}\r\n    >\r\n      <path d=\"M11 7L9.6 8.4l2.6 2.6H2v2h10.2l-2.6 2.6L11 17l5-5-5-5zm9 12h-8v2h8c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2h-8v2h8v14z\" />\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default SvgLogin;\r\n","import * as React from \"react\";\n\nfunction SvgMail(props: React.SVGProps<SVGSVGElement>) {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"1em\"\n      height=\"1em\"\n      viewBox=\"0 0 24 24\"\n      {...props}\n    >\n      <path d=\"M22 6c0-1.1-.9-2-2-2H4c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6zm-2 0l-8 4.99L4 6h16zm0 12H4V8l8 5 8-5v10z\" />\n    </svg>\n  );\n}\n\nexport default SvgMail;\n","import * as React from \"react\";\r\n\r\nfunction SvgMoreVert(props: React.SVGProps<SVGSVGElement>) {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width=\"1em\"\r\n      height=\"1em\"\r\n      viewBox=\"0 0 24 24\"\r\n      {...props}\r\n    >\r\n      <path d=\"M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\" />\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default SvgMoreVert;\r\n","import * as React from \"react\";\r\n\r\nfunction SvgNotificationsActive(props: React.SVGProps<SVGSVGElement>) {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width=\"1em\"\r\n      height=\"1em\"\r\n      viewBox=\"0 0 24 24\"\r\n      {...props}\r\n    >\r\n      <path d=\"M12 22c1.1 0 2-.9 2-2h-4c0 1.1.9 2 2 2zm6-6v-5c0-3.07-1.63-5.64-4.5-6.32V4c0-.83-.67-1.5-1.5-1.5s-1.5.67-1.5 1.5v.68C7.64 5.36 6 7.92 6 11v5l-2 2v1h16v-1l-2-2zm-2 1H8v-6c0-2.48 1.51-4.5 4-4.5s4 2.02 4 4.5v6zM7.58 4.08L6.15 2.65C3.75 4.48 2.17 7.3 2.03 10.5h2a8.445 8.445 0 013.55-6.42zm12.39 6.42h2c-.15-3.2-1.73-6.02-4.12-7.85l-1.42 1.43a8.495 8.495 0 013.54 6.42z\" />\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default SvgNotificationsActive;\r\n","import * as React from \"react\";\r\n\r\nfunction SvgPerson(props: React.SVGProps<SVGSVGElement>) {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width=\"1em\"\r\n      height=\"1em\"\r\n      viewBox=\"0 0 24 24\"\r\n      {...props}\r\n    >\r\n      <path d=\"M12 6c1.1 0 2 .9 2 2s-.9 2-2 2-2-.9-2-2 .9-2 2-2m0 10c2.7 0 5.8 1.29 6 2H6c.23-.72 3.31-2 6-2m0-12C9.79 4 8 5.79 8 8s1.79 4 4 4 4-1.79 4-4-1.79-4-4-4zm0 10c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z\" />\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default SvgPerson;\r\n","import * as React from \"react\";\r\n\r\nfunction SvgPersonAddAlt(props: React.SVGProps<SVGSVGElement>) {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width=\"1em\"\r\n      height=\"1em\"\r\n      viewBox=\"0 0 24 24\"\r\n      {...props}\r\n    >\r\n      <path d=\"M20 9V6h-2v3h-3v2h3v3h2v-3h3V9h-3zM9 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0-6c1.1 0 2 .9 2 2s-.9 2-2 2-2-.9-2-2 .9-2 2-2zm6.39 8.56C13.71 13.7 11.53 13 9 13s-4.71.7-6.39 1.56A2.97 2.97 0 001 17.22V20h16v-2.78c0-1.12-.61-2.15-1.61-2.66zM15 18H3v-.78c0-.38.2-.72.52-.88C4.71 15.73 6.63 15 9 15c2.37 0 4.29.73 5.48 1.34.32.16.52.5.52.88V18z\" />\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default SvgPersonAddAlt;\r\n","import * as React from \"react\";\n\nfunction SvgPhoneIphone(props: React.SVGProps<SVGSVGElement>) {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"1em\"\n      height=\"1em\"\n      viewBox=\"0 0 24 24\"\n      {...props}\n    >\n      <path d=\"M15.5 1h-8A2.5 2.5 0 005 3.5v17A2.5 2.5 0 007.5 23h8a2.5 2.5 0 002.5-2.5v-17A2.5 2.5 0 0015.5 1zm-4 21c-.83 0-1.5-.67-1.5-1.5s.67-1.5 1.5-1.5 1.5.67 1.5 1.5-.67 1.5-1.5 1.5zm4.5-4H7V4h9v14z\" />\n    </svg>\n  );\n}\n\nexport default SvgPhoneIphone;\n","import * as React from \"react\";\r\n\r\nfunction SvgSearch(props: React.SVGProps<SVGSVGElement>) {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width=\"1em\"\r\n      height=\"1em\"\r\n      viewBox=\"0 0 24 24\"\r\n      {...props}\r\n    >\r\n      <path d=\"M15.5 14h-.79l-.28-.27A6.471 6.471 0 0016 9.5 6.5 6.5 0 109.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\" />\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default SvgSearch;\r\n","import * as React from \"react\";\r\n\r\nfunction SvgSettings(props: React.SVGProps<SVGSVGElement>) {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width=\"1em\"\r\n      height=\"1em\"\r\n      viewBox=\"0 0 24 24\"\r\n      {...props}\r\n    >\r\n      <path d=\"M19.43 12.98c.04-.32.07-.64.07-.98 0-.34-.03-.66-.07-.98l2.11-1.65c.19-.15.24-.42.12-.64l-2-3.46a.5.5 0 00-.61-.22l-2.49 1c-.52-.4-1.08-.73-1.69-.98l-.38-2.65A.488.488 0 0014 2h-4c-.25 0-.46.18-.49.42l-.38 2.65c-.61.25-1.17.59-1.69.98l-2.49-1a.566.566 0 00-.18-.03c-.17 0-.34.09-.43.25l-2 3.46c-.13.22-.07.49.12.64l2.11 1.65c-.04.32-.07.65-.07.98 0 .33.03.66.07.98l-2.11 1.65c-.19.15-.24.42-.12.64l2 3.46a.5.5 0 00.61.22l2.49-1c.52.4 1.08.73 1.69.98l.38 2.65c.03.24.24.42.49.42h4c.25 0 .46-.18.49-.42l.38-2.65c.61-.25 1.17-.59 1.69-.98l2.49 1c.06.02.12.03.18.03.17 0 .34-.09.43-.25l2-3.46c.12-.22.07-.49-.12-.64l-2.11-1.65zm-1.98-1.71c.04.31.05.52.05.73 0 .21-.02.43-.05.73l-.14 1.13.89.7 1.08.84-.7 1.21-1.27-.51-1.04-.42-.9.68c-.43.32-.84.56-1.25.73l-1.06.43-.16 1.13-.2 1.35h-1.4l-.19-1.35-.16-1.13-1.06-.43c-.43-.18-.83-.41-1.23-.71l-.91-.7-1.06.43-1.27.51-.7-1.21 1.08-.84.89-.7-.14-1.13c-.03-.31-.05-.54-.05-.74s.02-.43.05-.73l.14-1.13-.89-.7-1.08-.84.7-1.21 1.27.51 1.04.42.9-.68c.43-.32.84-.56 1.25-.73l1.06-.43.16-1.13.2-1.35h1.39l.19 1.35.16 1.13 1.06.43c.43.18.83.41 1.23.71l.91.7 1.06-.43 1.27-.51.7 1.21-1.07.85-.89.7.14 1.13zM12 8c-2.21 0-4 1.79-4 4s1.79 4 4 4 4-1.79 4-4-1.79-4-4-4zm0 6c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2z\" />\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default SvgSettings;\r\n","import * as React from \"react\";\r\n\r\nfunction SvgSync(props: React.SVGProps<SVGSVGElement>) {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width=\"1em\"\r\n      height=\"1em\"\r\n      viewBox=\"0 0 24 24\"\r\n      {...props}\r\n    >\r\n      <path d=\"M12 4V1L8 5l4 4V6c3.31 0 6 2.69 6 6 0 1.01-.25 1.97-.7 2.8l1.46 1.46A7.93 7.93 0 0020 12c0-4.42-3.58-8-8-8zm0 14c-3.31 0-6-2.69-6-6 0-1.01.25-1.97.7-2.8L5.24 7.74A7.93 7.93 0 004 12c0 4.42 3.58 8 8 8v3l4-4-4-4v3z\" />\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default SvgSync;\r\n","import * as React from \"react\";\r\n\r\nfunction SvgTableView(props: React.SVGProps<SVGSVGElement>) {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width=\"1em\"\r\n      height=\"1em\"\r\n      viewBox=\"0 0 24 24\"\r\n      {...props}\r\n    >\r\n      <path d=\"M19 7H9c-1.1 0-2 .9-2 2v10c0 1.1.9 2 2 2h10c1.1 0 2-.9 2-2V9c0-1.1-.9-2-2-2zm0 2v2H9V9h10zm-6 6v-2h2v2h-2zm2 2v2h-2v-2h2zm-4-2H9v-2h2v2zm6-2h2v2h-2v-2zm-8 4h2v2H9v-2zm8 2v-2h2v2h-2zM6 17H5c-1.1 0-2-.9-2-2V5c0-1.1.9-2 2-2h10c1.1 0 2 .9 2 2v1h-2V5H5v10h1v2z\" />\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default SvgTableView;\r\n","import * as React from \"react\";\r\n\r\nfunction SvgZoomIn(props: React.SVGProps<SVGSVGElement>) {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width=\"1em\"\r\n      height=\"1em\"\r\n      viewBox=\"0 0 24 24\"\r\n      {...props}\r\n    >\r\n      <path d=\"M15.5 14h-.79l-.28-.27A6.471 6.471 0 0016 9.5 6.5 6.5 0 109.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14zm.5-7H9v2H7v1h2v2h1v-2h2V9h-2z\" />\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default SvgZoomIn;\r\n","export const messages = {\r\n    Unknown: \"خطای نامشخص\",\r\n    NetworkError: \"سرویس در دسترس نمی باشد\",\r\n    InvalidUrl: \"آدرس وب سرویس اشتباه است\",\r\n    Error401: \"دسترسی غیر مجاز - 401\",\r\n    Error403: \"دسترسی غیر مجاز - 403\",\r\n    Error404: \"صفحه مورد نظر یافت نشد\",\r\n    Error405: \"خطای برنامه - 405\",\r\n    Error500: \"خطایی در سمت سرور رخ داده است\",\r\n\r\n    InvalidUserName: \"نام کاربری نامعتبر است\",\r\n    InvalidPassword: \"رمز ورود نامعتبر است\",\r\n    InvalidCaptcha: \"متن تصویر نامعتبر است\",\r\n    PleaseWait: \"لطفا چند لحظه صبر کنید\",\r\n\r\n    Home: \"داشبورد\",\r\n    Dashboard: \"داشبورد\",\r\n    Inbox: \"کارتابل\",\r\n    SysMenu: \"منوی اصلی\",\r\n\r\n    Search: \"جستجو\",\r\n    NothingFound: \"موردی یافت نشد\",\r\n    New: \"ایجاد\",\r\n    Edit: \"ویرایش\",\r\n    Cancel: \"انصراف\",\r\n    ConfirmDeleting: \"تایید حذف رکورد\",\r\n    Delete: \"حذف\",\r\n    SelectAnApp: \"سیستم مورد نظر را انتخاب کنید:\",\r\n    Save: \"ثبت تغییرات\",\r\n    ChangesAreSaved: \"تغییرات با موفقیت ذخیره شد\",\r\n    RowIsDeleted: \"رکورد مورد نظر حذف شد\",\r\n    YouAreGoingToDeleteRows: \"شما در حال حذف {count} ردیف هستید!\",\r\n    Login: \"وارد شوید!\",\r\n    LoginTitle: \"ورود به سیستم\",\r\n    SendCode:\"ارسال كد\",\r\n    ConnectionError: \"خطا در برقراری ارتباط\",\r\n    Retry: \"تلاش مجدد\",\r\n\r\n    Logout: \"خروج از سیستم\",\r\n    YouAreNotLoggedIn: \"ابتدا وارد سیستم شوید\",\r\n    IForgotMyPassword: \"رمز ورود را فراموش کردم\",\r\n    IDontHaveAccount: \"من حساب کاربری ندارم\",\r\n    SupportTel: \"تلفن پشتیبانی\",\r\n    PageNotFoundTitle: \"404\",\r\n    PageNotFoundDescription: \"The page you are looking for does not exits\",\r\n    Welcome: \"خوش آمدید!\",\r\n    WelcomeText: \"متن دلخواه برای راهنمایی کاربر\",\r\n\r\n    Return: \"بازگشت\",\r\n    LoginHere: \"همینجا وارد سایت شوید\",\r\n    WeCannotAuthenticateYou: \"ما نمی توانیم شما را احراز هویت کنیم\",\r\n    RedirectToLoginPage: \"انتقال به صفحه لاگین سایت\",\r\n    RedirectToHomePage: \"انتقال به صفحه اصلی سایت\",\r\n\r\n    Profile: \"پروفایل\",\r\n    Settings: \"تنظیمات\",\r\n    DefaultTheme: \"قالب پیش فرض\",\r\n    LightTheme: \"قالب روشن\",\r\n    DarkTheme: \"قالب تاریک\",\r\n};\r\n","const port = \"5001\";\r\nconst host = \"https://localhost:\" + port;\r\n\r\nexport const apiConfig = {\r\n    localeUrl: \"\",\r\n    baseUrl: host,\r\n    accountUrl: host + \"/account\",\r\n    menuUrl: host + \"/menu\",\r\n    tableDesignerUrl: host + \"/TableDesigner\",\r\n    userManegmentUrl: host + \"/userManagment\",\r\n};\r\n","import React from \"react\";\r\nimport classNames from \"classnames\";\r\nimport { Field } from \"react-final-form\";\r\n\r\nconst cssFormGroup = (size) => (size === \"sm\" ? \"mb-2\" : \"mb-3\");\r\nconst cssColFormLabel = (size) => (size === \"sm\" ? \"col-form-label col-form-label-sm\" : \"col-form-label\");\r\nconst cssFormLabel = (size) => (size === \"sm\" ? \"form-label form-label-sm\" : \"form-label\");\r\nconst cssFormSelect = (size) => (size === \"sm\" ? \"form-select form-select-sm\" : \"form-select\");\r\nconst cssFormControl = (size, readonly) =>\r\n    readonly\r\n        ? size === \"sm\"\r\n            ? \"form-control-plaintext form-control-plaintext-sm\"\r\n            : \"form-control-plaintext\"\r\n        : size === \"sm\"\r\n        ? \"form-control form-control-sm\"\r\n        : \"form-control\";\r\n\r\nconst settings = {\r\n    displayErrorsInTitle: true,\r\n};\r\n\r\nfunction toFormControlClassNames(size, readonly, controlClassName, { input, meta }) {\r\n    return classNames(cssFormControl(size, readonly), controlClassName, final_from_classes(input, meta));\r\n}\r\n\r\nfunction toSelectControlClassNames(size, readonly, controlClassName, { input, meta }) {\r\n    return classNames(cssFormSelect(size), controlClassName, final_from_classes(input, meta));\r\n}\r\n\r\nfunction final_from_classes(input, meta) {\r\n    return {\r\n        filled: !!input.value,\r\n        touched: !!meta.invalid,\r\n        invalid: !!meta.invalid,\r\n        valid: !!meta.valid,\r\n        modified: !!meta.modified,\r\n        pristine: !!meta.pristine,\r\n        dirty: !!meta.dirty,\r\n        visited: !!meta.visited,\r\n        submitFailed: !!meta.submitFailed,\r\n    };\r\n}\r\n\r\nexport const FinalField = ({\r\n    label,\r\n    labelSize,\r\n    name,\r\n    renderLabel,\r\n    renderInput,\r\n    children,\r\n    type,\r\n    defaultValue,\r\n    labelClassName,\r\n    controlClassName,\r\n    size,\r\n    readonly,\r\n    ...props\r\n}) => {\r\n    var c1 = labelSize * 1;\r\n    var c2 = 12 - c1;\r\n    var has_columns = !!c1 && c1 > 1;\r\n    var cnLabelColumn = `col-md-${c1} ${cssColFormLabel(size)}`;\r\n    var cnControlColumn = `col-md-${c2}`;\r\n\r\n    const convertToNumber = (value) => (isNaN(parseFloat(value)) ? null : parseFloat(value));\r\n\r\n    function doRenderLabel({ input, meta }) {\r\n        if (!!renderLabel) {\r\n            if (!has_columns) return renderLabel({ input, meta });\r\n            return <div className={`col-md-${c1}`}>{renderLabel({ input, meta })}</div>;\r\n        }\r\n        var cn = classNames(labelClassName, has_columns ? cnLabelColumn : cssFormLabel(size));\r\n        return !has_columns && !label ? null : <label className={cn}>{label}</label>;\r\n    }\r\n\r\n    function doRenderInput({ input, meta }) {\r\n        if (!!renderInput) {\r\n            if (!has_columns) return renderInput({ input, meta });\r\n            return <div className={cnControlColumn}>{renderInput({ input, meta })}</div>;\r\n        }\r\n        var cn = toFormControlClassNames(size, readonly, controlClassName, {\r\n            input,\r\n            meta,\r\n        });\r\n        var args = settings.displayErrorsInTitle ? { ...props, title: meta.error } : props;\r\n        if (readonly) args = { ...args, readOnly: true };\r\n        var inp = <input type={type} className={cn} {...input} {...args} data-meta={1 && JSON.stringify(meta, null, 2)} />;\r\n        return has_columns ? <div className={cnControlColumn}>{inp}</div> : inp;\r\n    }\r\n\r\n    function doRenderValidationError({ input, meta }) {\r\n        return (\r\n            meta.touched &&\r\n            meta.error && (\r\n                <span\r\n                    className={classNames(\"validation-error\", {\r\n                        \"col-12\": has_columns,\r\n                    })}\r\n                >\r\n                    {meta.error}\r\n                </span>\r\n            )\r\n        );\r\n    }\r\n\r\n    var attr = !!defaultValue ? { defaultValue } : {};\r\n    if (type === \"number\") attr = { ...attr, parse: convertToNumber };\r\n    return (\r\n        <Field name={name} component=\"input\" type={type} {...attr}>\r\n            {({ input, meta }) => (\r\n                <div\r\n                    className={classNames(cssFormGroup(size), {\r\n                        row: has_columns,\r\n                    })}\r\n                >\r\n                    {!!children ? (\r\n                        children({ input, meta })\r\n                    ) : (\r\n                        <>\r\n                            {doRenderLabel({ input, meta })}\r\n                            {doRenderInput({ input, meta })}\r\n                            {doRenderValidationError({ input, meta })}\r\n                        </>\r\n                    )}\r\n                </div>\r\n            )}\r\n        </Field>\r\n    );\r\n};\r\n\r\nexport const FinalTextArea = ({ name, label, labelSize, labelClassName, controlClassName, size, readonly, ...props }) => {\r\n    var c1 = labelSize * 1;\r\n    var c2 = 12 - c1;\r\n    var has_columns = !!c1 && c1 > 1;\r\n    var cnLabelColumn = `col-md-${c1} ${cssColFormLabel(size)}`;\r\n    var cnControlColumn = `col-md-${c2}`;\r\n\r\n    function doRenderLabel({ input, meta }) {\r\n        var cn = classNames(labelClassName, has_columns ? cnLabelColumn : cssFormLabel(size));\r\n        return !has_columns && !label ? null : <label className={cn}>{label}</label>;\r\n    }\r\n\r\n    function doRenderInput({ input, meta }) {\r\n        var cn = toFormControlClassNames(size, readonly, controlClassName, {\r\n            input,\r\n            meta,\r\n        });\r\n        var args = settings.displayErrorsInTitle ? { ...props, title: meta.error } : props;\r\n        var inp = <textarea className={cn} {...input} {...args}></textarea>;\r\n        return has_columns ? <div className={cnControlColumn}>{inp}</div> : inp;\r\n    }\r\n\r\n    function doRenderValidationError({ input, meta }) {\r\n        return (\r\n            meta.touched &&\r\n            meta.error && (\r\n                <span\r\n                    className={classNames(\"validation-error\", {\r\n                        \"col-12\": has_columns,\r\n                    })}\r\n                >\r\n                    {meta.error}\r\n                </span>\r\n            )\r\n        );\r\n    }\r\n\r\n    return (\r\n        <Field name={name} component=\"textarea\">\r\n            {({ input, meta }) => (\r\n                <div\r\n                    className={classNames(cssFormGroup(size), {\r\n                        row: has_columns,\r\n                    })}\r\n                >\r\n                    {doRenderLabel({ input, meta })}\r\n                    {doRenderInput({ input, meta })}\r\n                    {doRenderValidationError({ input, meta })}\r\n                </div>\r\n            )}\r\n        </Field>\r\n    );\r\n};\r\n\r\nexport const FinalSelect = ({\r\n    label,\r\n    labelSize,\r\n    className,\r\n    name,\r\n    values,\r\n    labelClassName,\r\n    controlClassName,\r\n    placeholder,\r\n    size,\r\n    readonly,\r\n    ...props\r\n}) => {\r\n    var c1 = labelSize * 1;\r\n    var c2 = 12 - c1;\r\n    var has_columns = !!c1 && c1 > 1;\r\n    var cnLabelColumn = `col-md-${c1} ${cssColFormLabel(size)}`;\r\n    var cnControlColumn = `col-md-${c2}`;\r\n\r\n    function my_control({ input, meta }) {\r\n        var options = !placeholder ? null : (\r\n            <option value=\"\" disabled>\r\n                {placeholder}\r\n            </option>\r\n        );\r\n        for (var i = 0; i < values.length; i++) {\r\n            var v = values[i];\r\n            var option = typeof v === \"string\" ? <option>{v}</option> : <option value={v.code}>{v.title}</option>;\r\n            options = options ? (\r\n                <>\r\n                    {options}\r\n                    {option}\r\n                </>\r\n            ) : (\r\n                option\r\n            );\r\n        }\r\n        var cn = toSelectControlClassNames(size, readonly, controlClassName, {\r\n            input,\r\n            meta,\r\n        });\r\n        var args = settings.displayErrorsInTitle ? { ...props, title: meta.error } : props;\r\n        return (\r\n            <select className={cn} {...input} {...args}>\r\n                {options}\r\n            </select>\r\n        );\r\n    }\r\n\r\n    function doRenderLabel({ input, meta }) {\r\n        var cn = classNames(labelClassName, has_columns ? cnLabelColumn : cssFormLabel(size));\r\n        return !has_columns && !label ? null : <label className={cn}>{label}</label>;\r\n    }\r\n\r\n    function doRenderInput({ input, meta }) {\r\n        var inp = my_control({ input, meta });\r\n        return has_columns ? <div className={cnControlColumn}>{inp}</div> : inp;\r\n    }\r\n\r\n    function doRenderValidationError({ input, meta }) {\r\n        return (\r\n            meta.touched &&\r\n            meta.error && (\r\n                <span\r\n                    className={classNames(\"validation-error\", {\r\n                        \"col-12\": has_columns,\r\n                    })}\r\n                >\r\n                    {meta.error}\r\n                </span>\r\n            )\r\n        );\r\n    }\r\n\r\n    return (\r\n        <Field name={name} component=\"select\">\r\n            {({ input, meta }) => (\r\n                <div\r\n                    className={classNames(cssFormGroup(size), {\r\n                        row: has_columns,\r\n                    })}\r\n                >\r\n                    {doRenderLabel({ input, meta })}\r\n                    {doRenderInput({ input, meta })}\r\n                    {doRenderValidationError({ input, meta })}\r\n                </div>\r\n            )}\r\n        </Field>\r\n    );\r\n};\r\n\r\nconst _Final_Check = ({ type, label, labelSize, name, values, inline, labelClassName, controlClassName, size, readonly, ...props }) => {\r\n    var c1 = labelSize * 1;\r\n    var c2 = 12 - c1;\r\n    var has_columns = !!c1 && c1 > 1;\r\n    var cnLabelColumn = `col-md-${c1} ${cssColFormLabel(size)}`;\r\n    var cnControlColumn = `col-md-${c2}`;\r\n\r\n    function doRenderLabel() {\r\n        var title = values ? label : null;\r\n        if (has_columns) return <span className={classNames(labelClassName, cnLabelColumn, \"pt-0\")}>{title}</span>;\r\n        return !title ? null : <span className={classNames(labelClassName, \"pe-2\")}>{title}</span>;\r\n    }\r\n\r\n    function doRenderControls() {\r\n        var c = null;\r\n        if (!values) {\r\n            c = (\r\n                <label\r\n                    className={classNames(\"form-check form-check-label\", {\r\n                        \"form-check-inline\": inline,\r\n                    })}\r\n                >\r\n                    <Field name={name} component=\"input\" type={type} className=\"form-check-input\" {...props} />\r\n                    <span className=\"form-check-label\">{label}</span>\r\n                </label>\r\n            );\r\n        } else {\r\n            for (var i = 0; i < values.length; i++) {\r\n                var item = values[i];\r\n                var code = typeof item === \"string\" ? item : item.code;\r\n                var title = typeof item === \"string\" ? item : item.title;\r\n                var x = (\r\n                    <label\r\n                        className={classNames(\"form-check form-check-label\", {\r\n                            \"form-check-inline\": inline,\r\n                        })}\r\n                    >\r\n                        <Field name={name} component=\"input\" type={type} value={code} className=\"form-check-input\" {...props} />\r\n                        <span className=\"form-check-label\">{title}</span>\r\n                    </label>\r\n                );\r\n                c = !c ? (\r\n                    x\r\n                ) : (\r\n                    <>\r\n                        {c}\r\n                        {x}\r\n                    </>\r\n                );\r\n            }\r\n        }\r\n        return has_columns ? <div className={cnControlColumn}>{c}</div> : c;\r\n    }\r\n\r\n    return (\r\n        <div className={classNames(cssFormGroup(size), { row: has_columns })}>\r\n            {doRenderLabel()}\r\n            {doRenderControls()}\r\n        </div>\r\n    );\r\n};\r\n\r\n//export const FinalCheck = ({ label, labelSize, name, values, inline, labelClassName, controlClassName, ...props }) => {\r\nexport const FinalCheck = ({ ...props }) => {\r\n    return _Final_Check({ type: \"checkbox\", ...props });\r\n};\r\n\r\nexport const FinalRadio = ({ ...props }) => {\r\n    return _Final_Check({ type: \"radio\", ...props });\r\n};\r\n\r\n//\r\n//\r\nexport const FinalSwitch = ({ type, label, labelSize, name, values, inline, labelClassName, controlClassName, size, readonly, ...props }) => {\r\n    var c1 = labelSize * 1;\r\n    var c2 = 12 - c1;\r\n    var has_columns = !!c1 && c1 > 1;\r\n    var cnLabelColumn = `col-md-${c1} ${cssColFormLabel(size)}`;\r\n    var cnControlColumn = `col-md-${c2}`;\r\n\r\n    function doRenderLabel() {\r\n        var title = values ? label : null;\r\n        if (has_columns) return <span className={classNames(labelClassName, cnLabelColumn, \"pt-0\")}>{title}</span>;\r\n        return !title ? null : <span className={classNames(labelClassName, \"pe-2\")}>{title}</span>;\r\n    }\r\n\r\n    function doRenderControls() {\r\n        var c = null;\r\n        if (!values) {\r\n            c = (\r\n                <label\r\n                    className={classNames(\"form-check form-check-label\", {\r\n                        \"form-check-inline\": inline,\r\n                    })}\r\n                >\r\n                    <Field name={name} component=\"input\" type={type} className=\"form-check-input\" {...props} />\r\n                    <span className=\"form-check-label\">{label}</span>\r\n                </label>\r\n            );\r\n        } else {\r\n            for (var i = 0; i < values.length; i++) {\r\n                var item = values[i];\r\n                var code = typeof item === \"string\" ? item : item.code;\r\n                var title = typeof item === \"string\" ? item : item.title;\r\n                var x = (\r\n                    <label\r\n                        className={classNames(\"form-check form-check-label\", {\r\n                            \"form-check-inline\": inline,\r\n                        })}\r\n                    >\r\n                        <Field name={name} component=\"input\" type={type} value={code} className=\"form-check-input\" {...props} />\r\n                        <span className=\"form-check-label\">{title}</span>\r\n                    </label>\r\n                );\r\n                c = !c ? (\r\n                    x\r\n                ) : (\r\n                    <>\r\n                        {c}\r\n                        {x}\r\n                    </>\r\n                );\r\n            }\r\n        }\r\n        return has_columns ? <div className={cnControlColumn}>{c}</div> : c;\r\n    }\r\n\r\n    return (\r\n        <div className={classNames(cssFormGroup(size), { row: has_columns })}>\r\n            {doRenderLabel()}\r\n            {doRenderControls()}\r\n        </div>\r\n    );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { apiConfig } from \"../../api/config\";\r\nimport { FinalField } from \"../../components/basic/final-form\";\r\n\r\nexport const Captcha = ({ counter }) => {\r\n    const captcha = React.createRef();\r\n    const [uid, setUID] = useState(Date.now());\r\n\r\n    function refreshCaptcha() {\r\n        setUID(Date.now());\r\n        captcha.current.focus();\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"middle gap-3\">\r\n                <FinalField\r\n                    name=\"captcha\"\r\n                    renderInput={({ input, meta }) => (\r\n                        <>\r\n                            <input\r\n                                ref={captcha}\r\n                                className=\"form-control ltr\"\r\n                                type=\"text\"\r\n                                maxLength=\"5\"\r\n                                autoComplete=\"off\"\r\n                                spellCheck=\"false\"\r\n                                placeholder=\"Security Code\"\r\n                                {...input}\r\n                            />\r\n                        </>\r\n                    )}\r\n                />\r\n\r\n                <div className=\"mb-3\">\r\n                    <img\r\n                        className=\"cur-pointer border rounded\"\r\n                        alt=\"Captcha\"\r\n                        src={`${apiConfig.baseUrl}/captcha?${uid}_${counter}`}\r\n                        onClick={refreshCaptcha}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n","function getCookie(name) {\r\n    const value = `; ${document.cookie}`;\r\n    const parts = value.split(`; ${name}=`);\r\n    if (parts.length === 2) return parts.pop().split(\";\").shift();\r\n}\r\n\r\nexport const settings = {\r\n    debugMode: !true,\r\n    projectId: \"project1\",\r\n    title: \"Project 1\",\r\n    supportTel: \"+(98)9124147738\",\r\n\r\n    missingTranslations: {},\r\n    logMissings: () => console.log(JSON.stringify(settings.missingTranslations, null, 2)),\r\n\r\n    getLanguageCode: () => getCookie(\"i18next\"),\r\n};\r\n\r\nexport default settings;\r\n","import { toast } from \"react-toastify\";\r\n\r\nexport const notify = {\r\n    error: (title, message, props) => {\r\n        if (title instanceof Error) {\r\n            var ex = title;\r\n            title = ex.message;\r\n        }\r\n        else if (title === \"object\" && title.response) {\r\n            const ex = title;\r\n            title = ex.response.data;\r\n            message = ex.toString();\r\n        }\r\n        if (!message) toast.error(title);\r\n        else toast.error(({ closeToast }) => <><h5>{title}</h5><small>{message}</small></>, props);\r\n    },\r\n\r\n    success: (title, message, props) => {\r\n        if (!message) toast.success(title);\r\n        else toast.success(({ closeToast }) => <><h5>{title}</h5><small>{message}</small></>, props);\r\n    },\r\n\r\n    info: (title, message, props) => {\r\n        if (!message) toast.info(title);\r\n        else toast.info(({ closeToast }) => <><h5>{title}</h5><small>{message}</small></>, props);\r\n    },\r\n\r\n    warning: (title, message, props) => {\r\n        if (!message) toast.info(title);\r\n        else toast.warning(({ closeToast }) => <><h5>{title}</h5><small>{message}</small></>, props);\r\n    },\r\n\r\n    dark: (title, message, props) => {\r\n        if (!message) toast.info(title);\r\n        else toast.dark(({ closeToast }) => <><h5>{title}</h5><small>{message}</small></>, props);\r\n    },\r\n\r\n    close: id => toast.dismiss(id),\r\n}","import axios from \"axios\";\r\nimport { messages } from \"../components/messages\";\r\nimport settings from \"../app/settings\";\r\nimport { apiConfig } from \"./config\";\r\n\r\nconst withCredentials = true;\r\n\r\nconst genericeResponseHandler = (response) => {\r\n    var data = response.data;\r\n    if (!data) throw new Error(\"invalid response!\");\r\n    if (!data.isSuccess) {\r\n        if (data.errorMessage === \"401\") throw newError(messages.Error401, \"401\");\r\n        if (data.errorMessage === \"403\") throw newError(messages.Error403, \"403\");\r\n        throw newError(data.errorMessage, \"error\");\r\n    }\r\n    return data.result;\r\n};\r\n\r\nfunction newError(message, name, stack) {\r\n    var ex = new Error(message);\r\n    if (!!name) ex.name = name;\r\n    if (!!stack) ex.stack = stack;\r\n    ex.stack = null;\r\n    return ex;\r\n}\r\n\r\nfunction translateError(ex) {\r\n    if (!ex) throw newError(messages.Unknown, \"Unknown\");\r\n    if (ex.response) {\r\n        if (ex.response.status === 401) throw newError(messages.Error401, \"401\");\r\n        if (ex.response.status === 403) throw newError(messages.Error403, \"403\");\r\n        if (ex.response.status === 404) throw newError(messages.Error404, \"404\");\r\n        if (ex.response.status === 405) throw newError(messages.Error405, \"404\");\r\n        if (ex.response.status === 500) throw newError(messages.Error500, \"500\");\r\n    }\r\n    if (ex instanceof Error) {\r\n        if (ex.name === \"401\" || ex.name === \"403\") throw ex;\r\n    }\r\n\r\n    var message = ex.message ? ex.message : ex.toString ? ex.toString() : ex;\r\n    var stack = ex.stack;\r\n\r\n    if (message === \"Network Error\") throw newError(messages.NetworkError, \"NetworkError\", stack);\r\n    if (message.startsWith(\"Failed to execute 'open' on 'XMLHttpRequest': Invalid URL\")) throw newError(messages.InvalidUrl, \"InvalidUrl\", stack);\r\n    throw newError(message, \"Error\");\r\n}\r\n\r\nfunction callAxios(method, url, data) {\r\n    return axios({\r\n        url,\r\n        data,\r\n        withCredentials,\r\n        method,\r\n        headers: {\r\n            authorization: \"Bearer \" + api.token,\r\n        },\r\n    })\r\n        .then(genericeResponseHandler)\r\n        .catch(translateError);\r\n}\r\n\r\nlet onUnauthorizeHandler = null;\r\nlet onForbiddenHandler = null;\r\n\r\nfunction dispatchUnauthorized(ex) {\r\n    //onUnauthorizedEvent.dispatch(ex);\r\n    if (onUnauthorizeHandler) onUnauthorizeHandler(ex);\r\n}\r\n\r\nfunction dispatchForbidden(ex) {\r\n    //onUnauthorizedEvent.dispatch(ex);\r\n    if (onForbiddenHandler) onForbiddenHandler(ex);\r\n}\r\n\r\n//\r\n//\r\n//\r\nexport const api = {\r\n    token: null,\r\n    expiry: 0,\r\n\r\n    onUnauthorized: (fn, ownerName) => {\r\n        onUnauthorizeHandler = fn;\r\n    },\r\n\r\n    onForbidden: (fn, ownerName) => {\r\n        onForbiddenHandler = fn;\r\n    },\r\n\r\n    call: (method, url, data) =>\r\n        new Promise((resolve, reject) => {\r\n            const handle_reject = (ex) => {\r\n                if (ex.name === \"401\") {\r\n                    dispatchUnauthorized(ex);\r\n                    ex.handled = true;\r\n                }\r\n                if (ex.name === \"403\") {\r\n                    dispatchForbidden(ex);\r\n                    ex.handled = true;\r\n                }\r\n                reject(ex);\r\n            };\r\n\r\n            const handle_resolve = (data) => {\r\n                resolve(data);\r\n            };\r\n\r\n            return callAxios(method, url, data)\r\n                .then(handle_resolve)\r\n                .catch((ex) => {\r\n                    if (ex.name !== \"401\") handle_reject(ex);\r\n                    else {\r\n                        callAxios(\"post\", apiConfig.accountUrl + \"/refresh/\" + settings.projectId)\r\n                            .then((result) => {\r\n                                api.token = result.token;\r\n                                api.expiry = result.expiry;\r\n                                callAxios(method, url, data).then(handle_resolve).catch(handle_reject);\r\n                            })\r\n                            .catch(handle_reject);\r\n                    }\r\n                });\r\n        }),\r\n\r\n    directCall: (method, url, data) =>\r\n        callAxios(method, url, data).catch((ex) => {\r\n            if (ex.name === \"401\") {\r\n                dispatchUnauthorized(ex);\r\n                ex.handled = true;\r\n            }\r\n            if (ex.name === \"403\") {\r\n                dispatchForbidden(ex);\r\n                ex.handled = true;\r\n            }\r\n            throw ex;\r\n        }),\r\n};\r\n","import settings from \"../app/settings\";\r\nimport { api } from \"./api\";\r\nimport { apiConfig } from \"./config\";\r\n\r\nexport const accountApi = {\r\n  login: ({ userName, password, captcha }) =>\r\n    api.directCall(\"post\", apiConfig.accountUrl + \"/login/\" + settings.projectId, { userName, password, captcha }),\r\n\r\n  userInfo: () => api.directCall(\"post\", apiConfig.accountUrl + \"/user-info/\" + settings.projectId),\r\n\r\n  profileInfo: () => api.directCall(\"get\", apiConfig.accountUrl + \"/profile-info/\" + settings.projectId),\r\n\r\n  updateUserProfile: (user) => api.directCall(\"put\", apiConfig.accountUrl + \"/update-user-profile\", user),\r\n\r\n  changePassword: (info) => api.directCall(\"put\", apiConfig.accountUrl + \"/change-password\", info),\r\n\r\n  forgotPassword: ({userName,captcha}) =>\r\n    api.directCall(\"post\", apiConfig.accountUrl + \"/forgot-password/\" + settings.projectId, { userName , captcha }),\r\n\r\n  logout: () => {\r\n    api.directCall(\"post\", apiConfig.accountUrl + \"/logout\");\r\n  },\r\n\r\n  refresh: () => api.refresh(settings.projectId),\r\n};\r\n","import React, { useState, createContext, useEffect, useContext } from \"react\";\r\nimport { accountApi } from \"../api/account-api\";\r\nimport { api } from \"../api/api\";\r\n\r\nexport const accountStatuses = {\r\n    Connecting: \"connecting\",\r\n    ConnectionFailed: \"connection-failed\",\r\n    Connected: \"connected\",\r\n    LoggedIn: \"logged-in\",\r\n    LoggedOut: \"logged-out\",\r\n    Forbidden: \"forbidden\",\r\n};\r\n\r\nexport const AccountContext = createContext();\r\n\r\nexport const useAccount = () => useContext(AccountContext);\r\n\r\nexport const AccountProvider = (props) => {\r\n    const initialData = { status: \"\", name: \"\" };\r\n    const [data, setData] = useState(initialData);\r\n\r\n    useEffect(() => {\r\n        const onLogoutEvent = (event) => {\r\n            if (event.key === \"sync-logout\") logout(false);\r\n        };\r\n\r\n        window.addEventListener(\"storage\", onLogoutEvent);\r\n        return () => window.removeEventListener(\"storage\", onLogoutEvent);\r\n    });\r\n\r\n    function logout(sync) {\r\n        if (!api.token) return;\r\n        if (sync) {\r\n            accountApi.logout();\r\n            api.token = null;\r\n            localStorage.setItem(\"sync-logout\", Date.now());\r\n        }\r\n        api.token = null;\r\n        account.setStatus(accountStatuses.LoggedOut);\r\n    }\r\n\r\n    const account = {\r\n        getToken: () => api.token,\r\n\r\n        getStatus: () => data.status,\r\n        setStatus: (value) => setData({ ...data, status: value }),\r\n\r\n        getName: () => data.name,\r\n        setName: (value) => setData({ ...data, name: value }),\r\n\r\n        isConnecting: () => account.getStatus() === accountStatuses.Connecting,\r\n        isConnectionFailed: () => account.getStatus() === accountStatuses.ConnectionFailed,\r\n        isConnected: () => account.getStatus() === accountStatuses.Connected || account.getStatus() === accountStatuses.LoggedIn,\r\n        isLoggedIn: () => account.getStatus() === accountStatuses.LoggedIn,\r\n        isLoggedOut: () => account.getStatus() === accountStatuses.LoggedOut,\r\n\r\n        setAsLoggedOut: () => account.setStatus(accountStatuses.LoggedOut),\r\n        setAsForbidden: () => account.setStatus(accountStatuses.Forbidden),\r\n\r\n        init: () => {\r\n            account.setStatus(accountStatuses.Connecting);\r\n            return accountApi\r\n                .userInfo()\r\n                .then((result) => {\r\n                    api.token = result.token;\r\n                    api.expiry = result.expiry;\r\n                    var x = {\r\n                        status: accountStatuses.Connected,\r\n                        name: result.displayName,\r\n                    };\r\n                    setData(x);\r\n                    return x;\r\n                })\r\n                .catch((ex) => {\r\n                    if (ex.name === \"401\") account.setStatus(accountStatuses.LoggedOut);\r\n                    else account.setStatus(accountStatuses.ConnectionFailed);\r\n                    throw ex;\r\n                });\r\n        },\r\n\r\n        login: ({ userName, password, captcha }) =>\r\n            accountApi.login({ userName, password, captcha }).then((result) => {\r\n                api.token = result.token;\r\n                api.expiry = result.expiry;\r\n                var x = {\r\n                    status: accountStatuses.LoggedIn,\r\n                    name: result.displayName,\r\n                };\r\n                setData(x);\r\n                return result;\r\n            }),\r\n\r\n        logout: () => logout(true),\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (!!account.getStatus()) return;\r\n        api.onUnauthorized(() => account.setAsLoggedOut());\r\n        api.onForbidden(() => account.setAsForbidden());\r\n        account.init();\r\n    });\r\n\r\n    return <AccountContext.Provider value={account}>{props.children}</AccountContext.Provider>;\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { Form } from \"react-final-form\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport * as bs from \"react-basic-design\";\r\nimport { Captcha } from \"./captcha\";\r\nimport { messages } from \"../../components/messages\";\r\nimport settings from \"../../app/settings\";\r\nimport { FinalField } from \"../../components/basic/final-form\";\r\nimport { notify } from \"../../components/basic/notify\";\r\nimport { useAccount } from \"../../app/account-context\";\r\n\r\nexport const LoginForm = ({ inline, ...props }) => {\r\n    const [captchaCounter, setCaptchaCounter] = useState(0);\r\n    const [loading, setLoading] = useState(false);\r\n    const history = useHistory();\r\n    const account = useAccount();\r\n\r\n    const onSubmit = (values) => {\r\n        if (!values.userName || values.userName.trim().length < 3) {\r\n            notify.error(messages.InvalidUserName);\r\n            return;\r\n        }\r\n        if (!values.password || values.password.trim().length < 3) {\r\n            notify.error(messages.InvalidPassword);\r\n            return;\r\n        }\r\n        if (!values.captcha || values.captcha.trim().length !== 5) {\r\n            notify.error(messages.InvalidCaptcha);\r\n            return;\r\n        }\r\n        //----\r\n        setLoading(true);\r\n        account\r\n            .login(values)\r\n            .then((result) => {\r\n                setCaptchaCounter(captchaCounter + 1);\r\n                setLoading(false);\r\n                if (inline) notify.info(messages.Welcome);\r\n                else history.push(\"/home\");\r\n            })\r\n            .catch((ex) => {\r\n                setCaptchaCounter(captchaCounter + 1);\r\n                setLoading(false);\r\n                notify.error(ex);\r\n            });\r\n    };\r\n    /*\r\n    const myValidator = BasicValidator((builder) =>\r\n        builder.object({\r\n            userName: builder.string().required().userName(),\r\n            password: builder.string().required().password(),\r\n            captcha: builder.string().required().length(5),\r\n        })\r\n    );*/\r\n\r\n    return (\r\n        <Form\r\n            initialValues={{}}\r\n            onSubmit={onSubmit}\r\n            render={({ handleSubmit, form, submitting, pristine, invalid, values, errors, ...args }) => (\r\n                <form onSubmit={handleSubmit} className=\"mx-auto ltr\" style={{ width: 280 }}>\r\n                    <div>\r\n                        {!inline && <h3 className=\"text-center text-primary\">{settings.title}</h3>}\r\n\r\n                        <FinalField name=\"userName\" placeholder=\"User name\" type=\"text\" autoComplete=\"off\" autoFocus />\r\n                        <FinalField name=\"password\" placeholder=\"Password\" type=\"password\" />\r\n                        <Captcha counter={captchaCounter} />\r\n\r\n                        <bs.Button color=\"primary\" type=\"submit\" className=\"w-100\" disabled={loading || submitting || invalid}>\r\n                            {loading && <div className=\"m-e-2 spinner-border spinner-border-sm\"></div>}\r\n                            <span>{messages.LoginTitle}</span>\r\n                        </bs.Button>\r\n\r\n                        {!inline && (\r\n                            <div className=\"text-center\">\r\n                                <p className=\"pt-3\">\r\n                                    <a className=\"text-decoration-none text-primary\" href=\"/account/forgot-password\">\r\n                                        {messages.IForgotMyPassword}\r\n                                    </a>\r\n                                </p>\r\n                                <p>\r\n                                    <a className=\"text-decoration-none text-primary\" href=\"/account/register\">\r\n                                        {messages.IDontHaveAccount}\r\n                                    </a>\r\n                                </p>\r\n                                <footer className=\"small mt-4\">\r\n                                    {messages.SupportTel}: <span className=\"ltr d-inline-block\">{settings.supportTel}</span>\r\n                                </footer>\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                </form>\r\n            )}\r\n        />\r\n    );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { Route } from \"react-router\";\r\n\r\nimport * as bd from \"react-basic-design\";\r\nimport * as icons from \"../assets/icons\";\r\nimport { messages } from \"../components/messages\";\r\nimport { LoginForm } from \"../views/account/login-form\";\r\nimport { notify } from \"../components/basic/notify\";\r\nimport { accountStatuses, useAccount } from \"./account-context\";\r\n\r\nexport const AzRoute = ({ component: Component, login: Login, render, ...rest }) => {\r\n    const account = useAccount();\r\n\r\n    const [loginHere, setLoginHere] = useState(false);\r\n\r\n    function reconnect() {\r\n        account.init().catch((ex) => !ex.handled && notify.error(ex));\r\n    }\r\n\r\n    const gotoLoginHere = () => setLoginHere(true);\r\n    const returnFromLoginHere = () => setLoginHere(false);\r\n\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={(props) => {\r\n                switch (account.getStatus()) {\r\n                    case \"\":\r\n                        return <></>;\r\n\r\n                    case accountStatuses.Connecting:\r\n                        return (\r\n                            <div className=\"middle h-100\">\r\n                                <div className=\"m-e-2 spinner-grow text-info spinner-grow-sm animation-delay--0s\"></div>\r\n                                <div className=\"m-e-2 spinner-grow text-info spinner-grow-sm animation-delay--1s\"></div>\r\n                                <div className=\"m-e-2 spinner-grow text-info spinner-grow-sm animation-delay--2s\"></div>\r\n                            </div>\r\n                        );\r\n\r\n                    case accountStatuses.ConnectionFailed:\r\n                        return (\r\n                            <div className=\"middle h-100\">\r\n                                <div className=\"text-center\">\r\n                                    <div className=\"text-danger p-3\">{messages.ConnectionError}</div>\r\n                                    <button className=\"btn btn-link btn-icon text-dark\" onClick={reconnect}>\r\n                                        <icons.Sync />\r\n                                        <span className=\"p-s-2\">{messages.Retry}</span>\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        );\r\n\r\n                    case accountStatuses.LoggedIn:\r\n                    case accountStatuses.Connected:\r\n                        return (\r\n                            <div className=\"h-100\">\r\n                                {!!render && render(props)}\r\n                                {!!Component && <Component {...props} />}\r\n                            </div>\r\n                        );\r\n\r\n                    case accountStatuses.LoggedOut:\r\n                        if (loginHere) {\r\n                            return (\r\n                                <main className=\"content middle h-100\">\r\n                                    <div>\r\n                                        <button className=\"btn btn-link btn-icon\" onClick={returnFromLoginHere}>\r\n                                            <icons.ArrowForward fill=\"#06c\" /> {messages.Return}\r\n                                        </button>\r\n                                        <LoginForm inline />\r\n                                    </div>\r\n                                </main>\r\n                            );\r\n                        } else {\r\n                            return (\r\n                                <div className=\"middle h-100\" style={{ maxHeight: 601 }}>\r\n                                    <div>\r\n                                        {messages.WeCannotAuthenticateYou}:\r\n                                        <dl className=\"pt-2\">\r\n                                            <dd className=\"m-0\">\r\n                                                <button className=\"btn btn-link btn-icon\" onClick={reconnect}>\r\n                                                    <icons.Sync fill=\"#06c\" /> {messages.Retry}\r\n                                                </button>\r\n                                            </dd>\r\n                                            <dd className=\"m-0\">\r\n                                                <button className=\"btn btn-link btn-icon\" onClick={gotoLoginHere}>\r\n                                                    <icons.Login fill=\"#06c\" /> {messages.LoginHere}\r\n                                                </button>\r\n                                            </dd>\r\n                                            <dd className=\"m-0\">\r\n                                                <a className=\"btn btn-link btn-icon\" href=\"/\">\r\n                                                    <icons.Home fill=\"#06c\" /> {messages.RedirectToHomePage}\r\n                                                </a>\r\n                                            </dd>\r\n                                        </dl>\r\n                                    </div>\r\n                                </div>\r\n                            );\r\n                        }\r\n\r\n                    case accountStatuses.Forbidden:\r\n                        return (\r\n                            <div className=\"middle h-100\">\r\n                                <div className=\"text-center\">\r\n                                    <div className=\"text-danger p-3\">\r\n                                        به علت محدوديت دسترسي\r\n                                        <br />\r\n                                        شما مجاز به مشاهده اين صفحه نمي باشيد\r\n                                    </div>\r\n                                    <bd.Button variant=\"text\" href=\"/\">\r\n                                        <icons.Home />\r\n                                        <span className=\"p-s-2\">انتقال به صفحه اصلي</span>\r\n                                    </bd.Button>\r\n                                </div>\r\n                            </div>\r\n                        );\r\n\r\n                    default:\r\n                        <h1>UNHANDLED STATUS: {account.getStatus()} </h1>;\r\n                }\r\n            }}\r\n        />\r\n    );\r\n};\r\n","import settings from \"../app/settings\";\r\nimport { api } from \"./api\";\r\nimport { apiConfig } from \"./config\";\r\n\r\nexport const menuApi = {\r\n    myMenu: () => api.call(\"post\", apiConfig.menuUrl + \"/my-menu/\" + settings.projectId),\r\n\r\n    load: (projectId) => api.call(\"post\", apiConfig.menuUrl + \"/load/\" + projectId),\r\n\r\n    insertApp: (data) => api.call(\"post\", apiConfig.menuUrl + \"/insert-app\", data),\r\n\r\n    updateApp: (data) => api.call(\"post\", apiConfig.menuUrl + \"/update-app\", data),\r\n\r\n    deleteApp: (list) =>\r\n        api.call(\r\n            \"post\",\r\n            apiConfig.menuUrl + \"/delete-app\",\r\n            list.map((x) => x.id)\r\n        ),\r\n\r\n    saveMenu: (projectId, data, insertMode) => {\r\n        var action = insertMode ? \"insert\" : \"update\";\r\n        return api.call(\"post\", `${apiConfig.menuUrl}/${action}-menu/${projectId}`, data);\r\n    },\r\n\r\n    deleteMenu: (projectId, id) => api.call(\"post\", apiConfig.menuUrl + `/delete-menu/${projectId}/${id}`, null),\r\n\r\n    saveFolder: (projectId, data, insertMode) => {\r\n        var action = insertMode ? \"insert\" : \"update\";\r\n        return api.call(\"post\", `${apiConfig.menuUrl}/${action}-folder/${projectId}`, data);\r\n    },\r\n\r\n    deleteFolder: (projectId, id) => api.call(\"post\", apiConfig.menuUrl + `/delete-folder/${projectId}/${id}`, null),\r\n};\r\n","import classNames from \"classnames\";\r\nimport React from \"react\";\r\n\r\nexport function Tiles({ className, children, ...props }) {\r\n    var cn = classNames(\"tilemenu\", className);\r\n    return (\r\n        <ul className={cn} {...props}>\r\n            {children}\r\n        </ul>\r\n    );\r\n}\r\n\r\nexport function Tile({ title, icon, className, selected, onClick, children, ...props }) {\r\n    const is_folder = !!children;\r\n    var cn = classNames({ \"mi-folder\": is_folder, \"mi-menu\": !is_folder });\r\n\r\n    if (icon) icon = <i className=\"size-md\">{icon}</i>;\r\n    if (title) title = <span className=\"mi-text\">{title}</span>;\r\n\r\n    return (\r\n        <li className={cn}>\r\n            <div className={classNames(\"mi-item\", { \"mi-selected\": selected })}>\r\n                {!is_folder && (\r\n                    <a href=\"#/\" onClick={onClick} className={className}>\r\n                        {icon}\r\n                        {title}\r\n                    </a>\r\n                )}\r\n\r\n                {is_folder && (\r\n                    <div onClick={onClick} className={className}>\r\n                        {icon}\r\n                        {title}\r\n                    </div>\r\n                )}\r\n            </div>\r\n\r\n            {is_folder && <Tiles>{children}</Tiles>}\r\n        </li>\r\n    );\r\n}\r\n","import classNames from \"classnames\";\r\nimport * as bd from \"react-basic-design\";\r\nimport { useField } from \"formik\";\r\nimport React from \"react\";\r\n\r\nexport const BasicInput = ({ id, label, labelSize, type, className, children, autoComplete, maxWidth, ...props }) => {\r\n    const [field, meta] = useField({ ...props, type });\r\n    if (!field.value) field.value = \"\";\r\n    var cnControl = classNames(\"form-control\", className, {\r\n        \"bd-border-error\": meta.error,\r\n    });\r\n    var cnErorr = \"bd-error\";\r\n\r\n    if (!type) type = \"text\";\r\n    if (!autoComplete) autoComplete = \"off\";\r\n    if (label && id === undefined) id = props.name;\r\n\r\n    let style = props.style;\r\n    if (maxWidth > 0) {\r\n        style = { ...style, maxWidth };\r\n    }\r\n\r\n    let field_comp = (\r\n        <>\r\n            <input id={id} type={type} className={cnControl} {...field} autoComplete={autoComplete} {...props} style={style} />\r\n            {children}\r\n            {meta.touched && meta.error ? <div className={cnErorr}>{meta.error}</div> : null}\r\n        </>\r\n    );\r\n\r\n    return (\r\n        <bd.FormRow label={label} labelSize={labelSize} htmlFor={id} className={className}>\r\n            {field_comp}\r\n        </bd.FormRow>\r\n    );\r\n};\r\n","import React, { useRef, useState } from \"react\";\r\nimport * as bd from \"react-basic-design\";\r\nimport * as yup from \"yup\";\r\n\r\nimport * as icons from \"../../../assets/icons\";\r\nimport { menuApi } from \"../../../api/menu-api\";\r\nimport { Form, Formik } from \"formik\";\r\nimport { notify } from \"../../../components/basic/notify\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { BasicInput } from \"../../../components/basic-form/basic-input\";\r\nimport classNames from \"classnames\";\r\n\r\nexport const EditFolder = ({ projectId, folder, onGoBack }) => {\r\n    const { t } = useTranslation();\r\n    const title = !folder.id ? \"New Folder\" : \"Edit Folder\";\r\n    const [loading, setLoading] = useState(false);\r\n    const [deleting, setDeleting] = useState(false);\r\n    const formRef = useRef();\r\n\r\n    const onSaveClick = (e) => {\r\n        var values = formRef.current.values;\r\n        setLoading(true);\r\n        var insertMode = !folder.id;\r\n        menuApi\r\n            .saveFolder(projectId, values, insertMode)\r\n            .then((x) => {\r\n                setLoading(false);\r\n                notify.info(t(\"changes-are-saved\"));\r\n                onGoBack(x);\r\n            })\r\n            .catch((ex) => {\r\n                setLoading(false);\r\n                notify.error(ex);\r\n            });\r\n    };\r\n\r\n    const onDeleteClick = (hide) => {\r\n        setDeleting(true);\r\n        menuApi\r\n            .deleteFolder(projectId, folder.id)\r\n            .then((x) => {\r\n                setDeleting(false);\r\n                hide();\r\n                notify.info(t(\"row-is-deleted\"));\r\n                onGoBack(null);\r\n            })\r\n            .catch((ex) => {\r\n                setDeleting(false);\r\n                notify.error(ex);\r\n            });\r\n    };\r\n\r\n    const deleteClickHandler = () => {\r\n        bd.msgbox(t(\"the-folder-will-be-deleted\"), null, (hide) => (\r\n            <>\r\n                <bd.Button variant=\"text\" color=\"primary\" onClick={hide} className=\"m-e-2\">\r\n                    {t(\"cancel\")}\r\n                </bd.Button>\r\n\r\n                <bd.Button variant=\"text\" color=\"primary\" disabled={deleting} onClick={() => onDeleteClick(hide)}>\r\n                    {deleting && <div className=\"m-e-2 spinner-border spinner-border-sm\"></div>}\r\n                    {t(\"delete\")}\r\n                </bd.Button>\r\n            </>\r\n        ));\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <bd.AppBar color position=\"sticky\" style={{ zIndex: 10 }} shadow={0} className=\"shadow-0 border-bottom\">\r\n                <bd.Toolbar className=\"container\">\r\n                    <bd.Button variant=\"icon\" size=\"md\" onClick={() => onGoBack()}>\r\n                        <icons.ArrowBackIos className=\"rtl-rotate-180\" />\r\n                    </bd.Button>\r\n\r\n                    <h5 className=\"appbar-title\">{title}</h5>\r\n\r\n                    <bd.Button color=\"primary\" type=\"submit\" disabled={loading || deleting} onClick={() => formRef.current.submitForm()}>\r\n                        {loading && <div className=\"m-e-2 spinner-border spinner-border-sm\"></div>}\r\n                        <span>{t(\"save-changes\")}</span>\r\n                    </bd.Button>\r\n\r\n                    <bd.Button\r\n                        className={classNames(\"m-s-2 edge-end\", {\r\n                            \"d-none\": !folder.id,\r\n                        })}\r\n                        type=\"button\"\r\n                        variant=\"outline\"\r\n                        disabled={loading || deleting}\r\n                        onClick={deleteClickHandler}\r\n                    >\r\n                        {deleting && <div className=\"m-e-2 spinner-border spinner-border-sm\"></div>}\r\n                        <span>{t(\"delete\")}</span>\r\n                    </bd.Button>\r\n                </bd.Toolbar>\r\n            </bd.AppBar>\r\n\r\n            <div className=\"container pt-4\">\r\n                <Formik\r\n                    initialValues={folder}\r\n                    validationSchema={yup.object({\r\n                        id: yup.string().required(\"Required\"),\r\n                        title: yup.string().required(\"Required\"),\r\n                    })}\r\n                    onSubmit={onSaveClick}\r\n                    innerRef={formRef}\r\n                >\r\n                    <Form style={{ maxWidth: 400 }}>\r\n                        <BasicInput name=\"id\" label={t(\"id\")} labelSize=\"4\" autoComplete=\"off\" autoFocus readOnly={!!folder.id} />\r\n                        <BasicInput name=\"title\" label={t(\"title\")} labelSize=\"4\" autoComplete=\"off\" autoFocus />\r\n                        <input type=\"submit\" className=\"d-none\" />\r\n                    </Form>\r\n                </Formik>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n","import React from \"react\";\r\nimport * as bd from \"react-basic-design\";\r\nimport { useField } from \"formik\";\r\n\r\nexport const BasicSwitch = ({ id, label, labelSize, size, className, children, color, ...props }) => {\r\n    const [field, meta] = useField({ ...props });\r\n    \r\n    if (label && id === undefined) id = props.name;\r\n\r\n    let field_comp = (\r\n        <>\r\n            <bd.Switch\r\n                id={id}\r\n                name={field.name}\r\n                model={field.value}\r\n                onChange={field.onChange}\r\n                onBlur={field.onBlur}\r\n                size={size ?? \"sm\"}\r\n                color={color ?? \"primary\"}\r\n                {...props}\r\n            />\r\n            {children}\r\n            {meta.touched && meta.error ? <div className=\"bd-error\">{meta.error}</div> : null}\r\n        </>\r\n    );\r\n\r\n    return (\r\n        <>\r\n        <bd.FormRow label={label} labelSize={labelSize} htmlFor={id} className={className}>\r\n            {field_comp}\r\n        </bd.FormRow>\r\n        </>\r\n    );\r\n};\r\n","import React, { useRef, useState } from \"react\";\r\nimport * as bd from \"react-basic-design\";\r\nimport * as yup from \"yup\";\r\n\r\nimport * as icons from \"../../../assets/icons\";\r\nimport { menuApi } from \"../../../api/menu-api\";\r\nimport { Form, Formik } from \"formik\";\r\nimport { notify } from \"../../../components/basic/notify\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { BasicInput } from \"../../../components/basic-form/basic-input\";\r\nimport classNames from \"classnames\";\r\nimport { BasicSwitch } from \"../../../components/basic-form/basic-switch\";\r\n\r\nexport const EditMenu = ({ projectId, menu, onGoBack }) => {\r\n    const { t } = useTranslation();\r\n    const title = !menu.id ? \"New Menu\" : \"Edit Menu\";\r\n    const [loading, setLoading] = useState(false);\r\n    const [deleting, setDeleting] = useState(false);\r\n    const formRef = useRef();\r\n\r\n    const onSaveClick = (e) => {\r\n        var values = formRef.current.values;\r\n        setLoading(true);\r\n        var insertMode = !menu.id;\r\n        menuApi\r\n            .saveMenu(projectId, values, insertMode)\r\n            .then((x) => {\r\n                setLoading(false);\r\n                notify.info(t(\"changes-are-saved\"));\r\n                onGoBack(x);\r\n            })\r\n            .catch((ex) => {\r\n                setLoading(false);\r\n                notify.error(ex);\r\n            });\r\n    };\r\n\r\n    const onDeleteClick = (hide) => {\r\n        setDeleting(true);\r\n        menuApi\r\n            .deleteMenu(projectId, menu.id)\r\n            .then((x) => {\r\n                setDeleting(false);\r\n                hide();\r\n                notify.info(t(\"row-is-deleted\"));\r\n                onGoBack(null);\r\n            })\r\n            .catch((ex) => {\r\n                setDeleting(false);\r\n                notify.error(ex);\r\n            });\r\n    };\r\n\r\n    const deleteClickHandler = () => {\r\n        bd.msgbox(t(\"the-menu-will-be-deleted\"), null, (hide) => (\r\n            <>\r\n                <bd.Button variant=\"text\" color=\"primary\" onClick={hide} className=\"m-e-2\">\r\n                    {t(\"cancel\")}\r\n                </bd.Button>\r\n\r\n                <bd.Button variant=\"text\" color=\"primary\" disabled={deleting} onClick={() => onDeleteClick(hide)}>\r\n                    {deleting && <div className=\"m-e-2 spinner-border spinner-border-sm\"></div>}\r\n                    {t(\"delete\")}\r\n                </bd.Button>\r\n            </>\r\n        ));\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <bd.AppBar position=\"sticky\" style={{ zIndex: 10 }} shadow={0} className=\"shadow-0 border-bottom\">\r\n                <bd.Toolbar className=\"container\">\r\n                    <bd.Button variant=\"icon\" size=\"md\" onClick={() => onGoBack()}>\r\n                        <icons.ArrowBackIos className=\"rtl-rotate-180\" />\r\n                    </bd.Button>\r\n\r\n                    <h5 className=\"appbar-title\">{title}</h5>\r\n\r\n                    <bd.Button color=\"primary\" type=\"submit\" disabled={loading || deleting} onClick={() => formRef.current.submitForm()}>\r\n                        {loading && <div className=\"m-e-2 spinner-border spinner-border-sm\"></div>}\r\n                        <span>{t(\"save-changes\")}</span>\r\n                    </bd.Button>\r\n\r\n                    <bd.Button\r\n                        className={classNames(\"m-s-2 edge-end\", {\r\n                            \"d-none\": !menu.id,\r\n                        })}\r\n                        type=\"button\"\r\n                        variant=\"outline\"\r\n                        disabled={loading || deleting}\r\n                        onClick={deleteClickHandler}\r\n                    >\r\n                        {deleting && <div className=\"m-e-2 spinner-border spinner-border-sm\"></div>}\r\n                        <span>{t(\"delete\")}</span>\r\n                    </bd.Button>\r\n                </bd.Toolbar>\r\n            </bd.AppBar>\r\n\r\n            <div className=\"container pt-4\">\r\n                <Formik\r\n                    initialValues={{ ...menu, openInNewTab: true }}\r\n                    validationSchema={yup.object({\r\n                        id: yup.string().required(\"Required\"),\r\n                        url: yup.string().required(\"Required\"),\r\n                        title: yup.string().required(\"Required\"),\r\n                    })}\r\n                    onSubmit={onSaveClick}\r\n                    innerRef={formRef}\r\n                >\r\n                    <Form style={{ maxWidth: 400 }}>\r\n                        <BasicInput name=\"id\" label={t(\"id\")} labelSize=\"4\" autoFocus readOnly={!!menu.id} />\r\n                        <BasicInput name=\"title\" label={t(\"title\")} labelSize=\"4\" />\r\n                        <BasicInput name=\"url\" label={t(\"url\")} labelSize=\"4\" className=\"ltr\" />\r\n                        <BasicInput name=\"applicationId\" label={t(\"application-id\")} labelSize=\"4\" className=\"ltr\" />\r\n\r\n                        <BasicSwitch name=\"openInNewTab\" label={t(\"open-in-new-tab\")} labelSize=\"4\" />\r\n                        <BasicInput name=\"sortOrder\" label={t(\"sort-order\")} labelSize=\"4\" type=\"number\" maxWidth={120} />\r\n                        <input type=\"submit\" className=\"d-none\" />\r\n                    </Form>\r\n                </Formik>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport * as bd from \"react-basic-design\";\r\n\r\nimport * as icons from \"../../../assets/icons\";\r\nimport { menuApi } from \"../../../api/menu-api\";\r\nimport { useAccount } from \"../../../app/account-context\";\r\nimport { Tile, Tiles } from \"../../../components/tilemenu/tiles\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { EditFolder } from \"./edit-folder\";\r\nimport { EditMenu } from \"./edit-menu\";\r\n\r\nexport function MenuApp() {\r\n    const { t } = useTranslation();\r\n    const [projects, setProjects] = useState([]);\r\n    const [app, setApp] = useState(null);\r\n    const [menuFolders, setMenuFolders] = useState([]);\r\n    const [menus, setMenus] = useState([]);\r\n    const [initialized, setInitialized] = useState(false);\r\n    const account = useAccount();\r\n    const [selectedFolder, setSelectedFolder] = useState(null);\r\n    const [selectedMenu, setSelectedMenu] = useState(null);\r\n    const [editMode, setEditMode] = useState(false);\r\n\r\n    const onRefresh = (app) =>\r\n        menuApi.load(!app ? \"not-assigned-app\" : app.id).then((x) => {\r\n            setProjects(x.projects);\r\n            setMenuFolders(x.menuFolders);\r\n            setMenus(x.menus);\r\n        });\r\n\r\n    const menuProjects = (\r\n        <bd.Menu>\r\n            {projects.map((x) => (\r\n                <bd.MenuItem key={x.id} onClick={(e) => changeApp(x)}>\r\n                    {x.title}\r\n                </bd.MenuItem>\r\n            ))}\r\n        </bd.Menu>\r\n    );\r\n\r\n    useEffect(() => {\r\n        if (!initialized && account.isConnected()) {\r\n            setInitialized(true);\r\n            onRefresh(app);\r\n        }\r\n    }, [account, app, initialized]);\r\n\r\n    function changeApp(newApp) {\r\n        setApp(newApp);\r\n        setMenuFolders([]);\r\n        setMenus([]);\r\n        onRefresh(newApp);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {!app && (\r\n                <div className=\"border-bottom\">\r\n                    <bd.Toolbar className=\"container\">\r\n                        <bd.Button variant=\"\" color=\"primary\" menu={menuProjects} className=\"m-auto\">\r\n                            {t(\"select-a-project\")} ...\r\n                        </bd.Button>\r\n                    </bd.Toolbar>\r\n                </div>\r\n            )}\r\n\r\n            {app && !editMode && (\r\n                <bd.AppBar color position=\"sticky\" style={{ zIndex: 10 }} shadow={0} className=\"shadow-0 border-bottom\">\r\n                    <div className=\"container\">\r\n                        <bd.Toolbar>\r\n                            <bd.Button variant=\"icon\" size=\"md\" onClick={() => setApp(null)}>\r\n                                <icons.ArrowBackIos className=\"rtl-rotate-180\" />\r\n                            </bd.Button>\r\n                            <h5 className=\"appbar-title\">{app.title}</h5>\r\n                        </bd.Toolbar>\r\n                    </div>\r\n                </bd.AppBar>\r\n            )}\r\n\r\n            {app && !editMode && menuFolders && (\r\n                <div className=\"container pt-4\">\r\n                    <Tiles className=\"\">\r\n                        {menuFolders\r\n                            .filter((x) => !x.parentId)\r\n                            .map((f) => (\r\n                                <Tile\r\n                                    key={f.id}\r\n                                    title={f.title}\r\n                                    selected={selectedFolder === f}\r\n                                    onClick={() => {\r\n                                        setSelectedFolder(f);\r\n                                        setSelectedMenu(null);\r\n                                        setEditMode(true);\r\n                                    }}\r\n                                >\r\n                                    {menus\r\n                                        .filter((x) => x.parentId === f.id)\r\n                                        .map((m) => (\r\n                                            <Tile\r\n                                                key={m.id}\r\n                                                title={m.title}\r\n                                                selected={selectedMenu === m}\r\n                                                onClick={() => {\r\n                                                    setSelectedFolder(null);\r\n                                                    setSelectedMenu(m);\r\n                                                    setEditMode(true);\r\n                                                }}\r\n                                            />\r\n                                        ))}\r\n                                    <Tile\r\n                                        icon={<icons.Add />}\r\n                                        title=\"New Menu\"\r\n                                        className=\"btn btn-secondary text-secondary bg-transparent  border border-secondary\"\r\n                                        onClick={() => {\r\n                                            setEditMode(true);\r\n                                            setSelectedFolder(null);\r\n                                            setSelectedMenu({ id: \"\", parentId: f.id, title: \"\" });\r\n                                        }}\r\n                                    ></Tile>\r\n                                </Tile>\r\n                            ))}\r\n\r\n                        <Tile\r\n                            icon={<icons.Add />}\r\n                            title=\"New Folder\"\r\n                            className=\"btn btn-outline-secondary\"\r\n                            onClick={() => {\r\n                                setEditMode(true);\r\n                                setSelectedFolder({ id: \"\", title: \"\" });\r\n                                setSelectedMenu(null);\r\n                            }}\r\n                        >\r\n                            <span></span>\r\n                        </Tile>\r\n                    </Tiles>\r\n                </div>\r\n            )}\r\n\r\n            {app && editMode && selectedFolder && (\r\n                <EditFolder\r\n                    projectId={app.id}\r\n                    folder={selectedFolder}\r\n                    onGoBack={(item) => {\r\n                        setEditMode(false);\r\n                        if (!!item && !selectedFolder.id) {\r\n                            setMenuFolders([...menuFolders, item]);\r\n                            setSelectedFolder(item);\r\n                        } else if (!!item && !!selectedFolder.id) {\r\n                            const list = [...menuFolders];\r\n                            const i = list.findIndex((x) => x.id === item.id);\r\n                            list[i] = item;\r\n                            setMenuFolders(list);\r\n                            setSelectedFolder(item);\r\n                        } else if (item === null) {\r\n                            const list = menuFolders.filter((x) => x.id !== selectedFolder.id);\r\n                            setMenuFolders(list);\r\n                        }\r\n                    }}\r\n                />\r\n            )}\r\n            {app && editMode && selectedMenu && (\r\n                <EditMenu\r\n                    projectId={app.id}\r\n                    menu={selectedMenu}\r\n                    onGoBack={(item) => {\r\n                        setEditMode(false);\r\n                        if (!!item && !selectedMenu.id) {\r\n                            setMenus([...menus, item]);\r\n                            setSelectedMenu(item);\r\n                        } else if (!!item && !!selectedMenu.id) {\r\n                            const list = [...menus];\r\n                            const i = list.findIndex((x) => x.id === item.id);\r\n                            list[i] = item;\r\n                            setMenus(list);\r\n                            setSelectedMenu(item);\r\n                        } else if (item === null) {\r\n                            const list = menus.filter((x) => x.id !== selectedMenu.id);\r\n                            setMenus(list);\r\n                        }\r\n                    }}\r\n                />\r\n            )}\r\n        </>\r\n    );\r\n}\r\n\r\nMenuApp.Appbar = {\r\n    title: \"maintain-menu\",\r\n    buttons: null,\r\n};\r\n","import React, { useRef, useEffect, useState } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport * as bd from \"react-basic-design\";\r\nimport * as icons from \"../../assets/icons\";\r\nimport * as yup from \"yup\";\r\nimport { BasicInput } from \"../../components/basic-form/basic-input\";\r\nimport { Form, Formik } from \"formik\";\r\nimport { notify } from \"../../components/basic/notify\";\r\nimport { useAccount } from \"../../app/account-context\";\r\nimport settings from \"../../app/settings\";\r\nimport { apiConfig } from \"../../api/config\";\r\nimport { messages } from \"../../components/messages\";\r\nimport { accountApi } from \"../../api/account-api\";\r\n\r\nexport const ForgotPassword = () => {\r\n  const [captchaCounter, setCaptchaCounter] = useState(0);\r\n  const [uid, setUID] = useState(Date.now());\r\n  const account = useAccount();\r\n  const { t } = useTranslation();\r\n  const formRef = useRef();\r\n  const [busy, setBusy] = useState(false);\r\n  const [verificatinKey, setVerificatinKey] = useState(null);\r\n  function refreshCaptcha() {\r\n    setUID(Date.now());\r\n  }\r\n\r\n  const onResetPasswordClick = (e) => {\r\n    if (!formRef.current) return false;\r\n    if (!formRef.current.isValid) return false;\r\n    var model = formRef.current.values;\r\n    setBusy(true);\r\n    alert(model.userName + model.captcha)\r\n    accountApi\r\n    .forgotPassword(model)\r\n    .then((x) => {\r\n      alert(x.Key);\r\n      setVerificatinKey(x.Key);\r\n      setBusy(false);\r\n    })\r\n    .catch((ex) => {\r\n      setBusy(false);\r\n      notify.error(ex);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Formik\r\n        initialValues={{\r\n          userName: \"\",\r\n          captcha: \"\",\r\n        }}\r\n        validationSchema={yup.object({\r\n          userName: yup.string().required(\"required\"),\r\n          captcha: yup.string().required(\"required\"),\r\n        })}\r\n        onSubmit={onResetPasswordClick}\r\n        innerRef={formRef}\r\n      >\r\n        <form style={{ width: \"250px\" }}>\r\n          <h3 className=\"text-center text-primary\">{settings.title}</h3>\r\n          <BasicInput placeholder=\"UserName\" name=\"userName\" autoComplete=\"off\" autoFocus />\r\n          <div className=\"middle gap-3\">\r\n            <BasicInput placeholder=\"Security Code\" name=\"captcha\" maxLength=\"5\" autoComplete=\"off\" />\r\n            <div className=\"mb-3\">\r\n              <img\r\n                className=\"cur-pointer border rounded\"\r\n                alt=\"Captcha\"\r\n                src={`${apiConfig.baseUrl}/captcha?${uid}_${captchaCounter}`}\r\n                onClick={refreshCaptcha}\r\n              />\r\n            </div>\r\n          </div>\r\n          <bd.Button className=\"w-100\" color=\"primary\" disabled={busy} onClick={() => formRef.current.submitForm()}>\r\n            {busy && <div className=\"m-e-2 spinner-border spinner-border-sm\"></div>}\r\n            <span>{messages.SendCode}</span>\r\n          </bd.Button>\r\n          <div className=\"pt-3 text-center\">\r\n          <a className=\"text-decoration-none text-primary\" href=\"/login\">\r\n          {messages.LoginTitle}\r\n          </a>\r\n          </div>\r\n        </form>\r\n      </Formik>\r\n    </>\r\n  );\r\n};\r\n\r\nForgotPassword.Appbar = {\r\n  title: \"forgot-password\",\r\n  buttons: null,\r\n};\r\n","import React from \"react\";\r\nimport { messages } from \"../../components/messages\";\r\n\r\nexport default function NotFound() {\r\n    return <div className=\"container-fluid h-100 d-flex justify-content-center align-items-center text-center\" >\r\n        <div className=\"p-4 text-warning \" style={{ maxWidth: 500, borderRadius: 10 }}>\r\n            <h2 className=\"text-dark\" style={{ fontWeight: 'bold', maxWidth: 500, borderRadius: 10, textShadow: '1px 1px 3px #000', fontSize: 80 }}>{messages.PageNotFoundTitle}</h2>\r\n            <p className=\"text-dark\" style={{ fontSize: 22 }}>{messages.PageNotFoundDescription}</p>\r\n        </div>\r\n    </div>;\r\n}\r\n","export default __webpack_public_path__ + \"static/media/procurement.ffddee6f.png\";","import { accountApi } from \"../api/account-api\";\r\nimport { api } from \"../api/api\";\r\nimport * as bd from \"react-basic-design\";\r\n\r\nconst authStatusTypes = {\r\n    Connecting: \"connecting\",\r\n    ConnectionFailed: \"connection-failed\",\r\n    Connected: \"connected\",\r\n    LoggedIn: \"logged-in\",\r\n    LoggedOut: \"logged-out\",\r\n};\r\n\r\nconst accountSubject = new bd.Subject({ pristine: true, application: {}, menuFolders: [], menus: [] }, \"acc\");\r\nconst statusSubject = new bd.Subject(authStatusTypes.Connecting, \"connection\");\r\n\r\nwindow.addEventListener(\"storage\", function (event) {\r\n    if (event.key === \"sync-logout\") accountManager.logout();\r\n});\r\n\r\nfunction logout(sync) {\r\n    if (!api.token) return;\r\n    accountSubject.next({ menuFolders: [], menus: [] });\r\n    if (sync) localStorage.setItem(\"sync-logout\", Date.now());\r\n    var res = accountApi.logout();\r\n    accountManager.status.set(authStatusTypes.LoggedOut);\r\n    return res;\r\n}\r\n\r\nexport const accountManager = {\r\n    status: {\r\n        all: () => {\r\n            var list = [];\r\n            for (var propName in authStatusTypes) {\r\n                list.push(authStatusTypes[propName]);\r\n            }\r\n            return list;\r\n        },\r\n\r\n        get: () => statusSubject.value,\r\n        set: (value) => {\r\n            if (statusSubject.value === value) return;\r\n            statusSubject.next(value);\r\n        },\r\n        setAsLoggedOut: () => accountManager.status.set(authStatusTypes.LoggedOut),\r\n\r\n        isConnecting: () => statusSubject.value === authStatusTypes.Connecting,\r\n        isConnectionFailed: () => statusSubject.value === authStatusTypes.ConnectionFailed,\r\n        isConnected: () => statusSubject.value === authStatusTypes.Connected || statusSubject.value === authStatusTypes.LoggedIn,\r\n        isLoggedIn: () => statusSubject.value === authStatusTypes.LoggedIn,\r\n        isLoggedOut: () => statusSubject.value === authStatusTypes.LoggedOut,\r\n        onChange: (fn, ownerName) => statusSubject.asObservable().subscribe(fn, ownerName + \".bind\"),\r\n        onConnected: (fn, ownerName) =>\r\n            statusSubject.asObservable().subscribe((x) => {\r\n                if (accountManager.status.isConnected() || accountManager.status.isLoggedIn()) fn();\r\n                return x;\r\n            }, ownerName + \".onConnected\"),\r\n    },\r\n\r\n    isLoggedin: () => !!api.token,\r\n\r\n    current: () => accountSubject.value,\r\n\r\n    bind: (fn, ownerName) => accountSubject.asObservable().subscribe(fn, ownerName + \".bind\"),\r\n\r\n    init: () => {\r\n        accountManager.status.set(authStatusTypes.Connecting);\r\n        return accountApi\r\n            .userInfo()\r\n            .then((result) => {\r\n                api.token = result.token;\r\n                api.expiry = result.expiry;\r\n                //settings.title = result.projectTitle;\r\n                var x = {\r\n                    displayName: result.displayName,\r\n                    menuFolders: result.menuFolders,\r\n                    menus: result.menus,\r\n                };\r\n                accountSubject.next(x);\r\n                accountManager.status.set(authStatusTypes.Connected);\r\n                return x;\r\n            })\r\n            .catch((ex) => {\r\n                if (ex.name === \"401\") accountManager.status.set(authStatusTypes.LoggedOut);\r\n                else accountManager.status.set(authStatusTypes.ConnectionFailed);\r\n                throw ex;\r\n            });\r\n    },\r\n\r\n    login: ({ userName, password, captcha }) =>\r\n        accountApi.login({ userName, password, captcha }).then((result) => {\r\n            api.token = result.token;\r\n            api.expiry = result.expiry;\r\n            //settings.title = result.projectTitle;\r\n            var x = {\r\n                displayName: result.displayName,\r\n                menuFolders: result.menuFolders,\r\n                menus: result.menus,\r\n            };\r\n            accountSubject.next(x);\r\n            accountManager.status.set(authStatusTypes.LoggedIn);\r\n            return result;\r\n        }),\r\n    logout: () => logout(true),\r\n};\r\n\r\nexport default accountManager;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport * as bs from \"react-basic-design\";\r\n\r\nimport procurement from \"../../../assets/bg/procurement.png\";\r\nimport { messages } from \"../../../components/messages\";\r\nimport accountManager from \"../../../app/account-manager\";\r\n\r\nexport function DashboardApp() {\r\n    const [, setUser] = useState({});\r\n\r\n    useEffect(() => accountManager.bind(setUser).remove, []);\r\n\r\n    return (\r\n        <div className=\"container p-3\">\r\n            <div className=\"row\">\r\n                <div className=\"col-lg-12\">\r\n                    <bs.Card>\r\n                        <bs.CardBody>\r\n                            <div className=\"d-flex p-3\">\r\n                                <img src={procurement} style={{ maxWidth: 200 }} alt=\"\" />\r\n                                <div className=\"flex-grow-1 p-3\">\r\n                                    <h2>{messages.Welcome}</h2>\r\n                                    <p>{messages.WelcomeText}</p>\r\n                                </div>\r\n                            </div>\r\n                        </bs.CardBody>\r\n                    </bs.Card>\r\n                    <div className=\"row my-3\">\r\n                        <div className=\"col-4\">\r\n                            <bs.Card>\r\n                                <bs.CardBody>INBOX</bs.CardBody>\r\n                            </bs.Card>\r\n                        </div>\r\n                        <div className=\"col-4\">\r\n                            <bs.Card>\r\n                                <bs.CardBody>ORDEERS</bs.CardBody>\r\n                            </bs.Card>\r\n                        </div>\r\n                        <div className=\"col-4\">\r\n                            <bs.Card>\r\n                                <bs.CardBody>ORDEERS</bs.CardBody>\r\n                            </bs.Card>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"col-lg-4\"></div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport * as bs from \"react-basic-design\";\r\n\r\nimport accountManager from \"../../../app/account-manager\";\r\n\r\nexport function InboxApp() {\r\n    const [, setUser] = useState({});\r\n\r\n    useEffect(() => accountManager.bind(setUser).remove, []);\r\n\r\n    return (\r\n        <div className=\"container p-3\">\r\n            <bs.Card>\r\n                <bs.CardBody>INBOX</bs.CardBody>\r\n            </bs.Card>\r\n        </div>\r\n    );\r\n}\r\n","import classNames from \"classnames\";\r\nimport React from \"react\";\r\n\r\nimport * as icons from \"../../assets/icons\";\r\n\r\nexport function TileMenu({ folders, menus, parent, onSelect, selectedFolder, selectedMenu, activeItem, ...props }) {\r\n    const parentId = !parent ? null : parent.id;\r\n\r\n    if (!folders) folders = [];\r\n    if (!menus) menus = [];\r\n    if (folders.length === 0 && menus.length === 0) return <></>;\r\n\r\n    var cn = null;\r\n    if (!parentId) {\r\n        cn = classNames(\"tilemenu\");\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <ul className={cn} {...props}>\r\n                {folders\r\n                    .filter((x) => x.parentId === parentId)\r\n                    .map((f) => (\r\n                        <MenuFolder\r\n                            key={f.id}\r\n                            folders={folders}\r\n                            menus={menus}\r\n                            folder={f}\r\n                            onSelect={onSelect}\r\n                            selectedFolder={selectedFolder}\r\n                            selectedMenu={selectedMenu}\r\n                            activeItem={activeItem}\r\n                        />\r\n                    ))}\r\n                {menus\r\n                    .filter((x) => x.parentId === parentId)\r\n                    .map((mi) => (\r\n                        <MenuItem\r\n                            key={mi.id}\r\n                            menu={mi}\r\n                            onSelect={onSelect}\r\n                            selectedFolder={selectedFolder}\r\n                            selectedMenu={selectedMenu}\r\n                            activeItem={activeItem}\r\n                        />\r\n                    ))}\r\n            </ul>\r\n        </>\r\n    );\r\n}\r\n\r\nfunction MenuFolder({ folders, menus, folder, onSelect, selectedFolder, selectedMenu, activeItem }) {\r\n    return (\r\n        <li className=\"mi-folder\">\r\n            <div className=\"mi-item\">\r\n                <div\r\n                    className={classNames({\r\n                        \"text-primary\": !folder.parentId,\r\n                        \"text-secondary-text\": !!folder.parentId,\r\n                    })}\r\n                >\r\n                    {!folder.parentId && (\r\n                        <i>\r\n                            <menuHelper.FolderIcon />\r\n                        </i>\r\n                    )}\r\n                    <span className=\"mi-text\">{folder.title}</span>\r\n                </div>\r\n            </div>\r\n            <TileMenu\r\n                folders={folders}\r\n                menus={menus}\r\n                parent={folder}\r\n                onSelect={onSelect}\r\n                selectedFolder={selectedFolder}\r\n                selectedMenu={selectedMenu}\r\n                activeItem={activeItem}\r\n            />\r\n        </li>\r\n    );\r\n}\r\n\r\nfunction MenuItem({ menu, onSelect, selectedMenu, activeItem }) {\r\n    return (\r\n        <li className=\"mi-menu\">\r\n            <div className=\"mi-item\">\r\n                <a\r\n                    href=\"#/\"\r\n                    onClick={(e) => {\r\n                        onSelect(null, menu);\r\n                        return false;\r\n                    }}\r\n                    className={classNames(\"\", {\r\n                        \"mi-selected\": selectedMenu && selectedMenu.id === menu.id,\r\n                        \"mi-active\": activeItem && activeItem.id === menu.id,\r\n                    })}\r\n                >\r\n                    <span className=\"mi-text\">{menu.title}</span>\r\n                    {!!menu.badgeText && <span className={classNames(\"mi-more\", menu.badgeCss)}> {menu.badgeText}</span>}\r\n                </a>\r\n            </div>\r\n        </li>\r\n    );\r\n}\r\n\r\nexport const menuHelper = {\r\n    iconSize: 18,\r\n    FolderIcon: () => <icons.Folder width={menuHelper.iconSize} height={menuHelper.iconSize} />,\r\n    CaretIcon: () => <icons.ChevronLeft width={menuHelper.iconSize} height={menuHelper.iconSize} />,\r\n    MenuIcon: () => <icons.Adjust width={menuHelper.iconSize * 0.6} height={menuHelper.iconSize * 0.6} />,\r\n\r\n    isOpen: ({ folder, folders, menus, selectedFolder, selectedMenu }) => {\r\n        if (!folder) return false;\r\n        if (!folder.parentId || folder === selectedFolder || (!!selectedMenu && folder.id === selectedMenu.parentId)) return true;\r\n        var subFolders = folders.filter((x) => x.parentId === folder.id);\r\n        for (var i = 0; i < subFolders.length; i++) {\r\n            var f = subFolders[i];\r\n            if (\r\n                menuHelper.isOpen({\r\n                    folder: f,\r\n                    folders,\r\n                    menus,\r\n                    selectedFolder,\r\n                    selectedMenu,\r\n                })\r\n            )\r\n                return true;\r\n        }\r\n        return false;\r\n    },\r\n};\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport * as bs from \"react-basic-design\";\r\n\r\nimport * as icons from \"../../../assets/icons\";\r\nimport { menuHelper, TileMenu } from \"../../../components/tilemenu\";\r\nimport { menuApi } from \"../../../api/menu-api\";\r\nimport { notify } from \"../../../components/basic/notify\";\r\nimport { AccountContext } from \"../../../app/account-context\";\r\n\r\nexport function LunchpadApp() {\r\n    const account = useContext(AccountContext);\r\n    const [menuFolders, setMenuFolders] = useState([]);\r\n    const [menus, setMenus] = useState([]);\r\n    const [user] = useState({});\r\n    const [activeItem, setActiveItem] = useState(null);\r\n    const [selectedFolder, setSelectedFolder] = useState(null);\r\n    const [selectedMenu, setSelectedMenu] = useState(null);\r\n\r\n    useEffect(() => {\r\n        if (account.isConnected()) {\r\n            menuApi\r\n                .myMenu()\r\n                .then((x) => {\r\n                    setMenuFolders(x.menuFolders);\r\n                    setMenus(x.menus);\r\n                })\r\n                .catch((ex) => notify(ex));\r\n        }\r\n    }, [account]);\r\n\r\n    const onSelectMenu = (folder, menu) => {\r\n        if (\r\n            menuHelper.isOpen({\r\n                folder,\r\n                folders: user.menuFolders,\r\n                menus: user.menus,\r\n                selectedFolder,\r\n                selectedMenu,\r\n            })\r\n        ) {\r\n            folder = folder.parentId == null ? null : user.menuFolders.find((x) => x.id === folder.parentId);\r\n        }\r\n        setSelectedFolder(folder);\r\n        setSelectedMenu(menu);\r\n        if (menu) {\r\n            setActiveItem(menu);\r\n            window.location.href = menu.url;\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"container p-3\">\r\n            <TileMenu\r\n                folders={menuFolders}\r\n                menus={menus}\r\n                onSelect={onSelectMenu}\r\n                selectedFolder={selectedFolder}\r\n                selectedMenu={selectedMenu}\r\n                activeItem={activeItem}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nLunchpadApp.Appbar = {\r\n    title: \"\",\r\n    buttons: (\r\n        <>\r\n            <bs.Button variant=\"icon\" color=\"default\">\r\n                <icons.Search />\r\n            </bs.Button>\r\n        </>\r\n    ),\r\n};\r\n","import React from \"react\";\r\nimport accountManager from \"../../../app/account-manager\";\r\nimport * as bs from \"react-basic-design\";\r\nimport settings from \"../../../app/settings\";\r\n\r\nexport default function StartupApp() {\r\n    function GotoSysMenu() {\r\n        window.location = accountManager.isLoggedin() ? \"/home\" : \"/login\";\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div\r\n                className=\"landing\"\r\n                style={{\r\n                    backgroundImage: \"url(/images/bg/bg1.jpg)\",\r\n                    backgroundSize: \"cover\",\r\n                }}\r\n            >\r\n                <bs.AppBar color=\"inherit\" shadow={0} className=\"border-bottom shadow-0\" style={{ backgroundColor: \"transparent\" }}>\r\n                    <div className=\"container\">\r\n                        <bs.Toolbar>\r\n                            <img\r\n                                src=\"/images/logo/logo.png\"\r\n                                alt=\"logo\"\r\n                                style={{\r\n                                    fontSize: \"2.2rem\",\r\n                                    width: \"1em\",\r\n                                    height: \"1em\",\r\n                                }}\r\n                            />\r\n\r\n                            <h5 className=\"appbar-title\">{settings.title}</h5>\r\n                        </bs.Toolbar>\r\n                    </div>\r\n                </bs.AppBar>\r\n\r\n                <div className=\"container\">\r\n                    <section\r\n                        className=\"banner py-5 px-30\"\r\n                        style={{\r\n                            maxWidth: 1000,\r\n                            minHeight: 500,\r\n                            fontSize: \"1.15rem\",\r\n                        }}\r\n                    >\r\n                        <div className=\"row\">\r\n                            <p className=\"col-lg-8\">\r\n                                <h2>Welcome</h2>\r\n                                We can help you to boost engagement with your visitors by ensuring that people have access to the information that\r\n                                they. A business concept is a statement that describes the reach and reason of existence of a given business idea.\r\n                            </p>\r\n                            <p className=\"col-lg-4 pt-5 text-center\">\r\n                                <bs.Button color=\"primary\" onClick={GotoSysMenu}>\r\n                                    Start Project\r\n                                </bs.Button>\r\n                            </p>\r\n                        </div>\r\n                    </section>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"features py-5\">\r\n                <section className=\"container\">\r\n                    <h2>FAQ</h2>\r\n                    <p>\r\n                        <h3>#1: What are you doing?</h3>\r\n                        <br />\r\n                        Sample text. Click to select the text box. Click again or double click to start editing the text.\r\n                    </p>\r\n\r\n                    <p>\r\n                        <h3>#2: What is your product features?</h3>\r\n                        <br />\r\n                        Sample text. Click to select the text box. Click again or double click to start editing the text.\r\n                    </p>\r\n                </section>\r\n            </div>\r\n\r\n            <footer className=\"page-footer\">\r\n                <section className=\"container\">\r\n                    <ul className=\"links\">\r\n                        <li>\r\n                            <a href=\"/\">Home</a>\r\n                        </li>\r\n                        <li>\r\n                            <a href=\"/#about\">About us</a>\r\n                        </li>\r\n                        <li>\r\n                            <a href=\"/#contact\">Contact us</a>\r\n                        </li>\r\n                    </ul>\r\n                    <p>&copy; 2021 All rights reserved for my componay</p>\r\n                </section>\r\n            </footer>\r\n        </>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport * as bd from \"react-basic-design\";\r\nimport settings from \"../../app/settings\";\r\nimport * as icons from \"../../assets/icons\";\r\nimport { useAccount } from \"../../app/account-context\";\r\n\r\nexport function MainLayout({ component: Comp, ...props }) {\r\n    const { t } = useTranslation();\r\n    const account = useAccount();\r\n\r\n    function logout() {\r\n        account.logout();\r\n        window.location = \"/login\";\r\n        return false;\r\n    }\r\n\r\n    const toggleDarkMode = () => bd.helper.setTheme(!bd.helper.isDarkMode() ? \"bd-dark\" : \"bd-light\");\r\n    const toggleRTL = () => bd.helper.setRTL(!bd.helper.getRTL());\r\n\r\n    const menuUser = (\r\n        <bd.Menu className=\"mt-n4 shadow-5\">\r\n            <bd.MenuItem href=\"/account/user-profile\">{t(\"User Profile\")}</bd.MenuItem>\r\n            {settings.debugMode && <bd.MenuItem onClick={settings.logMissings}>{t(\"Missing Translations\")}</bd.MenuItem>}\r\n            <div className=\"dropdown-divider\"></div>\r\n            <bd.MenuItem href=\"/user/settings\">{t(\"Settings\")}</bd.MenuItem>\r\n            <bd.MenuItem onClick={logout}>{t(\"Logout\")}</bd.MenuItem>\r\n        </bd.Menu>\r\n    );\r\n\r\n    let title = t(Comp?.Appbar?.title ?? settings.title);\r\n\r\n    return (\r\n        <div className=\"d-flex flex-column h-100\">\r\n            <bd.AppBar color=\"inherit\" shadow={0} className=\"border-bottom bg-shade-5\">\r\n                <div className=\"container\">\r\n                    <bd.Toolbar>\r\n                        {/* <bd.Button variant=\"icon\" color=\"default\" href=\"/home\">\r\n                            <icons.Home style={{ fontSize: \"1.65rem\" }} />\r\n                        </bd.Button> */}\r\n\r\n                        <a href=\"/home\">\r\n                            <img src={t(\"header-logo\")} alt=\"logo\" height={31} />\r\n                        </a>\r\n\r\n                        <h5 className=\"appbar-title\">{title}</h5>\r\n\r\n                        {Comp?.Appbar?.buttons}\r\n\r\n                        <bd.Button variant=\"text\" color=\"default\" onClick={toggleRTL} className=\"d-none d-md-block\">\r\n                            RTL\r\n                        </bd.Button>\r\n\r\n                        <bd.Button variant=\"icon\" color=\"default\" onClick={toggleDarkMode} className=\"d-none d-md-block\">\r\n                            <icons.DarkMode />\r\n                        </bd.Button>\r\n\r\n                        <bd.Badge value={2} overlapCircle className=\"bg-warning text-dark d-none d-sm-flex\">\r\n                            <bd.Button variant=\"icon\" color=\"default\" className=\"d-none d-sm-block\">\r\n                                <icons.NotificationsActive />\r\n                            </bd.Button>\r\n                        </bd.Badge>\r\n\r\n                        <bd.Button variant=\"icon\" color=\"default\" menu={menuUser} edge=\"end\" className=\"d-none d-sm-block\">\r\n                            <icons.AccountCircle />\r\n                        </bd.Button>\r\n                    </bd.Toolbar>\r\n                </div>\r\n            </bd.AppBar>\r\n\r\n            <main className=\"content flex-grow-1\">\r\n                <Comp {...props} />\r\n            </main>\r\n        </div>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport * as bs from \"react-basic-design\";\r\n\r\nexport function TablesApp() {\r\n    return (\r\n        <>\r\n            <bs.AppBar shadow={0} className=\"shadow-0 border-bottom\">\r\n                <div className=\"container\">\r\n                    <bs.Toolbar>\r\n                        <h5 className=\"appbar-title\">Maintain tables</h5>\r\n                    </bs.Toolbar>\r\n                </div>\r\n            </bs.AppBar>\r\n\r\n            <div className=\"py-4\">\r\n                <div className=\"container\">\r\n                    <h5 className=\"text-secondary-text\">Select a table ...</h5>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n","import settings from \"../app/settings\";\r\nimport { api } from \"./api\";\r\nimport { apiConfig } from \"./config\";\r\n\r\nexport const tableDesignerApi = {\r\n    getGroups: () => api.call(\"post\", `${apiConfig.tableDesignerUrl}/get-groups?projectId=${settings.projectId}`),\r\n\r\n    saveGroup: (group, insertMode) => {\r\n        var g = { ...group };\r\n        delete g.items;\r\n        var actionName = insertMode ? \"insert-group\" : \"update-group\";\r\n        return api.call(\"post\", `${apiConfig.tableDesignerUrl}/${actionName}?projectId=${settings.projectId}`, g);\r\n    },\r\n\r\n    deleteGroup: (groupId) => {\r\n        return api.call(\"post\", `${apiConfig.tableDesignerUrl}/delete-group?projectId=${settings.projectId}&groupId=${groupId}`);\r\n    },\r\n\r\n    getTable: (tableName) =>\r\n        api.call(\"post\", `${apiConfig.tableDesignerUrl}/get-table?projectId=${settings.projectId}&tableName=${tableName}`),\r\n\r\n    saveTable: (groupId, table, insertMode) => {\r\n        var tb = { ...table };\r\n        var actionName = insertMode ? \"insert-table\" : \"update-table\";\r\n        return api.call(\"post\", `${apiConfig.tableDesignerUrl}/${actionName}?projectId=${settings.projectId}&groupId=${groupId}`, tb);\r\n    },\r\n\r\n    deleteTable: (tableName) => {\r\n        return api.call(\"post\", `${apiConfig.tableDesignerUrl}/delete-table?projectId=${settings.projectId}&tableName=${tableName}`);\r\n    },\r\n\r\n    schemaColumn: (tableName) => {\r\n        return api.call(\"post\", `${apiConfig.tableDesignerUrl}/schema-columns?tableName=${tableName}`);\r\n    },\r\n\r\n    // saveColumn: (tableName, column, insertMode) => {\r\n    //     var actionName = insertMode ? \"insert-column\" : \"update-column\";\r\n    //     return api.call(\"post\", `${apiConfig.tableDesignerUrl}/${actionName}?projectId=${settings.projectId}&tableName=${tableName}`, column);\r\n    // },\r\n\r\n    // deleteColumn: (columnId) => {\r\n    //     return api.call(\"post\", `${apiConfig.tableDesignerUrl}/delete-column?id=${columnId}`);\r\n    // },\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport * as bs from \"react-basic-design\";\r\n\r\nimport accountManager from \"../../../app/account-manager\";\r\n\r\nimport \"./index.scss\";\r\nimport classNames from \"classnames\";\r\nimport { tableDesignerApi } from \"../../../api/table-designer-api\";\r\nimport SvgArrowBackIos from \"../../../assets/icons/ArrowBackIos\";\r\nimport SvgFolder from \"../../../assets/icons/Folder\";\r\nimport SvgEdit from \"../../../assets/icons/Edit\";\r\nimport SvgInsertDriveFile from \"../../../assets/icons/InsertDriveFile\";\r\n\r\nexport function FormDesignerApp() {\r\n    const [group, setGroup] = useState(null);\r\n    const [form, setForm] = useState(null);\r\n\r\n    function goBack() {\r\n        setGroup(null);\r\n        setForm(null);\r\n    }\r\n\r\n    function refresh() {\r\n        goBack();\r\n        tableDesignerApi.menu();\r\n    }\r\n\r\n    useEffect(\r\n        () =>\r\n            accountManager.status.onConnected(function () {\r\n                refresh();\r\n            }).remove\r\n    );\r\n\r\n    return (\r\n        <>\r\n            <bs.AppBar shadow={0} className=\"shadow-0 border-bottom\">\r\n                <div className=\"container\">\r\n                    <bs.Toolbar>\r\n                        {(group || form) && (\r\n                            <bs.Button variant=\"icon\" onClick={goBack} size=\"md\">\r\n                                <SvgArrowBackIos />\r\n                            </bs.Button>\r\n                        )}\r\n                        <h5 className=\"appbar-title\">Form Designer</h5>\r\n\r\n                        <bs.Button variant=\"icon\">\r\n                            <SvgFolder />\r\n                        </bs.Button>\r\n                    </bs.Toolbar>\r\n                </div>\r\n            </bs.AppBar>\r\n\r\n            <div className={classNames(\"container\", { \"d-none\": group || form })}>\r\n                <ul className=\"tiles\">\r\n                    <li>\r\n                        <h5>\r\n                            Group 1\r\n                            <bs.Button\r\n                                variant=\"text\"\r\n                                size=\"sm\"\r\n                                className=\"mx-2\"\r\n                                color=\"secondary\"\r\n                                onClick={() => {\r\n                                    setGroup({ title: \"G1\" });\r\n                                    return false;\r\n                                }}\r\n                            >\r\n                                <SvgEdit />\r\n                                Edit Group\r\n                            </bs.Button>\r\n                            <bs.Button variant=\"text\" size=\"sm\" color=\"secondary\">\r\n                                <SvgInsertDriveFile />\r\n                                New Form\r\n                            </bs.Button>\r\n                        </h5>\r\n                        <ul>\r\n                            <li>\r\n                                <a\r\n                                    href=\"#Form1\"\r\n                                    onClick={() => {\r\n                                        setForm({ title: \"Form 1\" });\r\n                                        return false;\r\n                                    }}\r\n                                >\r\n                                    Form 1\r\n                                </a>\r\n                            </li>\r\n                            <li>\r\n                                <a href=\"#Form2\">Form 2</a>\r\n                            </li>\r\n                            <li>\r\n                                <a href=\"#Form3\">Form 3</a>\r\n                            </li>\r\n                        </ul>\r\n                    </li>\r\n                    <li>\r\n                        <h5>Group B</h5>\r\n                        <ul>\r\n                            <li>\r\n                                <a href=\"/#\">Form B-1</a>\r\n                            </li>\r\n                            <li>\r\n                                <a href=\"/#\">Form B-2</a>\r\n                            </li>\r\n                            <li>\r\n                                <a href=\"/#\">Form B-3</a>\r\n                            </li>\r\n                        </ul>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n\r\n            {group && <div className=\"container\">Edit {group.title}</div>}\r\n\r\n            {form && <div className=\"container\">Edit {form.title}</div>}\r\n        </>\r\n    );\r\n}\r\n","import React, { useRef, useState } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nimport * as bd from \"react-basic-design\";\r\n\r\nimport { messages } from \"../../../components/messages\";\r\nimport classNames from \"classnames\";\r\nimport { tableDesignerApi } from \"../../../api/table-designer-api\";\r\nimport { notify } from \"../../../components/basic/notify\";\r\nimport * as icons from \"../../../assets/icons\";\r\nimport { Form, Formik } from \"formik\";\r\nimport { BasicInput } from \"../../../components/basic-form/basic-input\";\r\nimport * as yup from \"yup\";\r\n\r\n//\r\nexport function TableDesignerEditGroup({ group, onChanged, onGoBack }) {\r\n    const { t } = useTranslation();\r\n    const [loading, setLoading] = useState(false);\r\n    const [deleting, setDeleting] = useState(false);\r\n    const formRef = useRef();\r\n\r\n    const onSaveClick = (e) => {\r\n        var values = formRef.current.values;\r\n\r\n        setLoading(true);\r\n        var insertMode = !group.id;\r\n        tableDesignerApi\r\n            .saveGroup(values, insertMode)\r\n            .then((x) => {\r\n                setLoading(false);\r\n                notify.info(messages.ChangesAreSaved);\r\n                x.items = group.items ? group.items : [];\r\n                onChanged(x);\r\n            })\r\n            .catch((ex) => {\r\n                setLoading(false);\r\n                notify.error(ex);\r\n            });\r\n    };\r\n\r\n    const onDeleteClick = (hide) => {\r\n        setDeleting(true);\r\n        tableDesignerApi\r\n            .deleteGroup(group.id)\r\n            .then((x) => {\r\n                setLoading(false);\r\n                hide();\r\n                notify.info(messages.RowIsDeleted);\r\n                onChanged(null);\r\n            })\r\n            .catch((ex) => {\r\n                setLoading(false);\r\n                notify.error(ex);\r\n            });\r\n    };\r\n\r\n    const deleteClickHandler = () => {\r\n        bd.msgbox(t(\"delete-group\"), t(\"you-are-going-to-delete-group\"), (hide) => (\r\n            <>\r\n                <bd.Button variant=\"text\" color=\"primary\" onClick={hide} className=\"m-e-2\">\r\n                    {t(\"cancel\")}\r\n                </bd.Button>\r\n\r\n                <bd.Button variant=\"text\" color=\"primary\" disabled={deleting} onClick={() => onDeleteClick(hide)}>\r\n                    {deleting && <div className=\"m-e-2 spinner-border spinner-border-sm\"></div>}\r\n                    {t(\"delete\")}\r\n                </bd.Button>\r\n            </>\r\n        ));\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div className=\"border-bottom bg-gray-5 mb-3\">\r\n                <bd.Toolbar className=\"container\">\r\n                    <bd.Button variant=\"icon\" onClick={onGoBack} size=\"md\" edge=\"start\" className=\"m-e-2\">\r\n                        <icons.ArrowBackIos className=\"rtl-rotate-180\" />\r\n                    </bd.Button>\r\n\r\n                    <h5>\r\n                        {t(\"edit-group\")}: <b className=\"text-primary-text\">{group.title}</b>\r\n                    </h5>\r\n\r\n                    <div className=\"flex-grow-1\" />\r\n\r\n                    <bd.Button color=\"primary\" type=\"submit\" disabled={loading || deleting} onClick={() => formRef.current.submitForm()}>\r\n                        {loading && <div className=\"m-e-2 spinner-border spinner-border-sm\"></div>}\r\n                        <span>{t(\"save-group\")}</span>\r\n                    </bd.Button>\r\n\r\n                    <bd.Button\r\n                        className={classNames(\"m-s-2 edge-end\", {\r\n                            \"d-none\": !group.id,\r\n                        })}\r\n                        type=\"button\"\r\n                        variant=\"outline\"\r\n                        disabled={loading || deleting || (group.items && group.items.length)}\r\n                        onClick={deleteClickHandler}\r\n                    >\r\n                        {deleting && <div className=\"m-e-2 spinner-border spinner-border-sm\"></div>}\r\n                        <span>{t(\"delete\")}</span>\r\n                    </bd.Button>\r\n                </bd.Toolbar>\r\n            </div>\r\n\r\n            <div className=\"container\">\r\n                <Formik\r\n                    initialValues={group}\r\n                    validationSchema={yup.object({\r\n                        title: yup.string().min(3, t(\"msg-too-short\")).max(100, t(\"msg-too-long\")).required(\"Required\"),\r\n                    })}\r\n                    onSubmit={onSaveClick}\r\n                    innerRef={formRef}\r\n                >\r\n                    <Form style={{ maxWidth: 400 }}>\r\n                        <BasicInput name=\"title\" label={t(\"group-title\")} labelSize=\"4\" autoFocus />\r\n                    </Form>\r\n                </Formik>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n","import React, { ReactNode, useState } from \"react\";\r\nimport { Modal, TabContainer, TabContent, TabPane } from \"react-bootstrap\";\r\nimport * as icons from \"../../assets/icons\";\r\nimport * as bd from \"react-basic-design\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\ninterface TableTitlebarProps {\r\n    tableApi?: any;\r\n    title?: string;\r\n    color?: \"\" | \"primary\" | \"secondary\";\r\n    buttons?: ReactNode;\r\n    fixed?: boolean;\r\n    expanded?: boolean;\r\n    hideSearch?: boolean;\r\n    hideSettings?: boolean;\r\n    children?: any;\r\n    [x: string]: any;\r\n}\r\n\r\nexport function TableTitlebar({\r\n    tableApi,\r\n    title,\r\n    color,\r\n    fixed,\r\n    expanded,\r\n    buttons,\r\n    hideSearch,\r\n    hideSettings,\r\n    children,\r\n    ...props\r\n}: TableTitlebarProps) {\r\n    const { t } = useTranslation();\r\n    const [showSettings, setShowSettings] = useState(false);\r\n\r\n    return (\r\n        <>\r\n            <bd.Panel\r\n                title={title}\r\n                size=\"md\"\r\n                fixed={fixed}\r\n                expanded={expanded}\r\n                controls={\r\n                    <>\r\n                        {buttons}\r\n\r\n                        {!hideSearch && (\r\n                            <input\r\n                                className=\"form-control py-1 \"\r\n                                value={tableApi.state.globalFilter || \"\"}\r\n                                onChange={(e: any) => tableApi.setGlobalFilter(e.target.value)}\r\n                                style={{ width: 150 }}\r\n                                placeholder={t(\"search...\")}\r\n                            />\r\n                        )}\r\n\r\n                        {!hideSettings && (\r\n                            <bd.Button variant=\"icon\" color={color} size=\"md\" edge=\"end\" onClick={() => setShowSettings(true)}>\r\n                                <icons.Settings />\r\n                            </bd.Button>\r\n                        )}\r\n                    </>\r\n                }\r\n            >\r\n                {children}\r\n            </bd.Panel>\r\n\r\n            <SettingsDialog show={showSettings} setShow={setShowSettings} tableApi={tableApi} />\r\n        </>\r\n    );\r\n}\r\n\r\nfunction SettingsDialog({ show, setShow, tableApi }: any) {\r\n    const { t } = useTranslation();\r\n    const columns = tableApi.columns.filter((x: any) => !!x.accessor);\r\n\r\n    return (\r\n        <Modal show={show} fullscreen=\"md-down\" onHide={() => setShow(false)}>\r\n            <div className=\"shadow-10\">\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>{t(\"table-settings\")}</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body className=\"p-0\">\r\n                    <TabContainer defaultActiveKey=\"columns\">\r\n                        <div className=\"border-bottom\">\r\n                            <div>\r\n                                <bd.TabStrip>\r\n                                    <bd.TabStripItem eventKey=\"columns\">Columns</bd.TabStripItem>\r\n                                    <bd.TabStripItem eventKey=\"groups\">Groups</bd.TabStripItem>\r\n                                </bd.TabStrip>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div>\r\n                            <TabContent>\r\n                                <TabPane eventKey=\"columns\" className=\"px-2\">\r\n                                    <div className=\"text-center pt-2\">\r\n                                        <bd.Button\r\n                                            variant=\"text\"\r\n                                            color=\"primary\"\r\n                                            onClick={() => columns.forEach((x: any) => x.toggleHidden(false))}\r\n                                        >\r\n                                            <icons.DoneAll />\r\n                                            {t(\"check-all\")}\r\n                                        </bd.Button>\r\n                                        <bd.Button\r\n                                            variant=\"text\"\r\n                                            color=\"primary\"\r\n                                            onClick={() => columns.forEach((x: any) => x.toggleHidden(true))}\r\n                                        >\r\n                                            <icons.CheckBoxOutlineBlank />\r\n                                            {t(\"uncheck-all\")}\r\n                                        </bd.Button>\r\n                                    </div>\r\n\r\n                                    <bd.List dense variant=\"menu\" className=\"border-0 m-0\">\r\n                                        {columns.map((x: any) => (\r\n                                            <bd.ListItem\r\n                                                key={x.id}\r\n                                                primary={x.Header}\r\n                                                controls={<bd.Toggle color=\"primary\" model={x.isVisible} />}\r\n                                                onClick={() => x.toggleHidden()}\r\n                                            />\r\n                                        ))}\r\n                                    </bd.List>\r\n                                </TabPane>\r\n\r\n                                <TabPane eventKey=\"groups\" className=\"px-2\">\r\n                                    <div className=\"row gx-1\">\r\n                                        <div className=\"col-6\">\r\n                                            <bd.List dense variant=\"menu\" className=\"border-0 m-0\">\r\n                                                <bd.ListItem variant=\"text\" primary={t(\"all-columns\")} className=\"fw-bold\" />\r\n                                                {columns.map((x: any) => (\r\n                                                    <bd.ListItem\r\n                                                        variant={x.canGroupBy && !x.isGrouped ? \"menu\" : \"text\"}\r\n                                                        key={x.id}\r\n                                                        icon={<icons.Functions />}\r\n                                                        primary={x.Header}\r\n                                                        style={!x.canGroupBy || x.isGrouped ? { opacity: 0.5 } : {}}\r\n                                                        onClick={() => (x.canGroupBy && !x.isGrouped ? tableApi.toggleGroupBy(x.id) : null)}\r\n                                                    />\r\n                                                ))}\r\n                                            </bd.List>\r\n                                        </div>\r\n                                        <div className=\"col-6\">\r\n                                            <bd.List dense variant=\"menu\" className=\"border-0 m-0\">\r\n                                                <bd.ListItem variant=\"text\" primary={t(\"selected-columns\")} className=\"fw-bold\" />\r\n                                                {columns\r\n                                                    .filter((x: any) => x.isGrouped)\r\n                                                    .map((x: any) => (\r\n                                                        <bd.ListItem\r\n                                                            key={x.id}\r\n                                                            icon={<icons.Delete />}\r\n                                                            primary={x.Header}\r\n                                                            onClick={() => tableApi.toggleGroupBy(x.id)}\r\n                                                        />\r\n                                                    ))}\r\n                                            </bd.List>\r\n                                        </div>\r\n                                    </div>\r\n                                </TabPane>\r\n                            </TabContent>\r\n                        </div>\r\n                    </TabContainer>\r\n                </Modal.Body>\r\n            </div>\r\n        </Modal>\r\n    );\r\n}\r\n","/*\r\n  columns\r\n\r\n    readOnly: boolean\r\n    readOnly: (row) => row.values.myField < 10\r\n            \r\n    nullValue: 'NULL'\r\n            \r\n    Cell:\r\n        \r\n    getDisplayValue: (row) => string\r\n\r\n    display: '' | text | email | url | number | amount | textarea | check | switch | select | shamsi\r\n\r\n    validValues: 'A, B, C'\r\n    validValues: '1:one, 2:two, 3:three'\r\n    validValues: [ {code:'1', title:'one'}, {code:'2', title:'two'}, ...]\r\n    validValues: (row, column) => string | []\r\n\r\n*/\r\nimport React from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport * as bd from \"react-basic-design\";\r\nimport * as icons from \"../../assets/icons\";\r\nimport classNames from \"classnames\";\r\n\r\n//\r\nexport function RenderTableDiv({\r\n    tableApi,\r\n    dataLength,\r\n    //resizable,\r\n    showColumnFilter,\r\n    enableGrouping,\r\n    enableSorting,\r\n    multiSelect,\r\n    singleSelect,\r\n    hideCheckbox,\r\n    clickAction,\r\n    enablePaging,\r\n    maxDisplayRow,\r\n    editable,\r\n    hasSummary,\r\n    showTableInfo,\r\n    showPageSize,\r\n    className,\r\n    style,\r\n    hover,\r\n    striped,\r\n    hasWhitespace,\r\n    stickyFooter,\r\n}) {\r\n    const { t } = useTranslation();\r\n    const { rows, page, state } = tableApi;\r\n    const enable_responsive = tableApi.headerGroups.length === 1 && tableApi.columns.some((x) => !!x._breakPoint);\r\n    const cn = classNames(\"bd-table-div\", className, {\r\n        \"bd-table-hover\": hover,\r\n        //\"bd-table-resizable\": resizable,\r\n        \"bd-table-striped\": striped,\r\n        selectable: clickAction,\r\n        \"has-whitespace\": hasWhitespace,\r\n        \"sticky-footer\": stickyFooter,\r\n    });\r\n\r\n    let list = enablePaging ? tableApi.page : tableApi.rows;\r\n    if (list.length > maxDisplayRow) list = list.slice(0, maxDisplayRow);\r\n\r\n    const messages = {\r\n        showing: \"showing-{from}-to-{to}-of-{total}\",\r\n        showingFiltered: \"showing-{from}-to-{to}-of-{total}-filtered-from-{all}-rows\",\r\n        page: \"page-{page}-of-{total}\",\r\n        gotoPage: \"go-to-page\",\r\n        firstPage: \"first-page\",\r\n        prevPage: \"previous-page\",\r\n        nextPage: \"next-page\",\r\n        lastPage: \"last-page\",\r\n    };\r\n\r\n    function getTableInfo() {\r\n        var size = enablePaging ? page.length : rows.length;\r\n        var a = rows.length < 1 ? 0 : enablePaging ? state.pageIndex * state.pageSize + 1 : 1;\r\n        var b = rows.length < 1 ? 0 : a + size - 1;\r\n        var s = state.globalFilter || state.filters.length > 0 ? t(messages.showingFiltered) : t(messages.showing);\r\n        return s.replace(\"{from}\", a.toString()).replace(\"{to}\", b.toString()).replace(\"{total}\", rows.length).replace(\"{all}\", dataLength);\r\n    }\r\n\r\n    function getSummary(col) {\r\n        var sum = col._summary;\r\n        if (!sum || typeof sum !== \"function\") return sum;\r\n        return sum(rows, col);\r\n    }\r\n    function getSortByToggleProps(column) {\r\n        return enableSorting ? column.getSortByToggleProps() : {};\r\n    }\r\n\r\n    function getHeaderProps(column) {\r\n        const props = column.getHeaderProps();\r\n        let userProps = column._headerProps;\r\n        if (!userProps) userProps = {};\r\n        else if (typeof userProps === \"function\") userProps = userProps(column);\r\n\r\n        const { className, ...remUserProps } = userProps ? userProps : { className: \"\" };\r\n        const cn = classNames(className, `bd-column-${column.id}`, {\r\n            [`d-none d-${column._breakPoint}-table-cell`]: enable_responsive && column._breakPoint,\r\n        });\r\n\r\n        return { ...props, className: cn, ...remUserProps };\r\n    }\r\n\r\n    function getCellProps(row, cell) {\r\n        if (!cell) cell = row.cells[0];\r\n        var props = cell.getCellProps();\r\n        var userProps = cell.column._cellProps;\r\n        if (userProps) {\r\n            if (typeof userProps === \"function\") userProps = userProps(row, cell);\r\n            props = { ...props, ...userProps };\r\n        }\r\n        //----\r\n        const { className, ...remUserProps } = props ? props : { className: \"\" };\r\n        const cn = classNames(className, {\r\n            [`d-none d-${cell.column._breakPoint}-table-cell`]: enable_responsive && cell.column._breakPoint,\r\n        });\r\n\r\n        return { ...props, ...remUserProps, className: cn, onClick: () => onTdClick(row, cell) };\r\n    }\r\n\r\n    const onTdClick = (row, cell) => {\r\n        if (row.isGrouped) return;\r\n        if (cell.column._ignoreToggleOnClick) return;\r\n        if (!singleSelect && !multiSelect) return;\r\n        const is_selected = row.isSelected;\r\n        switch (clickAction) {\r\n            case \"select\":\r\n                if (is_selected && multiSelect) break;\r\n                if (singleSelect) tableApi.toggleAllRowsSelected(false);\r\n                row.toggleRowSelected();\r\n                break;\r\n\r\n            case \"toggle\":\r\n                if (singleSelect) tableApi.toggleAllRowsSelected(false);\r\n                if (!is_selected || multiSelect) row.toggleRowSelected();\r\n                break;\r\n\r\n            default:\r\n                break;\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"bd-table-div-container\" style={{ ...style }}>\r\n            <div {...tableApi.getTableProps()} className={cn}>\r\n                <div className=\"thead\">\r\n                    {tableApi.headerGroups.map((headerGroup) => (\r\n                        <div {...headerGroup.getHeaderGroupProps()} className=\"tr\">\r\n                            {!hideCheckbox && multiSelect && (\r\n                                <div className=\"th selection-column\">\r\n                                    <bd.Toggle\r\n                                        size=\"sm\"\r\n                                        color=\"primary\"\r\n                                        labelClassName=\"m-0\"\r\n                                        {...tableApi.getToggleAllRowsSelectedProps()}\r\n                                    />\r\n                                </div>\r\n                            )}\r\n                            {!hideCheckbox && singleSelect && <div className=\"th selection-column\"></div>}\r\n                            {headerGroup.headers.map((column) => (\r\n                                <div {...getHeaderProps(column)} className=\"th\">\r\n                                    <div className=\"header-label\">\r\n                                        <span {...getSortByToggleProps(column)} className=\"flex-grow-1\">\r\n                                            {column.render(\"Header\")}\r\n\r\n                                            {enableSorting && column.isSorted ? (\r\n                                                column.isSortedDesc ? (\r\n                                                    <icons.ArrowDownward className=\"size-sm\" />\r\n                                                ) : (\r\n                                                    <icons.ArrowUpward className=\"size-sm\" />\r\n                                                )\r\n                                            ) : (\r\n                                                \"\"\r\n                                            )}\r\n                                        </span>\r\n\r\n                                        {enableGrouping && column.canGroupBy ? (\r\n                                            // If the column can be grouped, let's add a toggle\r\n                                            <span {...column.getGroupByToggleProps()}>\r\n                                                {column.isGrouped ? (\r\n                                                    <icons.Close className=\"m-e-1 size-sm text-secondary\" />\r\n                                                ) : (\r\n                                                    <icons.Functions className=\"m-e-1 size-sm text-primary\" />\r\n                                                )}\r\n                                            </span>\r\n                                        ) : null}\r\n                                    </div>\r\n\r\n                                    {showColumnFilter && column.canFilter && <div className=\"header-filter\">{column.render(\"Filter\")}</div>}\r\n\r\n                                    {/* Use column.getResizerProps to hook up the events correctly */}\r\n                                    {/* {resizable && (\r\n                                        <div {...column.getResizerProps()} className={`resizer ${column.isResizing ? \"isResizing\" : \"\"}`} />\r\n                                    )} */}\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n\r\n                <div {...tableApi.getTableBodyProps()} className=\"tbody\">\r\n                    {list.length === 0 && <div className=\"nothing-found\">{t(\"nothing-found\")}</div>}\r\n                    {list.map((row, rowIndex) => {\r\n                        tableApi.prepareRow(row);\r\n                        return (\r\n                            <div {...row.getRowProps()} className={classNames(\"tr\", { selected: row.isSelected })}>\r\n                                {!hideCheckbox && multiSelect && (\r\n                                    <div className=\"td selection-column\">\r\n                                        <bd.Toggle size=\"sm\" color=\"primary\" labelClassName=\"m-0\" {...row.getToggleRowSelectedProps()} />\r\n                                    </div>\r\n                                )}\r\n                                {!hideCheckbox && singleSelect && (\r\n                                    <div className=\"td selection-column\">\r\n                                        <bd.Toggle\r\n                                            radio\r\n                                            size=\"sm\"\r\n                                            color=\"primary\"\r\n                                            labelClassName=\"m-0\"\r\n                                            {...row.getToggleRowSelectedProps()}\r\n                                            onChange={() => {\r\n                                                tableApi.toggleAllRowsSelected(false);\r\n                                                tableApi.toggleRowSelected(row.id);\r\n                                            }}\r\n                                        />\r\n                                    </div>\r\n                                )}\r\n                                {row.cells.map((cell) => {\r\n                                    return (\r\n                                        <div {...getCellProps(row, cell)} className=\"td\">\r\n                                            {cell.isGrouped ? (\r\n                                                // If it's a grouped cell, add an expander and row count\r\n                                                <>\r\n                                                    <span {...row.getToggleRowExpandedProps()}>\r\n                                                        <icons.ChevronRight\r\n                                                            className={classNames(\"transition-transform text-primary\", {\r\n                                                                \"rotate-90\": row.isExpanded,\r\n                                                                \"rtl-rotate-180\": !row.isExpanded,\r\n                                                            })}\r\n                                                        />\r\n                                                    </span>{\" \"}\r\n                                                    {cell.render(\"Cell\", { editable: false })} ({row.subRows.length})\r\n                                                </>\r\n                                            ) : cell.isAggregated ? (\r\n                                                // If the cell is aggregated, use the Aggregated\r\n                                                // renderer for cell\r\n                                                cell.render(\"Aggregated\")\r\n                                            ) : cell.isPlaceholder ? null : ( // For cells with repeated values, render null\r\n                                                // Otherwise, just render the regular cell\r\n                                                cell.render(\"Cell\", {\r\n                                                    editable: editable && (!singleSelect || row.isSelected),\r\n                                                })\r\n                                            )}\r\n                                        </div>\r\n                                    );\r\n                                })}\r\n                            </div>\r\n                        );\r\n                    })}\r\n                </div>\r\n\r\n                {hasSummary && (\r\n                    <div className=\"tfoot\">\r\n                        <div {...tableApi.footerGroups[0].getFooterGroupProps()} className=\"tr\">\r\n                            {!hideCheckbox && multiSelect && <div className=\"th selection-column\"></div>}\r\n                            {!hideCheckbox && singleSelect && <div className=\"th selection-column\"></div>}\r\n                            {tableApi.footerGroups[0].headers.map((column, idx) => {\r\n                                return (\r\n                                    <div {...column.getFooterProps()} className=\"th\">\r\n                                        <div className=\"header-label\">{getSummary(column)}</div>\r\n                                    </div>\r\n                                );\r\n                            })}\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </div>\r\n\r\n            <div className=\"bd-table-bottom\">\r\n                {showTableInfo && <div className=\"bd-table-info d-none d-md-block\">{getTableInfo()}</div>}\r\n\r\n                {enablePaging && showPageSize && (\r\n                    <div className=\"bd-table-pagination flex-grow-1\">\r\n                        <bd.Button\r\n                            variant=\"icon\"\r\n                            size=\"sm\"\r\n                            onClick={() => tableApi.gotoPage(0)}\r\n                            disabled={!tableApi.canPreviousPage}\r\n                            title={messages.firstPage}\r\n                        >\r\n                            <icons.FirstPage className=\"rtl-rotate-180\" />\r\n                        </bd.Button>\r\n                        <bd.Button\r\n                            variant=\"icon\"\r\n                            size=\"sm\"\r\n                            onClick={() => tableApi.previousPage()}\r\n                            disabled={!tableApi.canPreviousPage}\r\n                            title={messages.prevPage}\r\n                        >\r\n                            <icons.ChevronLeft className=\"rtl-rotate-180\" />\r\n                        </bd.Button>\r\n                        <span className=\"px-2\">\r\n                            {messages.page.replace(\"{page}\", state.pageIndex + 1).replace(\"{total}\", tableApi.pageOptions.length)}\r\n                        </span>\r\n                        <bd.Button\r\n                            variant=\"icon\"\r\n                            size=\"sm\"\r\n                            onClick={() => tableApi.nextPage()}\r\n                            disabled={!tableApi.canNextPage}\r\n                            title={messages.nextPage}\r\n                        >\r\n                            <icons.ChevronRight className=\"rtl-rotate-180 size-md\" />\r\n                        </bd.Button>\r\n                        <bd.Button\r\n                            variant=\"icon\"\r\n                            size=\"sm\"\r\n                            onClick={() => tableApi.gotoPage(tableApi.pageCount - 1)}\r\n                            disabled={!tableApi.canNextPage}\r\n                            title={messages.lastPage}\r\n                        >\r\n                            <icons.LastPage className=\"rtl-rotate-180\" />\r\n                        </bd.Button>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport * as bd from \"react-basic-design\";\r\n\r\ninterface FieldProps {\r\n    type?: string;\r\n    value: any;\r\n    autoComplete?: string;\r\n    onChange?: (e: any) => void;\r\n    onBlur?: (e: any) => void;\r\n}\r\n\r\nexport const DefaultEditor = ({ value: initialValue, row, column, updateMyData, editable, ...tableApi }: any) => {\r\n    const [value, setValue] = React.useState(initialValue);\r\n    const onChange = (e: any) => setValue(e.target.value);\r\n    const onBlur = (e: any) => updateMyData(row.index, column.id, value);\r\n    const updateValue = (newValue: boolean) => {\r\n        setValue(newValue);\r\n        updateMyData(row.index, column.id, newValue);\r\n    };\r\n\r\n    React.useEffect(() => setValue(initialValue), [initialValue]);\r\n\r\n    function getValidValues() {\r\n        var values = column.validValues;\r\n        if (!values) return [];\r\n        if (typeof values === \"function\") values = values(row);\r\n        if (typeof values === \"string\") {\r\n            return values.split(\",\").map((x: string) => {\r\n                var i = x.indexOf(\":\");\r\n                var code = i === -1 ? x : x.substr(0, i);\r\n                var title = i === -1 ? x : x.substr(0, i);\r\n                return { code: code.trim(), title: title.trim() };\r\n            });\r\n        }\r\n        return values;\r\n    }\r\n\r\n    function getDisplayValue(value: any) {\r\n        return column.getDisplayValue ? column.getDisplayValue(value, row, column) : value;\r\n    }\r\n\r\n    function renderLabel() {\r\n        if (value === undefined) return \"\";\r\n        if (value === null) {\r\n            return !column.nullValue ? \"\" : <i className=\"small text-secondary-text\">{column.nullValue}</i>;\r\n        }\r\n        switch (column.display) {\r\n            case \"textarea\":\r\n                return <div className=\"pre nano-scroll\">{`${getDisplayValue(value)}`}</div>;\r\n\r\n            case \"check\":\r\n                return <bd.Toggle model={value ?? false} color=\"primary\" size=\"sm\" className=\"p-1 m-s-1\" />;\r\n\r\n            case \"switch\":\r\n                return <bd.Switch model={value ?? false} color=\"primary\" size=\"sm\" className=\"py-0\" />;\r\n        }\r\n        return `${getDisplayValue(value)}`;\r\n    }\r\n\r\n    function isReadonly() {\r\n        const r = column.readOnly;\r\n        return typeof r === \"function\" ? r(row) : r;\r\n    }\r\n\r\n    //-----------\r\n    if (!editable || isReadonly()) return renderLabel();\r\n\r\n    //-----------\r\n    var field: FieldProps = { onChange, onBlur, value, autoComplete: \"off\" };\r\n    if (!field.value) field.value = \"\";\r\n\r\n    switch (column.display) {\r\n        case null:\r\n        case \"\":\r\n        case \"text\":\r\n            field.type = \"text\";\r\n            if (!value) field.value = \"\";\r\n            break;\r\n\r\n        case \"number\":\r\n        case \"amount\":\r\n            field.type = \"number\";\r\n            break;\r\n\r\n        case \"email\":\r\n            field.type = \"email\";\r\n            if (!value) field.value = \"\";\r\n            break;\r\n\r\n        case \"url\":\r\n            field.type = \"url\";\r\n            if (!value) field.value = \"\";\r\n            break;\r\n\r\n        case \"check\":\r\n            return <bd.Toggle model={field.value} setModel={updateValue} color=\"primary\" size=\"sm\" />;\r\n\r\n        case \"textarea\":\r\n            return <textarea className=\"form-control table-editor\" {...field}></textarea>;\r\n\r\n        case \"switch\":\r\n            return <bd.Switch model={field.value} setModel={updateValue} color=\"primary\" size=\"sm\" className=\"py-0\" />;\r\n\r\n        case \"select\":\r\n            return (\r\n                <select className=\"form-select table-editor\" {...field}>\r\n                    ;\r\n                    {getValidValues().map((x: any) => (\r\n                        <option key={x.code} value={x.code}>\r\n                            {x.title}\r\n                        </option>\r\n                    ))}\r\n                </select>\r\n            );\r\n    }\r\n    return <input {...field} className=\"form-control table-editor\" />;\r\n};\r\n","import classNames from \"classnames\";\r\nimport * as bd from \"react-basic-design\";\r\nimport { useField } from \"formik\";\r\nimport React from \"react\";\r\n\r\nexport const BasicTextArea = ({ id, label, labelSize, type, className, children, autoComplete, maxWidth, ...props }) => {\r\n    const [field, meta] = useField({ ...props, type });\r\n    if (!field.value) field.value = \"\";\r\n    var cnControl = classNames(\"form-control\", className, {\r\n        \"bd-border-error\": meta.error,\r\n    });\r\n    var cnErorr = \"bd-error\";\r\n\r\n    if (!type) type = \"text\";\r\n    if (!autoComplete) autoComplete = \"off\";\r\n    if (label && id === undefined) id = props.name;\r\n\r\n    let style = props.style;\r\n    if (maxWidth > 0) {\r\n        style = { ...style, maxWidth };\r\n    }\r\n\r\n    let field_comp = (\r\n        <>\r\n            <textarea id={id} type={type} className={cnControl} {...field} autoComplete={autoComplete} {...props} style={style}></textarea>\r\n\r\n            {meta.touched && meta.error ? <div className={cnErorr}>{meta.error}</div> : null}\r\n        </>\r\n    );\r\n\r\n    return (\r\n        <bd.FormRow label={label} labelSize={labelSize} htmlFor={id} className={className}>\r\n            {field_comp}\r\n        </bd.FormRow>\r\n    );\r\n};\r\n","import React, { useMemo, useRef, useState } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Formik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport * as bd from \"react-basic-design\";\r\nimport * as icons from \"../../../assets/icons\";\r\nimport { messages } from \"../../../components/messages\";\r\nimport { tableDesignerApi } from \"../../../api/table-designer-api\";\r\nimport { notify } from \"../../../components/basic/notify\";\r\nimport { TableTitlebar } from \"../../../components/table\";\r\nimport { BasicInput } from \"../../../components/basic-form/basic-input\";\r\nimport {\r\n    useTable,\r\n    useGlobalFilter,\r\n    usePagination,\r\n    useSortBy,\r\n    useFilters,\r\n    useGroupBy,\r\n    useExpanded,\r\n    useRowSelect,\r\n    //useBlockLayout,\r\n    useFlexLayout,\r\n    //useRowState,\r\n    //useResizeColumns,\r\n} from \"react-table\";\r\nimport { RenderTableDiv } from \"../../../components/table/render-table-div\";\r\nimport { DefaultEditor } from \"../../../components/table/editors\";\r\nimport { BasicTextArea } from \"../../../components/basic-form/basic-textarea\";\r\nimport { api } from \"../../../api/api\";\r\n\r\n//\r\nexport function TableDesignerEditTable({ table, group, onChanged, onGoBack }) {\r\n    const { t } = useTranslation();\r\n    const [data, setData] = useState(table.columns);\r\n    const [saving, setSaving] = useState(false);\r\n    const [deleting, setDeleting] = useState(false);\r\n    const insertMode = !table.name;\r\n    const formRef = useRef();\r\n\r\n    const onSaveClick = () => {\r\n        var values = formRef.current.values;\r\n        setSaving(true);\r\n        var dto = { ...values, dataColumns: data };\r\n        tableDesignerApi\r\n            .saveTable(group.id, dto, insertMode)\r\n            .then((x) => {\r\n                setSaving(false);\r\n                notify.info(messages.ChangesAreSaved);\r\n                table.data = x;\r\n                onChanged(x);\r\n            })\r\n            .catch((ex) => {\r\n                setSaving(false);\r\n                notify.error(ex);\r\n            });\r\n    };\r\n\r\n    const onDeleteClick = () => {\r\n        setDeleting(true);\r\n        tableDesignerApi\r\n            .deleteTable(table.name)\r\n            .then((x) => {\r\n                setSaving(false);\r\n                notify.info(messages.RowIsDeleted);\r\n                onChanged(null);\r\n            })\r\n            .catch((ex) => {\r\n                setSaving(false);\r\n                notify.error(ex);\r\n            });\r\n    };\r\n\r\n    const defaultPageSize = 10;\r\n    const skipReset = true;\r\n\r\n    const updateData = (rowIndex, columnId, value) => {\r\n        //setSkipPageReset(true);\r\n        const new_row = { ...data[rowIndex], [columnId]: value };\r\n        setData(data.map((row, index) => (index === rowIndex ? new_row : row)));\r\n    };\r\n\r\n    const tableApi = useTable(\r\n        {\r\n            initialState: { pageSize: defaultPageSize },\r\n            defaultColumn: {\r\n                Cell: DefaultEditor,\r\n                minWidth: 30,\r\n                disableGroupBy: true,\r\n                //maxWidth: 200,\r\n            },\r\n            columns: useMemo(\r\n                () => [\r\n                    {\r\n                        Header: \"ID\",\r\n                        accessor: \"id\",\r\n                        readOnly: true,\r\n                        width: 50,\r\n\r\n                        getDisplayValue: (value) => (value === 1 ? \"one\" : value),\r\n                    },\r\n                    { Header: \"NAME\", accessor: \"name\", display: \"text\" },\r\n                    {\r\n                        Header: \"TITLE\",\r\n                        accessor: \"title\",\r\n                        readonly: (r, c) => r.values.isRequired,\r\n                    },\r\n                    { Header: \"IsPK\", accessor: \"isPK\", width: 50, display: \"check\" },\r\n                    { Header: \"Null\", accessor: \"isNull\", display: \"check\", width: 80 },\r\n                    {\r\n                        Header: \"Type\",\r\n                        id: \"type\",\r\n                        readOnly: true,\r\n                        width: 100,\r\n                        Cell: ({ row }) => {\r\n                            var r = row.original;\r\n                            return !r.dataType ? \"\" : `${r.dataType}(${r.maxLen})`;\r\n                        },\r\n                    },\r\n                    { Header: \"DefaultValue\", accessor: \"defaultValue\", width: 100 },\r\n\r\n                    { Header: \"List\", accessor: \"showInList\", display: \"check\", width: 50 },\r\n                    { Header: \"Editor\", accessor: \"showInEditor\", display: \"check\", width: 50 },\r\n                    {\r\n                        Header: \"Display\",\r\n                        accessor: \"display\",\r\n                        width: 100,\r\n                        display: \"select\",\r\n                        validValues: \", text, email, url, number, amount, textarea, check, switch, select, shamsi\",\r\n                    },\r\n                    { Header: \"ValidValues\", accessor: \"validValues\", display: \"textarea\" },\r\n\r\n                    //{ Header: \"Expression\", accessor: \"expression\" },\r\n                    // { Header: \"Alias\", accessor: \"alias\" },\r\n                    //{ Header: \"ToggleOnClick\", accessor: \"toggleOnClick\" },\r\n                    //{ Header: \"CellStyle\", accessor: \"cellStyle\" },\r\n                    //{ Header: \"CellClassName\", accessor: \"cellClassName\" },\r\n                    //{ Header: \"Category\", accessor: \"category\" },\r\n\r\n                    {\r\n                        Header: \"Dir\",\r\n                        accessor: \"dir\",\r\n                        display: \"select\",\r\n                        validValues: \",rtl,ltr\",\r\n                        width: 70,\r\n                        disableGroupBy: false,\r\n                    },\r\n                ],\r\n                []\r\n            ),\r\n            data: useMemo(() => data, [data]),\r\n            //filterTypes: useMemo(() => reactTable.filterTypes, []),\r\n            updateMyData: updateData,\r\n            autoResetPage: !skipReset,\r\n            autoResetFilters: !skipReset,\r\n            autoResetSortBy: !skipReset,\r\n            autoResetSelectedRows: !skipReset,\r\n            autoResetGlobalFilter: !skipReset,\r\n            disableMultiSort: false,\r\n        },\r\n        useGlobalFilter,\r\n        useFilters,\r\n        useGroupBy,\r\n        useSortBy,\r\n        useExpanded,\r\n        usePagination,\r\n        useRowSelect,\r\n        //useBlockLayout,\r\n        useFlexLayout\r\n        //useResizeColumns\r\n        //(hooks) => reactTable.addSelectionColumns(hooks)\r\n    );\r\n\r\n    const moreMenu = (\r\n        <bd.Menu>\r\n            <bd.MenuItem disabled={!table.id || saving || deleting || table.columns.length > 0} onClick={onDeleteClick}>\r\n                {deleting && <div className=\"m-e-2 spinner-border spinner-border-sm\"></div>}\r\n                <span>{t(\"delete\")}</span>\r\n            </bd.MenuItem>\r\n        </bd.Menu>\r\n    );\r\n\r\n    const newRow = () => ({ id: 0 });\r\n\r\n    return (\r\n        <>\r\n            <div className=\"border-bottom bg-gray-5 mb-3\">\r\n                <div className=\"container\">\r\n                    <bd.Toolbar>\r\n                        <bd.Button variant=\"icon\" onClick={onGoBack} size=\"md\" edge=\"start\" className=\"m-e-2\">\r\n                            <icons.ArrowBackIos className=\"rtl-rotate-180\" />\r\n                        </bd.Button>\r\n\r\n                        <h5>{t(\"edit-table\")}</h5>\r\n\r\n                        <div className=\"flex-grow-1\" />\r\n\r\n                        <bd.Button color=\"primary\" disabled={saving || deleting} onClick={onSaveClick}>\r\n                            {saving && <div className=\"m-e-2 spinner-border spinner-border-sm\"></div>}\r\n                            <span>{t(\"save-changes\")}</span>\r\n                        </bd.Button>\r\n\r\n                        <bd.Button variant=\"icon\" menu={moreMenu} edge=\"end\" className=\"m-s-1\">\r\n                            <icons.MoreVert />\r\n                        </bd.Button>\r\n                    </bd.Toolbar>\r\n\r\n                    <div className=\"d-flex\">\r\n                        <div className=\"p-3 rounded-circle bg-shade-10 mx-4 mb-3\">\r\n                            <icons.TableView className=\"size-xl\" />\r\n                        </div>\r\n                        <div>\r\n                            <p className=\"my-2 text-primary-text\">{table.name}</p>\r\n                            <p className=\"m-0 text-secondary-text\">\r\n                                {t(\"created-at\")}: {!table.createAt ? \"now\" : table.createAt}\r\n                            </p>\r\n                        </div>\r\n                    </div>\r\n                    <bd.TabStrip indicatorColor=\"primary\" textColor=\"primary\" className=\"d-none\">\r\n                        <bd.TabStripItem eventKey=\"t1\" href=\"#info\">\r\n                            Table Info{\" \"}\r\n                        </bd.TabStripItem>\r\n                        <bd.TabStripItem eventKey=\"t2\" href=\"#columns\">\r\n                            Columns\r\n                        </bd.TabStripItem>\r\n                    </bd.TabStrip>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"container\" style={{ marginBottom: 70 }}>\r\n                <div className=\"mt-4\" style={{ maxWidth: 500 }}>\r\n                    <Formik\r\n                        initialValues={table.data || { name: \"\", title: \"\", singularTitle: \"\" }}\r\n                        validationSchema={yup.object({\r\n                            title: yup.string().min(3, t(\"msg-too-short\")).max(100, t(\"msg-too-long\")).required(\"Required\"),\r\n                        })}\r\n                        onSubmit={onSaveClick}\r\n                        innerRef={formRef}\r\n                    >\r\n                        <form>\r\n                            {insertMode && <BasicInput name=\"name\" label={t(\"table-designer-table-name\")} labelSize=\"4\" autoFocus />}\r\n                            <BasicInput name=\"title\" label={t(\"table-designer-table-title\")} labelSize=\"4\" />\r\n                            <BasicInput name=\"singularTitle\" label={t(\"table-designer-singular\")} labelSize=\"4\" />\r\n                            <BasicTextArea name=\"description\" label={t(\"description\")} labelSize=\"4\" />\r\n                        </form>\r\n                    </Formik>\r\n                </div>\r\n\r\n                <TableTitlebar\r\n                    tableApi={tableApi}\r\n                    hideSearch\r\n                    hideSettings\r\n                    title=\"Columns\"\r\n                    fixed\r\n                    buttons={\r\n                        <>\r\n                            <bd.Button\r\n                                variant=\"icon\"\r\n                                size=\"md\"\r\n                                onClick={(e) => {\r\n                                    tableDesignerApi\r\n                                        .schemaColumn(table.name)\r\n                                        .then((schemaColumns) => {\r\n                                            let d = [...data];\r\n                                            schemaColumns.forEach((x) => {\r\n                                                const f = d.find((z) => z.name === x.name);\r\n                                                if (!f) d = [...d, x];\r\n                                                else {\r\n                                                    f.dataType = x.dataType;\r\n                                                    f.maxLen = x.maxLen;\r\n                                                    f.isPK = x.isPK;\r\n                                                    f.isNull = x.isNull;\r\n                                                    f.defaultValue = x.defaultValue;\r\n                                                    f.ordinalPosition = x.ordinalPosition;\r\n                                                }\r\n                                            });\r\n                                            setData(d);\r\n                                        })\r\n                                        .catch((ex) => notify.error(ex));\r\n                                }}\r\n                            >\r\n                                <icons.Sync />\r\n                            </bd.Button>\r\n\r\n                            <bd.Button\r\n                                variant=\"icon\"\r\n                                size=\"md\"\r\n                                onClick={(e) => {\r\n                                    var r = newRow();\r\n                                    setData([...data, r]);\r\n                                    tableApi.state.selectedRowIds = { [data.length]: true };\r\n                                }}\r\n                            >\r\n                                <icons.Add />\r\n                            </bd.Button>\r\n\r\n                            <bd.Button\r\n                                variant=\"icon\"\r\n                                size=\"md\"\r\n                                disabled={!tableApi.selectedFlatRows.length}\r\n                                onClick={(e) => {\r\n                                    const updatedRows = data.filter((x, index) => !tableApi.state.selectedRowIds[index]);\r\n                                    setData(updatedRows);\r\n                                    tableApi.state.selectedRowIds = {};\r\n                                }}\r\n                            >\r\n                                <icons.Delete />\r\n                            </bd.Button>\r\n                        </>\r\n                    }\r\n                />\r\n\r\n                <RenderTableDiv\r\n                    tableApi={tableApi}\r\n                    //resizable\r\n                    //multiSelect\r\n                    singleSelect\r\n                    hideCheckbox\r\n                    //hasSummary\r\n                    showTableInfo\r\n                    //showPageSize\r\n                    //enablePaging\r\n                    //enableGrouping\r\n                    enableSorting\r\n                    editable\r\n                    clickAction=\"select\"\r\n                    className=\"border0 nano-scroll\"\r\n                    //style={{ minHeight: 400 }}\r\n                    hover\r\n                    //striped\r\n                    //hasWhitespace\r\n                    //stickyFooter\r\n                />\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport * as bd from \"react-basic-design\";\r\n//import accountManager from \"../../../app/account-manager\";\r\n\r\nimport classNames from \"classnames\";\r\nimport { tableDesignerApi } from \"../../../api/table-designer-api\";\r\nimport { TableDesignerEditGroup } from \"./edit-group\";\r\nimport { TableDesignerEditTable } from \"./edit-table\";\r\nimport { notify } from \"../../../components/basic/notify\";\r\nimport { Tile, Tiles } from \"../../../components/tilemenu/tiles\";\r\nimport * as icons from \"../../../assets/icons\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { useAccount } from \"../../../app/account-context\";\r\n\r\n//\r\nexport function TableDesignerApp() {\r\n    const account = useAccount();\r\n    const { t } = useTranslation();\r\n    const [groups, setGroups] = useState(null);\r\n    const [group, setGroup] = useState(null);\r\n    const [table, setTable] = useState(null);\r\n    const [column, setColumn] = useState(null);\r\n\r\n    function goBack() {\r\n        if (column) {\r\n            setColumn(null);\r\n            return;\r\n        }\r\n        if (group) setGroup(null);\r\n        if (table) setTable(null);\r\n    }\r\n\r\n    function onEditGroupClick(g) {\r\n        setGroup(g);\r\n        return false;\r\n    }\r\n\r\n    function onAddFormClick(g) {\r\n        setGroup(g);\r\n        setTable({ columns: [] });\r\n        return false;\r\n    }\r\n\r\n    function onEditTableClick(g, t) {\r\n        if (t.data) {\r\n            setGroup(g);\r\n            setTable(t);\r\n            return false;\r\n        }\r\n        tableDesignerApi\r\n            .getTable(t.name)\r\n            .then((x) => {\r\n                t.data = x.table;\r\n                t.columns = x.columns;\r\n                setGroup(g);\r\n                setTable(t);\r\n            })\r\n            .catch((ex) => {\r\n                notify.error(ex);\r\n            });\r\n        return false;\r\n    }\r\n\r\n    function onAddGroupClicked() {\r\n        setGroup({ title: \"\" });\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!groups && account.isConnected()) {\r\n            tableDesignerApi.getGroups().then((x) => setGroups(x));\r\n        }\r\n        // return accountManager.status.onConnected(function () {\r\n        //     if (!groups) tableDesignerApi.getGroups().then((x) => setGroups(x));\r\n        // }).remove;\r\n    }, [groups, account]);\r\n\r\n    return (\r\n        <>\r\n            <div className={classNames({ \"d-none\": group || table })}>\r\n                <div className=\"border-bottom bg-gray-5 mb-3\">\r\n                    <bd.Toolbar className=\"container\">\r\n                        <bd.Button color=\"primary\" size=\"sm\" onClick={onAddGroupClicked}>\r\n                            <icons.Folder />\r\n                            {t(\"add-new-group\")}\r\n                        </bd.Button>\r\n                    </bd.Toolbar>\r\n                </div>\r\n                <div className=\"container\">\r\n                    <Tiles>\r\n                        {groups &&\r\n                            groups\r\n                                .sort((a, b) => (a.title === b.title ? 0 : a.title > b.title ? 1 : -1))\r\n                                .map((g) => (\r\n                                    <Tile\r\n                                        key={g.id}\r\n                                        title={\r\n                                            <>\r\n                                                <span className=\"size-md\"> {g.title}</span>\r\n                                                <bd.Button\r\n                                                    variant=\"text\"\r\n                                                    size=\"sm\"\r\n                                                    className=\"mx-2\"\r\n                                                    color=\"secondary\"\r\n                                                    onClick={() => onEditGroupClick(g)}\r\n                                                >\r\n                                                    <icons.Edit />\r\n                                                    Edit Group\r\n                                                </bd.Button>\r\n                                                <bd.Button variant=\"text\" size=\"sm\" color=\"secondary\" onClick={() => onAddFormClick(g)}>\r\n                                                    <icons.Add />\r\n                                                    New table\r\n                                                </bd.Button>\r\n                                            </>\r\n                                        }\r\n                                    >\r\n                                        {g.items.map((t) => (\r\n                                            <Tile key={t.name} title={t.title} onClick={() => onEditTableClick(g, t)} />\r\n                                        ))}\r\n                                    </Tile>\r\n                                ))}\r\n                    </Tiles>\r\n                </div>\r\n            </div>\r\n\r\n            {group && !table && !column && (\r\n                <TableDesignerEditGroup\r\n                    onGoBack={goBack}\r\n                    group={group}\r\n                    onChanged={(g) => {\r\n                        if (!g) {\r\n                            var i = groups.indexOf(group);\r\n                            groups.splice(i, 1);\r\n                            goBack();\r\n                            setGroups(groups);\r\n                            return;\r\n                        }\r\n                        for (let i = 0; i < groups.length; i++) {\r\n                            if (groups[i].id === g.id) {\r\n                                groups[i] = g;\r\n                                goBack();\r\n                                setGroups(groups);\r\n                                return;\r\n                            }\r\n                        }\r\n                        groups.push(g);\r\n                        goBack();\r\n                        setGroups(groups);\r\n                    }}\r\n                />\r\n            )}\r\n\r\n            {group && table && !column && (\r\n                <TableDesignerEditTable\r\n                    onGoBack={goBack}\r\n                    group={group}\r\n                    table={table}\r\n                    onChanged={(tb) => {\r\n                        var g = groups.find((x) => x.id === group.id);\r\n                        var t = g.items.find((x) => x.name === table.name);\r\n                        if (!tb) {\r\n                            // removed\r\n                            g.items = g.items.filter((x) => x !== t);\r\n                        } else if (!t) {\r\n                            // added\r\n                            g.items.push({\r\n                                name: tb.name,\r\n                                title: tb.title,\r\n                                table: tb,\r\n                            });\r\n                        } else {\r\n                            // modifed\r\n                            g.title = tb.title;\r\n                        }\r\n                        goBack();\r\n                        setGroups(groups);\r\n                    }}\r\n                />\r\n            )}\r\n        </>\r\n    );\r\n}\r\n\r\nTableDesignerApp.Appbar = {\r\n    title: \"Table Designer\",\r\n    buttons: null,\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport i18next from \"i18next\";\r\nimport * as bd from \"react-basic-design\";\r\nimport settings from \"../../app/settings\";\r\n\r\nconst defaultLanguageCode = \"fa\";\r\nconst languages = [\r\n    {\r\n        code: \"fa\",\r\n        name: \"فارسی\",\r\n        country_code: \"ir\",\r\n        dir: \"rtl\",\r\n    },\r\n    {\r\n        code: \"en\",\r\n        name: \"English\",\r\n        country_code: \"gb\",\r\n    },\r\n];\r\n\r\nexport const UserSettingsApp = () => {\r\n    const { t } = useTranslation();\r\n    const [darkMode, setDarkMode] = useState(bd.helper.isDarkMode());\r\n    const currentLanguageCode = settings.getLanguageCode() || defaultLanguageCode;\r\n    const currentLanguage = languages.find((l) => l.code === currentLanguageCode);\r\n\r\n    const changeDarkMode = (value) => {\r\n        bd.helper.setTheme(value ? \"bd-dark\" : \"bd-light\");\r\n        setDarkMode(value);\r\n    };\r\n\r\n    const changeLanguage = (lang) => {\r\n        i18next.changeLanguage(lang.code);\r\n    };\r\n\r\n    useEffect(() => {\r\n        bd.helper.setRTL(currentLanguage.dir === \"rtl\");\r\n        document.title = t(\"app.title\");\r\n    }, [currentLanguage, t]);\r\n\r\n    return (\r\n        <div className=\"m-auto\" style={{ maxWidth: 600 }}>\r\n            <bd.List>\r\n                <bd.ListItem\r\n                    variant=\"text\"\r\n                    primary={t(\"dark_mode\")}\r\n                    className=\"border-bottom\"\r\n                    controls={<bd.Switch color=\"primary\" className=\"edge-end\" model={darkMode} setModel={changeDarkMode} />}\r\n                />\r\n                <bd.ListItem\r\n                    primary={\r\n                        <>\r\n                            {t(\"language\")}: <b>{currentLanguage.name}</b>\r\n                        </>\r\n                    }\r\n                    className=\"border-bottom\"\r\n                >\r\n                    {languages.map((x) => (\r\n                        <bd.ListItem key={x.code} primary={x.name} radio checked={currentLanguage === x} onClick={(e) => changeLanguage(x)} />\r\n                    ))}\r\n                </bd.ListItem>\r\n            </bd.List>\r\n        </div>\r\n    );\r\n};\r\n\r\nUserSettingsApp.Appbar = {\r\n    title: \"settings\",\r\n    buttons: null,\r\n};\r\n","import { api } from \"./api\";\r\nimport { apiConfig } from \"./config\";\r\n\r\nexport const userManagmentApi = {\r\n  getUsers: () => api.call(\"get\", `${apiConfig.userManegmentUrl}/users`),\r\n\r\n  getUser: (userId) => api.call(\"get\", `${apiConfig.userManegmentUrl}/user-info?userId=${userId}`),\r\n\r\n  insertUser: (user) => api.call(\"post\", apiConfig.userManegmentUrl + \"/insert-user\", user),\r\n\r\n  updateUser: (user) => api.call(\"post\", apiConfig.userManegmentUrl + \"/update-user\", user),\r\n\r\n  deleteUser: (userId) => api.call(\"delete\", `${apiConfig.userManegmentUrl}/delete-user?userId=${userId}`),\r\n\r\n  saveUser: (insertMode, user) => {\r\n    var action = insertMode ? \"insert\" : \"update\";\r\n    var method = insertMode ? \"post\" : \"put\";\r\n    var res= api.call(`${method}`, apiConfig.userManegmentUrl + `/${action}-user`, user);\r\n    return res;\r\n  },\r\n};\r\n","import React, { useRef, useState, useEffect } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport * as bd from \"react-basic-design\";\r\nimport * as icons from \"../../../assets/icons\";\r\nimport * as yup from \"yup\";\r\nimport { notify } from \"../../../components/basic/notify\";\r\nimport { Form, Formik } from \"formik\";\r\nimport { BasicInput } from \"../../../components/basic-form/basic-input\";\r\nimport { userManagmentApi } from \"../../../api/user-managment-api\";\r\nimport { Tab } from \"react-bootstrap\";\r\nimport classNames from \"classnames\";\r\n\r\nexport const EditUser = ({ userId, onGoBack }) => {\r\n  const { t } = useTranslation();\r\n  const titlePage = !userId ? \"New-Uesr\" : \"Edit-User\";\r\n  const [busy, setBusy] = useState(false);\r\n  const [user, setUser] = useState(null);\r\n  const [deleting, setDeleting] = useState(false);\r\n  const [activeTab, setActiveTab] = useState(\"first\");\r\n  const formRef = useRef();\r\n  const [windowsAuth, setAuthType] = useState(\"true\");\r\n\r\n  useEffect(() => {\r\n    if (userId != null && user == null) {\r\n      userManagmentApi\r\n        .getUser(userId)\r\n        .then((x) => {\r\n          if (!x.windowsAuthenticate) {\r\n            setAuthType(\"false\");\r\n          }\r\n          setUser(x);\r\n        })\r\n        .catch((ex) => {\r\n          notify.error(ex);\r\n        });\r\n    }\r\n  });\r\n\r\n  const onSaveClick = (e) => {\r\n    if (!formRef.current) return false;\r\n    if (!formRef.current.isValid) return false;\r\n    var values = formRef.current.values;\r\n    values.windowsAuthenticate = windowsAuth == \"true\" ? true : false;\r\n    setBusy(true);\r\n    var insertMode = !userId;\r\n    userManagmentApi\r\n      .saveUser(insertMode, values)\r\n      .then((x) => {\r\n        setBusy(false);\r\n        notify.info(t(\"changes-are-saved\"));\r\n        onGoBack(x);\r\n      })\r\n      .catch((ex) => {\r\n        setBusy(false);\r\n        notify.error(ex);\r\n      });\r\n  };\r\n\r\n  const deleteClickHandler = () => {\r\n    bd.msgbox(t(\"the-user-will-be-deleted\"), null, (hide) => (\r\n      <>\r\n        <bd.Button variant=\"text\" color=\"primary\" onClick={hide} className=\"m-e-2\">\r\n          {t(\"cancel\")}\r\n        </bd.Button>\r\n\r\n        <bd.Button variant=\"text\" color=\"primary\" disabled={deleting} onClick={() => onDeleteClick(hide)}>\r\n          {deleting && <div className=\"m-e-2 spinner-border spinner-border-sm\"></div>}\r\n          {t(\"delete\")}\r\n        </bd.Button>\r\n      </>\r\n    ));\r\n  };\r\n  const onDeleteClick = (hide) => {\r\n    setDeleting(true);\r\n    userManagmentApi\r\n      .deleteUser(userId)\r\n      .then((x) => {\r\n        setDeleting(false);\r\n        hide();\r\n        notify.info(t(\"row-is-deleted\"));\r\n        onGoBack(null);\r\n      })\r\n      .catch((ex) => {\r\n        setDeleting(false);\r\n        notify.error(ex);\r\n      });\r\n  };\r\n  const UserForm = () => {\r\n    return (\r\n      <Form>\r\n        <div className=\"row\">\r\n          <div className=\"col-md-12\">\r\n            <Tab.Container defaultActiveKey={activeTab}>\r\n              <bd.AppBar color=\"default\" shadow=\"0\" color=\"inherit\">\r\n                <bd.TabStrip shade=\"primary\" indicatorColor=\"primary\">\r\n                  <bd.TabStripItem eventKey=\"first\">{t(\"general-info-tab\")}</bd.TabStripItem>\r\n                  {!user && <bd.TabStripItem eventKey=\"second\">{t(\"authentication-type-tab\")}</bd.TabStripItem>}\r\n                  <bd.TabStripItem eventKey=\"third\">{t(\"role-manage-tab\")}</bd.TabStripItem>\r\n                </bd.TabStrip>\r\n              </bd.AppBar>\r\n              <Tab.Content className=\"mt-4\">\r\n                <Tab.Pane eventKey=\"first\">\r\n                  <GeneralUserInfo />\r\n                </Tab.Pane>\r\n                <Tab.Pane eventKey=\"second\">\r\n                  <AuthenticationType />\r\n                </Tab.Pane>\r\n              </Tab.Content>\r\n            </Tab.Container>\r\n          </div>\r\n        </div>\r\n      </Form>\r\n    );\r\n  };\r\n  const GeneralUserInfo = () => {\r\n    const inputStyle = {\r\n      maxWidth: 250,\r\n    };\r\n    return (\r\n      <div className=\"row\">\r\n        <div className=\"col-md-6\">\r\n          <BasicInput name=\"id\" labelSize=\"2\" style={{ display: \"none\" }} />\r\n          <BasicInput name=\"firstName\" label={t(\"first-name\")} labelSize=\"2\" autoComplete=\"off\" autoFocus style={inputStyle} />\r\n          <BasicInput name=\"lastName\" label={t(\"last-name\")} labelSize=\"2\" autoComplete=\"off\" style={inputStyle} />\r\n          <BasicInput name=\"userName\" label={t(\"user-name\")} labelSize=\"2\" autoComplete=\"off\" readOnly={!!userId} style={inputStyle} read />\r\n          <BasicInput name=\"nationalCode\" label={t(\"national-code\")} labelSize=\"2\" autoComplete=\"off\" style={inputStyle} />\r\n          <BasicInput name=\"email\" label={t(\"email\")} labelSize=\"2\" autoComplete=\"off\" style={inputStyle} />\r\n          <BasicInput name=\"phoneNumber\" label={t(\"phone-number\")} labelSize=\"2\" autoComplete=\"off\" style={inputStyle} />\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n  const AuthenticationType = () => {\r\n    const inputStyle = {\r\n      maxWidth: 250,\r\n    };\r\n    return (\r\n      <div className=\"row mb-2\">\r\n        <div className=\"col-md-6\">\r\n          <label class=\"form-label text-start text-md-end col-form-label col-12 col-md-2\">{t(\"auth-type\")}</label>\r\n          <bd.Toggle\r\n            color=\"primary\"\r\n            dense\r\n            radio\r\n            size=\"sm\"\r\n            name=\"windowsAuthenticate\"\r\n            value=\"true\"\r\n            label={t(\"windows\")}\r\n            labelClassName=\"m-e-2\"\r\n            model={windowsAuth}\r\n            setModel={setAuthType}\r\n            onClick={() => setActiveTab(\"second\")}\r\n          />\r\n          <bd.Toggle\r\n            color=\"primary\"\r\n            dense\r\n            radio\r\n            size=\"sm\"\r\n            name=\"windowsAuthenticate\"\r\n            value=\"false\"\r\n            label={t(\"form\")}\r\n            model={windowsAuth}\r\n            setModel={setAuthType}\r\n            onClick={() => setActiveTab(\"second\")}\r\n          />\r\n          {windowsAuth === \"false\" && (\r\n            <div className=\"mt-4\">\r\n              <BasicInput name=\"password\" type=\"password\" label={t(\"password\")} labelSize=\"3\" autoComplete=\"off\" style={inputStyle} />\r\n              <BasicInput name=\"repeatePassword\" type=\"password\" label={t(\"repeate-password\")} labelSize=\"3\" autoComplete=\"off\" style={inputStyle} />\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"border-bottom\">\r\n        <bd.Toolbar className=\"container\">\r\n          <bd.Button variant=\"icon\" onClick={() => onGoBack()} size=\"md\" edge=\"start\" className=\"m-e-2\">\r\n            <icons.ArrowBackIos className=\"rtl-rotate-180\" />\r\n          </bd.Button>\r\n          <h5>{t(titlePage)}</h5>\r\n          <div className=\"flex-grow-1\" />\r\n\r\n          <bd.Button color=\"primary\" disabled={busy} onClick={() => formRef.current.submitForm()}>\r\n            {busy && <div className=\"m-e-2 spinner-border spinner-border-sm\"></div>}\r\n            <span>{t(\"save-changes\")}</span>\r\n          </bd.Button>\r\n\r\n          <bd.Button\r\n            className={classNames(\"m-s-2 edge-end\", {\r\n              \"d-none\": !userId,\r\n            })}\r\n            type=\"button\"\r\n            variant=\"outline\"\r\n            disabled={busy || deleting}\r\n            onClick={deleteClickHandler}\r\n          >\r\n            {deleting && <div className=\"m-e-2 spinner-border spinner-border-sm\"></div>}\r\n            <span>{t(\"delete\")}</span>\r\n          </bd.Button>\r\n        </bd.Toolbar>\r\n      </div>\r\n\r\n      <div className=\"container\">\r\n        {user && (\r\n          <Formik\r\n            initialValues={user}\r\n            validationSchema={yup.object({\r\n              firstName: yup.string().required(\"required\"),\r\n              lastName: yup.string().required(\"required\"),\r\n              userName: yup.string().required(\"required\"),\r\n              nationalCode: yup.string().required(\"required\").nullable(true),\r\n              email: yup.string().email(\"email not valid\").nullable(true),\r\n              // password: yup.string().when(\"windowsAuthenticate\", {\r\n              //   is: (value) => value == \"false\",\r\n              //   then: yup.string().required(\"required\"),\r\n              // }),\r\n              // repeatePassword: yup.string().when(\"password\", {\r\n              //   is: (value) => value && value.length > 0,\r\n              //   then: yup.string().required(\"required\"),\r\n              // }),\r\n              phoneNumber: yup.string().matches(/^[0-9]{11}$/, \"Must be exactly 11 digits\").nullable(true),\r\n            })}\r\n            onSubmit={onSaveClick}\r\n            innerRef={formRef}\r\n          >\r\n            <UserForm />\r\n          </Formik>\r\n        )}\r\n        {!user && (\r\n          <Formik\r\n            initialValues={{\r\n              firstName: \"\",\r\n              lastName: \"\",\r\n              userName: \"\",\r\n              nationalCode: \"\",\r\n              email: \"\",\r\n              password: \"\",\r\n              repeatePassword: \"\",\r\n              phoneNumber: \"\",\r\n              windowsAuthenticate: true,\r\n            }}\r\n            validationSchema={yup.object({\r\n              firstName: yup.string().required(\"required\"),\r\n              lastName: yup.string().required(\"required\"),\r\n              userName: yup.string().required(\"required\"),\r\n              nationalCode: yup.string().required(\"required\"),\r\n              email: yup.string().email(\"email not valid\"),\r\n              password: yup.string().when(\"windowsAuthenticate\", {\r\n                is: (value) => value == \"false\",\r\n                then: yup.string().required(\"required\"),\r\n              }),\r\n              repeatePassword: yup.string().when(\"password\", {\r\n                is: (value) => value && value.length > 0,\r\n                then: yup.string().required(\"required\"),\r\n              }),\r\n              phoneNumber: yup.string().matches(/^[0-9]{11}$/, \"Must be exactly 11 digits\"),\r\n            })}\r\n            onSubmit={onSaveClick}\r\n            innerRef={formRef}\r\n          >\r\n            <UserForm />\r\n          </Formik>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useMemo, useEffect, useState } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport * as bd from \"react-basic-design\";\r\nimport * as icons from \"../../../assets/icons\";\r\nimport { TableTitlebar } from \"../../../components/table\";\r\nimport { EditUser } from \"./edit-user\";\r\nimport { useAccount } from \"../../../app/account-context\";\r\nimport { userManagmentApi } from \"../../../api/user-managment-api\";\r\nimport { notify } from \"../../../components/basic/notify\";\r\nimport { RenderTableDiv } from \"../../../components/table/render-table-div\";\r\nimport { DefaultEditor } from \"../../../components/table/editors\";\r\nimport {\r\n  useTable,\r\n  useGlobalFilter,\r\n  usePagination,\r\n  useSortBy,\r\n  useFilters,\r\n  useGroupBy,\r\n  useExpanded,\r\n  useRowSelect,\r\n  //useBlockLayout,\r\n  useFlexLayout,\r\n  //useRowState,\r\n  useResizeColumns,\r\n} from \"react-table\";\r\n\r\nexport const UsersApp = () => {\r\n  const { t } = useTranslation();\r\n  const [editMode, setEditMode] = useState(false);\r\n  const account = useAccount();\r\n  const [users, setUsers] = useState(null);\r\n  const [selectedUser, setSelectedUser] = useState(null);\r\n\r\n  const defaultPageSize = 10;\r\n  const skipReset = true;\r\n\r\n  const addUserOnClick = () => {\r\n    setSelectedUser(null);\r\n    setEditMode(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!users && account.isConnected()) {\r\n      userManagmentApi\r\n        .getUsers()\r\n        .then((x) => {\r\n          setUsers(x);\r\n        })\r\n        .catch((ex) => {\r\n          notify.error(ex);\r\n        });\r\n    }\r\n  });\r\n\r\n  const tableApi = useTable(\r\n    {\r\n      initialState: { pageSize: defaultPageSize },\r\n      defaultColumn: {\r\n        Cell: DefaultEditor,\r\n        minWidth: 30,\r\n        disableGroupBy: true,\r\n        //maxWidth: 200,\r\n      },\r\n      columns: useMemo(\r\n        () => [\r\n          { Header: t(\"id\"), accessor: \"id\", width: 50 },\r\n          { Header: t(\"user-name\"), accessor: \"userName\", width: 100 },\r\n          { Header: t(\"first-name\"), accessor: \"firstName\" },\r\n          { Header: t(\"last-name\"), accessor: \"lastName\" },\r\n          { Header: t(\"national-code\"), accessor: \"nationalCode\" },\r\n          { Header: t(\"authenticate\"), accessor: \"windowsAuthenticate\", getDisplayValue: (value) => (value ? \"ويندوز\" : \"فرم\") },\r\n          {\r\n            Header: t(\"operation\"),\r\n            accessor: \"operation\",\r\n            Cell: ({ row }) => {\r\n              const data = row.original;\r\n              return (\r\n                <bd.Button\r\n                  size=\"sm\"\r\n                  color=\"inherit\"\r\n                  size\r\n                  onClick={() => {\r\n                    setSelectedUser(data.id);\r\n                    setEditMode(true);\r\n                  }}\r\n                >\r\n                  <icons.Edit className=\"size-md\" />\r\n                  {t(\"edit\")}\r\n                </bd.Button>\r\n              );\r\n            },\r\n          },\r\n        ],\r\n        []\r\n      ),\r\n      data: useMemo(() => (users ? users : []), [users]),\r\n      autoResetPage: !skipReset,\r\n      autoResetFilters: !skipReset,\r\n      autoResetSortBy: !skipReset,\r\n      autoResetSelectedRows: !skipReset,\r\n      autoResetGlobalFilter: !skipReset,\r\n      disableMultiSort: false,\r\n    },\r\n    useGlobalFilter,\r\n    useFilters,\r\n    useGroupBy,\r\n    useSortBy,\r\n    useExpanded,\r\n    usePagination,\r\n    useRowSelect,\r\n    //useBlockLayout,\r\n    useFlexLayout,\r\n    useResizeColumns\r\n    //(hooks) => reactTable.addSelectionColumns(hooks)\r\n  );\r\n\r\n  return (\r\n    <>\r\n      {!editMode && !users && <div className=\"middle d-flex h-100\">L O D I N G . . .</div>}\r\n      {!editMode && users && (\r\n        <>\r\n          <div className=\"border-bottom\">\r\n            <bd.Toolbar className=\"container\">\r\n              <bd.Button variant=\"text\" onClick={addUserOnClick}>\r\n                <icons.PersonAddAlt className=\"size-lg\" />\r\n              </bd.Button>\r\n            </bd.Toolbar>\r\n          </div>\r\n          <div className=\"container\">\r\n            <TableTitlebar tableApi={tableApi} hideSettings title=\"Columns\" fixed />\r\n            <RenderTableDiv\r\n              tableApi={tableApi}\r\n              resizable\r\n              //multiSelect\r\n              singleSelect\r\n              hideCheckbox\r\n              hasSummary\r\n              showTableInfo\r\n              showPageSize\r\n              enablePaging\r\n              enableGrouping\r\n              enableSorting\r\n              //editable\r\n              clickAction=\"select\"\r\n              className=\"border0 nano-scroll\"\r\n              //style={{ minHeight: 400 }}\r\n              hover\r\n              striped\r\n              hasWhitespace\r\n              stickyFooter\r\n            />\r\n          </div>\r\n        </>\r\n      )}\r\n      {editMode && (\r\n        <EditUser\r\n          userId={selectedUser}\r\n          onGoBack={(item) => {\r\n            setEditMode(false);\r\n            if (!!item && selectedUser == null) {\r\n              setUsers([...users, item]);\r\n              setSelectedUser(item.id);\r\n            } else if (!!item && selectedUser != null) {\r\n              const list = [...users];\r\n              const i = list.findIndex((x) => x.id === item.id);\r\n              list[i] = item;\r\n              setUsers(list);\r\n              setSelectedUser(item.id);\r\n            } else if (item === null) {\r\n              const newUsers = users.filter((x) => x.id !== selectedUser);\r\n              setUsers(newUsers);\r\n              setSelectedUser(null);\r\n            }\r\n          }}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nUsersApp.Appbar = {\r\n  title: \"users\",\r\n};\r\n","import React, { useRef, useEffect, useState } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport * as bd from \"react-basic-design\";\r\nimport * as icons from \"../../assets/icons\";\r\nimport * as yup from \"yup\";\r\nimport { BasicInput } from \"../../components/basic-form/basic-input\";\r\nimport { Form, Formik } from \"formik\";\r\nimport { accountApi } from \"../../api/account-api\";\r\nimport { notify } from \"../../components/basic/notify\";\r\nimport { useAccount } from \"../../app/account-context\";\r\n\r\nexport const UserProfileApp = () => {\r\n  const { t } = useTranslation();\r\n  const formRef = useRef();\r\n  const [editMode, setEditMode] = useState(false);\r\n  const [chPassMode, setChPassMode] = useState(false);\r\n  const [user, setUser] = useState(null);\r\n  const [WinAuth, setAuthType] = useState(true);\r\n  const [busy, setBusy] = useState(false);\r\n  const account = useAccount();\r\n  const Atthenticate = WinAuth ? \"WindowsAuthenticate\" : \"FormAuthenticate\";\r\n  const PageTitle = chPassMode ? \"change-password\" : \"edit-profile\";\r\n\r\n  useEffect(() => {\r\n    if (user == null && account.isConnected()) {\r\n      accountApi\r\n        .profileInfo()\r\n        .then((x) => {\r\n          if (!x.windowsAuthenticate) {\r\n            setAuthType(false);\r\n          }\r\n          setUser(x);\r\n        })\r\n        .catch((ex) => {\r\n          notify.error(ex);\r\n        });\r\n    }\r\n  });\r\n\r\n  const onGoBack = () => {\r\n    setEditMode(false);\r\n    setChPassMode(false);\r\n  };\r\n\r\n  const onSaveClick = (e) => {\r\n    if (!formRef.current) return false;\r\n    if (!formRef.current.isValid) return false;\r\n    var model = formRef.current.values;\r\n    setBusy(true);\r\n    if (editMode) {\r\n      accountApi\r\n        .updateUserProfile(model)\r\n        .then((x) => {\r\n          setBusy(false);\r\n          setUser(x);\r\n          notify.info(t(\"changes-are-saved\"));\r\n          onGoBack(x);\r\n        })\r\n        .catch((ex) => {\r\n          setBusy(false);\r\n          notify.error(ex);\r\n        });\r\n    }\r\n    if (chPassMode) {\r\n      accountApi\r\n      .changePassword(model)\r\n      .then((x) => {\r\n        setBusy(false);\r\n        notify.info(t(\"changes-are-saved\"));\r\n        onGoBack(x);\r\n      })\r\n      .catch((ex) => {\r\n        setBusy(false);\r\n        notify.error(ex);\r\n      });\r\n    }\r\n  };\r\n\r\n  const editProfileOnClick = () => {\r\n    setEditMode(true);\r\n    setChPassMode(false);\r\n  };\r\n  const changePasswordOnClick = () => {\r\n    setChPassMode(true);\r\n    setEditMode(false);\r\n  };\r\n\r\n  const ViewUserInfo = () => {\r\n    const inputStyle = {\r\n      maxWidth: 250,\r\n    };\r\n\r\n    return (\r\n      <div className=\"mt-4\">\r\n        <bd.Avatar alt=\"Image Profile\" src=\"/../../images/avatar/user3.jpg\" style={{ height: \"150px\", width: \"150px\" }} />\r\n        {!editMode && !chPassMode && user && (\r\n          <>\r\n            <h3 className=\"pt-3\">{user.userName}</h3>\r\n            <div className=\"row\">\r\n              <span>{user.firstName + \" \" + user.lastName}</span>\r\n            </div>\r\n            <div className=\"row pt-2\">\r\n              <span className=\"col-3\">{Atthenticate}</span>\r\n              {!WinAuth && (\r\n                <bd.Button className=\"col-3\" color=\"default\" onClick={changePasswordOnClick}>\r\n                  <span>{t(\"change-Password\")}</span>\r\n                </bd.Button>\r\n              )}\r\n            </div>\r\n            <div className=\"row pt-3\">\r\n              <bd.Button className=\"col-6\" color=\"default\" onClick={editProfileOnClick}>\r\n                <span>{t(\"edit-profile\")}</span>\r\n              </bd.Button>\r\n            </div>\r\n            <div className=\"row pt-2\">\r\n              <ul style={{ listStyleType: \"none\" }}>\r\n                {user.nationalCode && (\r\n                  <li className=\"pt-1\">\r\n                    <icons.Person className=\"size-md\" />\r\n                    <label> {user.nationalCode}</label>\r\n                  </li>\r\n                )}\r\n                {user.email && (\r\n                  <li>\r\n                    <icons.Mail className=\"size-md\" />\r\n                    <label> {user.email}</label>\r\n                  </li>\r\n                )}\r\n                {user.phoneNumber && (\r\n                  <li className=\"pt-1\">\r\n                    <icons.PhoneIphone className=\"size-md\" />\r\n                    <label>{user.phoneNumber}</label>\r\n                  </li>\r\n                )}\r\n              </ul>\r\n            </div>\r\n          </>\r\n        )}\r\n        {editMode && !chPassMode && (\r\n          <Formik\r\n            initialValues={user}\r\n            validationSchema={yup.object({\r\n              email: yup.string().email(\"email not valid\").nullable(true),\r\n              phoneNumber: yup\r\n                .string()\r\n                .matches(/^[0-9]{11}$/, \"Must be exactly 11 digits\")\r\n                .nullable(true),\r\n            })}\r\n            onSubmit={onSaveClick}\r\n            innerRef={formRef}\r\n          >\r\n            <form>\r\n              <BasicInput name=\"firstName\" label={t(\"first-name\")} labelSize=\"2\" autoComplete=\"off\" autoFocus style={inputStyle} />\r\n              <BasicInput name=\"lastName\" label={t(\"last-name\")} labelSize=\"2\" autoComplete=\"off\" style={inputStyle} />\r\n              <BasicInput name=\"userName\" label={t(\"user-name\")} readOnly labelSize=\"2\" autoComplete=\"off\" style={inputStyle} />\r\n              <BasicInput name=\"nationalCode\" label={t(\"national-code\")} labelSize=\"2\" autoComplete=\"off\" style={inputStyle} />\r\n              <BasicInput name=\"email\" label={t(\"email\")} labelSize=\"2\" autoComplete=\"off\" style={inputStyle} />\r\n              <BasicInput name=\"phoneNumber\" label={t(\"phone-number\")} labelSize=\"2\" autoComplete=\"off\" style={inputStyle} />\r\n            </form>\r\n          </Formik>\r\n        )}\r\n        {user && chPassMode && !editMode && (\r\n          <Formik\r\n            initialValues={{\r\n              userName: user.userName,\r\n              oldPassword: \"\",\r\n              password: \"\",\r\n              repeatePassword: \"\",\r\n            }}\r\n            validationSchema={yup.object({\r\n              oldPassword: yup.string().required(\"required\"),\r\n              password: yup.string().required(\"required\"),\r\n              repeatePassword: yup.string().oneOf([yup.ref(\"password\"), null], \"Passwords must match\"),\r\n            })}\r\n            onSubmit={onSaveClick}\r\n            innerRef={formRef}\r\n          >\r\n            <form>\r\n              <BasicInput name=\"userName\" style={{ display: \"none\" }} />\r\n              <BasicInput\r\n                name=\"oldPassword\"\r\n                type=\"password\"\r\n                label={t(\"old-password\")}\r\n                labelSize=\"2\"\r\n                autoComplete=\"off\"\r\n                autoFocus\r\n                style={inputStyle}\r\n              />\r\n              <BasicInput name=\"password\" type=\"password\" label={t(\"password\")} labelSize=\"2\" autoComplete=\"off\" style={inputStyle} />\r\n              <BasicInput name=\"repeatePassword\" type=\"password\" label={t(\"repeate-password\")} labelSize=\"2\" autoComplete=\"off\" style={inputStyle} />\r\n            </form>\r\n          </Formik>\r\n        )}\r\n      </div>\r\n    );\r\n  };\r\n  return (\r\n    <>\r\n      {editMode | chPassMode && (\r\n        <div className=\"border-bottom\">\r\n          <bd.Toolbar className=\"container\">\r\n            <bd.Button variant=\"icon\" onClick={() => onGoBack()} size=\"md\" edge=\"start\" className=\"m-e-2\">\r\n              <icons.ArrowBackIos className=\"rtl-rotate-180\" />\r\n            </bd.Button>\r\n            <h5>{t(PageTitle)}</h5>\r\n            <div className=\"flex-grow-1\" />\r\n            <bd.Button color=\"primary\" disabled={busy} onClick={() => formRef.current.submitForm()}>\r\n              {busy && <div className=\"m-e-2 spinner-border spinner-border-sm\"></div>}\r\n              <span>{t(\"save-changes\")}</span>\r\n            </bd.Button>\r\n          </bd.Toolbar>\r\n        </div>\r\n      )}\r\n      <div className=\"m-auto p-2\" style={{ maxWidth: 600 }}>\r\n        <ViewUserInfo />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nUserProfileApp.Appbar = {\r\n  title: \"user-profile\",\r\n  buttons: null,\r\n};\r\n","import React from \"react\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\n\r\nimport { ThemeProvider } from \"./app/theme-context\";\r\n\r\n/*\r\nimport BasicLayout from \"./components/layout/basic-layout\";\r\nimport Header from \"./views/shared/header\";\r\nimport Sidebar from \"./views/shared/sidebar\";\r\n\r\nimport AccountHeader from \"./views/account/account-header\";\r\nimport AccountFooter from \"./views/account/account-footer\";\r\nimport RegisterForm from \"./views/account/register-form\";\r\nimport LoginForm from \"./views/account/login-form\";\r\nimport ManageUsersForm from \"./views/manage/manage-users-form\";\r\n\r\nimport NotFound from \"./views/shared/not-found\";\r\nimport { AzRoute } from \"./app/az-route\";\r\nimport RoleForm from \"./views/admin/role-form\";\r\n\r\n\r\n\r\nimport ManageUsersForm from \"./views/manage/manage-users-form\";\r\n*/\r\nimport { AzRoute } from \"./app/az-route\";\r\nimport { MenuApp } from \"./views/admin/menu/menu-app\";\r\n\r\nimport { LoginForm } from \"./views/account/login-form\";\r\nimport { ForgotPassword } from \"./views/account/forgot-password\";\r\nimport NotFound from \"./views/shared/not-found\";\r\n\r\nimport { DashboardApp } from \"./views/home/dashboard/dashboard-app.js\";\r\nimport { InboxApp } from \"./views/home/inbox/inbox-app\";\r\nimport { LunchpadApp } from \"./views/home/lunchpad/lunchpad-app\";\r\nimport StartupApp from \"./views/home/startup/startup-app\";\r\nimport { MainLayout } from \"./views/shared/main-layout2\";\r\n\r\nimport { TablesApp } from \"./views/admin/tables/tables-app\";\r\nimport { FormDesignerApp } from \"./views/admin/form-designer/form-designer-app\";\r\nimport { TableDesignerApp } from \"./views/admin/table-designer/table-designer-app\";\r\nimport { UserSettingsApp } from \"./views/account/user-settings-app\";\r\nimport { UsersApp } from \"./views/admin/users/users-app\";\r\nimport { UserProfileApp } from \"./views/account/user-profile-app\";\r\n\r\nexport function App() {\r\n  return (\r\n    <ThemeProvider>\r\n      <Switch>\r\n        <Route exact path=\"/\" render={() => <StartupApp />} />\r\n\r\n        <Route exact path=\"/login\">\r\n          <main className=\"content h-100 middle text-secondary-text\">\r\n            <LoginForm />\r\n          </main>\r\n        </Route>\r\n\r\n        <Route exact path=\"/account/forgot-password\">\r\n          <main className=\"content h-100 middle text-secondary-text\">\r\n            <ForgotPassword />\r\n          </main>\r\n        </Route>\r\n\r\n        <AzRoute exact path=\"/user/settings\" render={() => <MainLayout component={UserSettingsApp} />} />\r\n\r\n        <AzRoute exact path=\"/account/user-profile\" render={() => <MainLayout component={UserProfileApp} />} />\r\n    \r\n\r\n        <AzRoute exact path=\"/admin/menu\" render={() => <MainLayout component={MenuApp} />} />\r\n\r\n        <AzRoute exact path=\"/admin/table-designer\" render={() => <MainLayout component={TableDesignerApp} />} />\r\n\r\n        <AzRoute exact path=\"/admin/form-designer\" render={() => <MainLayout component={FormDesignerApp} />} />\r\n\r\n        <AzRoute exact path=\"/admin/tables\" render={() => <MainLayout component={TablesApp} />} />\r\n\r\n        <AzRoute exact path=\"/admin/users\" render={() => <MainLayout component={UsersApp} />} />\r\n\r\n        <AzRoute exact path=\"/home\" render={() => <MainLayout component={LunchpadApp} />} />\r\n\r\n        <AzRoute exact path=\"/dashboard\" render={() => <MainLayout component={DashboardApp} />} />\r\n\r\n        <AzRoute exact path=\"/inbox\" render={() => <MainLayout component={InboxApp} />} />\r\n\r\n        <AzRoute render={() => <MainLayout component={NotFound} />} />\r\n      </Switch>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\n/*\r\n                <Route exact path=\"/admin/role\" render={() => <Layout content={RoleForm} />} />\r\n\r\n                <AzRoute exact path=\"/manage/users\" render={() => <Layout content={ManageUsersForm} />} />\r\n\r\n \r\n                <Route exact path=\"/account/login\"><Layout layout=\"hmf\" className=\"account account-light\" header={AccountHeader} content={LoginForm} footer={AccountFooter} light /></Route>\r\n                <Route exact path=\"/account/login2\"><Layout layout=\"hmf\" className=\"account account-dark\" header={AccountHeader} content={LoginForm} footer={AccountFooter} dark /></Route>\r\n                <Route exact path=\"/account/login3\"><Layout layout=\"hmf\" className=\"account account-dark with-background-image\" header={AccountHeader} content={LoginForm} footer={AccountFooter} dark /></Route>\r\n\r\n                <Route exact path=\"/account/register\"><Layout layout=\"hmf\" className=\"account account-light\" header={AccountHeader} content={RegisterForm} footer={AccountFooter} light /></Route>\r\n                <Route exact path=\"/account/register2\"><Layout layout=\"hmf\" className=\"account account-dark\" header={AccountHeader} content={RegisterForm} footer={AccountFooter} dark /></Route>\r\n                <Route exact path=\"/account/register3\"><Layout layout=\"hmf\" className=\"account account-dark with-background-image\" header={AccountHeader} content={RegisterForm} footer={AccountFooter} dark /></Route>\r\n */\r\n","import \"./bootstrap.scss\";\r\nimport \"./index.scss\";\r\n\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nimport React, { Suspense } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport * as bd from \"react-basic-design\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport { App } from \"./app\";\r\nimport i18n from \"i18next\";\r\nimport { initReactI18next } from \"react-i18next\";\r\nimport LanguageDetector from \"i18next-browser-languagedetector\";\r\nimport HttpApi from \"i18next-http-backend\";\r\nimport { apiConfig } from \"./api/config\";\r\nimport settings from \"./app/settings\";\r\nimport { AccountProvider } from \"./app/account-context\";\r\n\r\n//-----------\r\ni18n.use(HttpApi)\r\n    .use(LanguageDetector)\r\n    .use(initReactI18next)\r\n    .init({\r\n        supportedLngs: [\"en\", \"fa\"],\r\n        fallbackLng: \"en\",\r\n        debug: false,\r\n        saveMissing: settings.debugMode,\r\n\r\n        detection: {\r\n            order: [\"cookie\", \"path\", \"querystring\", \"localStorage\", \"sessionStorage\", \"navigator\", \"htmlTag\", \"subdomain\"],\r\n            caches: [\"localStorage\", \"cookie\"],\r\n        },\r\n        backend: {\r\n            //loadPath: \"/locales/{{lng}}.json\",\r\n            loadPath: apiConfig.localeUrl + \"/locales/{{lng}}.json\",\r\n        },\r\n        // react: { useSuspense: false },\r\n    });\r\n\r\ni18n.on(\"missingKey\", function (lngs, namespace, key, res) {\r\n    const currentLanguageCode = settings.getLanguageCode();\r\n    var lang_missings = settings.missingTranslations[currentLanguageCode];\r\n    if (!lang_missings) {\r\n        lang_missings = {};\r\n        settings.missingTranslations[currentLanguageCode] = lang_missings;\r\n    }\r\n    lang_missings[key] = res;\r\n});\r\n\r\n//-----------\r\nconst loadingMarkup = (\r\n    <div className=\"py-5 text-center\">\r\n        <h3>Loading..</h3>\r\n    </div>\r\n);\r\n\r\n//-----------\r\nvar t = bd.helper.getTheme();\r\nbd.helper.setTheme(!t ? \"bd-light\" : t);\r\n\r\nReactDOM.render(\r\n    <Suspense fallback={loadingMarkup}>\r\n        <React.StrictMode>\r\n            <BrowserRouter>\r\n                <AccountProvider>\r\n                    <App />\r\n                </AccountProvider>\r\n            </BrowserRouter>\r\n        </React.StrictMode>\r\n        <bd.MsgBoxContainer />\r\n        <ToastContainer\r\n            rtl={false}\r\n            limit={3}\r\n            position=\"bottom-left\"\r\n            autoClose={6000}\r\n            hideProgressBar={false}\r\n            newestOnTop={false}\r\n            closeOnClick\r\n            pauseOnFocusLoss\r\n            draggable\r\n            pauseOnHover\r\n        />\r\n    </Suspense>,\r\n    document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}